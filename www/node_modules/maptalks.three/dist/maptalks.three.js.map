{"version":3,"file":"maptalks.three.js","sources":["../src/ui/ToolTip.js","../src/BaseObject.js","../src/util/ThreeAdaptUtil.js","../src/util/MergeGeometryUtil.js","../src/util/BarUtil.js","../src/Bar.js","../node_modules/earcut/src/earcut.js","../node_modules/geometry-extrude/src/simplify.js","../node_modules/geometry-extrude/src/math.js","../node_modules/geometry-extrude/src/main.js","../src/util/GeoJSONUtil.js","../src/util/LineUtil.js","../src/Line.js","../src/ExtrudeLine.js","../src/util/ExtrudeUtil.js","../src/ExtrudePolygon.js","../src/Model.js","../src/util/GeoUtil.js","../src/ExtrudeLineTrail.js","../src/MergedMixin.js","../src/worker/MeshActor.js","../src/ExtrudePolygons.js","../src/util/IdentifyUtil.js","../src/Point.js","../src/util/BBox.js","../src/Points.js","../src/Bars.js","../src/ExtrudeLines.js","../src/Lines.js","../src/queue/TileDataQueue.js","../src/ThreeVectorTileLayer.js","../index.js"],"sourcesContent":["import * as maptalks from 'maptalks';\r\nimport BaseObject from './../BaseObject';\r\n\r\nclass ToolTip extends maptalks.ui.ToolTip {\r\n\r\n    /**\r\n    * Adds the UI Component to a BaseObject\r\n    * @param {BaseObject} owner - BaseObject to add.\r\n    * @returns {UIComponent} this\r\n    * @fires UIComponent#add\r\n    */\r\n    addTo(owner) {\r\n        if (owner instanceof BaseObject) {\r\n            owner.on('mousemove', this.onMouseMove, this);\r\n            owner.on('mouseout', this.onMouseOut, this);\r\n            this._owner = owner;\r\n            // first time\r\n            this._switchEvents('on');\r\n            if (this.onAdd) {\r\n                this.onAdd();\r\n            }\r\n            /**\r\n             * add event.\r\n             *\r\n             * @event ui.UIComponent#add\r\n             * @type {Object}\r\n             * @property {String} type - add\r\n             * @property {ui.UIComponent} target - UIComponent\r\n             */\r\n            this.fire('add');\r\n            return this;\r\n        } else {\r\n            throw new Error('Invalid BaseObject the tooltip is added to.');\r\n        }\r\n    }\r\n}\r\n\r\nexport default ToolTip;\r\n","import * as maptalks from 'maptalks';\r\nimport * as THREE from 'three';\r\nimport { ThreeLayer } from './../index';\r\nimport ToolTip from './ui/ToolTip';\r\n\r\nconst OPTIONS = {\r\n    interactive: true,\r\n    altitude: 0,\r\n    minZoom: 0,\r\n    maxZoom: 30,\r\n    asynchronous: false\r\n};\r\n\r\n/**\r\n * a Class for Eventable\r\n */\r\nclass Base {\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * EVENTS=[\r\n *  'add',\r\n *  'remove',\r\n    'mousemove',\r\n    'click',\r\n    'mousedown',\r\n    'mouseup',\r\n    'dblclick',\r\n    'contextmenu',\r\n    'touchstart',\r\n    'touchmove',\r\n    'touchend',\r\n    'mouseover',\r\n    'mouseout',\r\n    'idchange',\r\n    'propertieschange',\r\n    'show',\r\n    'hide',\r\n    'symbolchange'\r\n     empty\r\n];\r\n * This is the base class for all 3D objects\r\n *\r\n *\r\n * Its function and maptalks.geometry are as similar as possible\r\n *\r\n * maptalks.Eventable(Base) return a Class  https://github.com/maptalks/maptalks.js/blob/master/src/core/Eventable.js\r\n *\r\n */\r\nclass BaseObject extends maptalks.Eventable(Base) {\r\n    constructor(id) {\r\n        super();\r\n        this.isBaseObject = true;\r\n        this.isAdd = false;\r\n        this.object3d = null;\r\n        this.options = {};\r\n        this.toolTip = null;\r\n        this.infoWindow = null;\r\n        this._mouseover = false;\r\n        this._showPlayer = null;\r\n        this._vt = null;\r\n        if (id === undefined) {\r\n            id = maptalks.Util.GUID();\r\n        }\r\n        this.id = id;\r\n    }\r\n\r\n    addTo(layer) {\r\n        if (layer instanceof ThreeLayer) {\r\n            layer.addMesh(this);\r\n        } else {\r\n            console.error('layer only support maptalks.ThreeLayer');\r\n        }\r\n        return this;\r\n    }\r\n\r\n    remove() {\r\n        const layer = this.getLayer();\r\n        if (layer) {\r\n            layer.removeMesh(this);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    getObject3d() {\r\n        return this.object3d;\r\n    }\r\n\r\n    getId() {\r\n        return this.id;\r\n    }\r\n\r\n    setId(id) {\r\n        const oldId = this.getId();\r\n        this.id = id;\r\n        this._fire('idchange', {\r\n            'old': oldId,\r\n            'new': id,\r\n            'target': this\r\n        });\r\n        return this;\r\n    }\r\n\r\n    getType() {\r\n        return this.constructor.name;\r\n    }\r\n\r\n    getOptions() {\r\n        return this.options;\r\n    }\r\n\r\n    getProperties() {\r\n        return (this.options || {}).properties;\r\n    }\r\n\r\n    setProperties(property) {\r\n        const old = Object.assign({}, this.getProperties());\r\n        this.options.properties = property;\r\n        this._fire('propertieschange', {\r\n            'old': old,\r\n            'new': property,\r\n            'target': this\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    getLayer() {\r\n        return this.options.layer;\r\n    }\r\n\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    getMap() {\r\n        const layer = this.getLayer();\r\n        if (layer) {\r\n            return layer.getMap();\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    getCenter() {\r\n        const options = this.getOptions();\r\n        const { coordinate, lineString, polygon } = options;\r\n        if (coordinate) {\r\n            return coordinate;\r\n        } else {\r\n            const geometry = polygon || lineString;\r\n            if (geometry && geometry.getCenter) {\r\n                return geometry.getCenter();\r\n            }\r\n        }\r\n    }\r\n\r\n    getAltitude() {\r\n        return this.getOptions().altitude;\r\n    }\r\n\r\n\r\n    /**\r\n     * Different objects need to implement their own methods\r\n     * @param {*} altitude\r\n     */\r\n    setAltitude(altitude) {\r\n        if (maptalks.Util.isNumber(altitude)) {\r\n            const z = this.getLayer().distanceToVector3(altitude, altitude).x;\r\n            this.getObject3d().position.z = z;\r\n            this.options.altitude = altitude;\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    show() {\r\n        this.getObject3d().visible = true;\r\n        this._fire('show');\r\n        return this;\r\n    }\r\n\r\n\r\n    hide() {\r\n        this.getObject3d().visible = false;\r\n        this._fire('hide');\r\n        return this;\r\n    }\r\n\r\n    isVisible() {\r\n        return (!!this.getObject3d().visible);\r\n    }\r\n\r\n\r\n    /**\r\n     *  Different objects need to implement their own methods\r\n     */\r\n    getSymbol() {\r\n        return this.getObject3d().material;\r\n    }\r\n\r\n    /**\r\n     *  Different objects need to implement their own methods\r\n     * @param {*} material\r\n     */\r\n    setSymbol(material) {\r\n        if (material && material instanceof THREE.Material) {\r\n            material.needsUpdate = true;\r\n            material.vertexColors = this.getObject3d().material.vertexColors;\r\n            const old = this.getObject3d().material.clone();\r\n            this.getObject3d().material = material;\r\n            this._fire('symbolchange', {\r\n                'old': old,\r\n                'new': material,\r\n                'target': this\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setInfoWindow(options) {\r\n        this.infoWindow = new maptalks.ui.InfoWindow(options);\r\n        return this;\r\n    }\r\n\r\n    getInfoWindow() {\r\n        return this.infoWindow;\r\n    }\r\n\r\n    openInfoWindow(coordinate) {\r\n        // eslint-disable-next-line no-unused-expressions\r\n        (coordinate && this.infoWindow && this.infoWindow.show(coordinate));\r\n        return this;\r\n    }\r\n\r\n    closeInfoWindow() {\r\n        // eslint-disable-next-line no-unused-expressions\r\n        (this.infoWindow && this.infoWindow.hide());\r\n        return this;\r\n    }\r\n\r\n\r\n    removeInfoWindow() {\r\n        // eslint-disable-next-line no-unused-expressions\r\n        (this.infoWindow && this.infoWindow.remove() && (delete this.infoWindow));\r\n        return this;\r\n    }\r\n\r\n    setToolTip(content, options) {\r\n        this.toolTip = new ToolTip(content, options);\r\n        return this;\r\n    }\r\n\r\n    getToolTip() {\r\n        return this.toolTip;\r\n    }\r\n\r\n    openToolTip(coordinate) {\r\n        // eslint-disable-next-line no-unused-expressions\r\n        (coordinate && this.toolTip && this.toolTip.show(coordinate));\r\n        return this;\r\n    }\r\n\r\n    closeToolTip() {\r\n        // eslint-disable-next-line no-unused-expressions\r\n        (this.toolTip && this.toolTip.hide());\r\n        return this;\r\n    }\r\n\r\n    removeToolTip() {\r\n        // eslint-disable-next-line no-unused-expressions\r\n        (this.toolTip && this.toolTip.remove() && (delete this.toolTip));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * different components should implement their own animation methods\r\n     * @param {*} options\r\n     * @param {*} cb\r\n     */\r\n    // eslint-disable-next-line no-unused-vars\r\n    animateShow(options = {}, cb) {\r\n        if (this._showPlayer) {\r\n            this._showPlayer.cancel();\r\n        }\r\n        if (maptalks.Util.isFunction(options)) {\r\n            options = {};\r\n            cb = options;\r\n        }\r\n        const duration = options['duration'] || 1000,\r\n            easing = options['easing'] || 'out';\r\n        const player = this._showPlayer = maptalks.animation.Animation.animate({\r\n            'scale': 1\r\n        }, {\r\n            'duration': duration,\r\n            'easing': easing\r\n        }, frame => {\r\n            const scale = frame.styles.scale;\r\n            if (scale > 0) {\r\n                this.getObject3d().scale.set(1, 1, scale);\r\n            }\r\n            if (cb) {\r\n                cb(frame, scale);\r\n            }\r\n        });\r\n        player.play();\r\n        return player;\r\n    }\r\n\r\n\r\n    getMinZoom() {\r\n        return this.getOptions().minZoom;\r\n    }\r\n\r\n\r\n    getMaxZoom() {\r\n        return this.getOptions().maxZoom;\r\n    }\r\n\r\n    isAsynchronous() {\r\n        return this.getOptions().asynchronous;\r\n    }\r\n\r\n    fire(eventType, param) {\r\n        this._fire(eventType, param);\r\n        if (this._vt && this._vt.onSelectMesh) {\r\n            this._vt.onSelectMesh(eventType, param);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    config() {\r\n\r\n        return this;\r\n    }\r\n\r\n\r\n    /**\r\n     * more method support\r\n     * @param {*} options\r\n     */\r\n\r\n    /**\r\n     *\r\n     * @param {*} options\r\n     */\r\n\r\n    _initOptions(options) {\r\n        this.options = maptalks.Util.extend({}, OPTIONS, options);\r\n        return this;\r\n    }\r\n\r\n    _createMesh(geometry, material) {\r\n        this.object3d = new THREE.Mesh(geometry, material);\r\n        this.object3d.__parent = this;\r\n        return this;\r\n    }\r\n\r\n    _createGroup() {\r\n        this.object3d = new THREE.Group();\r\n        this.object3d.__parent = this;\r\n        return this;\r\n    }\r\n\r\n\r\n    _createLine(geometry, material) {\r\n        this.object3d = new THREE.Line(geometry, material);\r\n        this.object3d.computeLineDistances();\r\n        this.object3d.__parent = this;\r\n        return this;\r\n    }\r\n\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    _createPoints(geometry, material) {\r\n        //Serving for particles\r\n        this.object3d = new THREE.Points(geometry, material);\r\n        this.object3d.__parent = this;\r\n        return this;\r\n    }\r\n\r\n    _createLineSegments(geometry, material) {\r\n        this.object3d = new THREE.LineSegments(geometry, material);\r\n        this.object3d.computeLineDistances();\r\n        this.object3d.__parent = this;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport default BaseObject;\r\n","\r\nimport * as THREE from 'three';\r\n\r\n/**\r\n * three api adapt\r\n */\r\nconst REVISION = parseInt(THREE.REVISION);\r\n\r\n/**\r\n *\r\n * @param {THREE.BufferGeometry} bufferGeomertry\r\n * @param {String} key\r\n * @param {*} value\r\n */\r\nexport function addAttribute(bufferGeomertry, key, value) {\r\n    if (REVISION > 109) {\r\n        bufferGeomertry.setAttribute(key, value);\r\n    } else {\r\n        bufferGeomertry.addAttribute(key, value);\r\n    }\r\n    return bufferGeomertry;\r\n}\r\n","import * as THREE from 'three';\r\nimport { addAttribute } from './ThreeAdaptUtil';\r\n\r\nexport function mergeBufferGeometries(geometries) {\r\n    const attributes = {};\r\n    for (let i = 0; i < geometries.length; ++i) {\r\n        const geometry = geometries[i];\r\n        for (let name in geometry) {\r\n            if (attributes[name] === undefined) {\r\n                attributes[name] = [];\r\n            }\r\n            attributes[name].push(geometry[name]);\r\n        }\r\n    }\r\n    // merge attributes\r\n    const mergedGeometry = {};\r\n    let indexOffset = 0;\r\n    const mergedIndex = [];\r\n    for (let name in attributes) {\r\n        if (name === 'indices') {\r\n            const indices = attributes[name];\r\n            for (let i = 0, len = indices.length; i < len; i++) {\r\n                const index = indices[i];\r\n                for (let j = 0, len1 = index.length; j < len1; j++) {\r\n                    mergedIndex.push(index[j] + indexOffset);\r\n                }\r\n                indexOffset += attributes['position'][i].length / 3;\r\n            }\r\n        } else {\r\n            const mergedAttribute = mergeBufferAttributes(attributes[name]);\r\n            if (!mergedAttribute) return null;\r\n            mergedGeometry[name] = mergedAttribute;\r\n        }\r\n    }\r\n    mergedGeometry['indices'] = new Uint32Array(mergedIndex);\r\n    const { position, normal, uv, indices } = mergedGeometry;\r\n    const bufferGeomertry = new THREE.BufferGeometry();\r\n    const color = new Float32Array(position.length);\r\n    color.fill(1, 0, position.length);\r\n    addAttribute(bufferGeomertry, 'color', new THREE.BufferAttribute(color, 3));\r\n    addAttribute(bufferGeomertry, 'normal', new THREE.BufferAttribute(normal, 3));\r\n    addAttribute(bufferGeomertry, 'position', new THREE.BufferAttribute(position, 3));\r\n    if (uv && uv.length) {\r\n        addAttribute(bufferGeomertry, 'uv', new THREE.BufferAttribute(uv, 2));\r\n    }\r\n    bufferGeomertry.setIndex(new THREE.BufferAttribute(indices, 1));\r\n    return bufferGeomertry;\r\n}\r\n\r\n\r\n\r\nfunction mergeBufferAttributes(attributes) {\r\n    let arrayLength = 0;\r\n    for (let i = 0; i < attributes.length; ++i) {\r\n        const attribute = attributes[i];\r\n        arrayLength += attribute.length;\r\n    }\r\n    const array = new Float32Array(arrayLength);\r\n    let offset = 0;\r\n    for (let i = 0; i < attributes.length; ++i) {\r\n        array.set(attributes[i], offset);\r\n        offset += attributes[i].length;\r\n    }\r\n    return array;\r\n}\r\n","import * as THREE from 'three';\r\nimport { mergeBufferGeometries } from './MergeGeometryUtil';\r\nimport { addAttribute } from './ThreeAdaptUtil';\r\nconst barGeometryCache = {};\r\nconst KEY = '-';\r\n\r\n/**\r\n * Reuse Geometry   , Meter as unit\r\n * @param {*} property\r\n */\r\nexport function getGeometry(property, isCache = true) {\r\n    const {\r\n        height,\r\n        radialSegments,\r\n        radius,\r\n        _radius,\r\n        _height\r\n    } = property;\r\n    if (!isCache) { //for bars\r\n        const geometry = new THREE.CylinderBufferGeometry(radius, radius, height, radialSegments, 1);\r\n        geometry.rotateX(Math.PI / 2);\r\n        const parray = geometry.attributes.position.array;\r\n        for (let j = 0, len1 = parray.length; j < len1; j += 3) {\r\n            parray[j + 2] += (height / 2);\r\n        }\r\n        return geometry;\r\n    }\r\n    let geometry;\r\n    for (let i = 0; i <= 4; i++) {\r\n        let key = [(_height + i), _radius, radialSegments].join(KEY).toString();\r\n        geometry = barGeometryCache[key];\r\n        if (geometry) break;\r\n        key = [(_height - i), _radius, radialSegments].join(KEY).toString();\r\n        geometry = barGeometryCache[key];\r\n        if (geometry) break;\r\n    }\r\n    if (!geometry) {\r\n        const key = [_height, _radius, radialSegments].join(KEY).toString();\r\n        geometry = barGeometryCache[key] = new THREE.CylinderBufferGeometry(radius, radius, height, radialSegments, 1);\r\n        geometry.rotateX(Math.PI / 2);\r\n        const parray = geometry.attributes.position.array;\r\n        for (let j = 0, len1 = parray.length; j < len1; j += 3) {\r\n            parray[j + 2] += (height / 2);\r\n        }\r\n        return geometry;\r\n    }\r\n    return geometry;\r\n}\r\n\r\n\r\n/**\r\n * init Colors\r\n * @param {*} geometry\r\n * @param {*} color\r\n * @param {*} _topColor\r\n */\r\nexport function initVertexColors(geometry, color, _topColor, key = 'y', v = 0) {\r\n    let offset = 0;\r\n    if (key === 'y') {\r\n        offset = 1;\r\n    } else if (key === 'z') {\r\n        offset = 2;\r\n    }\r\n    const position = geometry.attributes.position.array;\r\n    const len = position.length;\r\n    const bottomColor = (color instanceof THREE.Color ? color : new THREE.Color(color));\r\n    const topColor = new THREE.Color(_topColor);\r\n    const colors = [];\r\n    for (let i = 0; i < len; i += 3) {\r\n        const y = position[i + offset];\r\n        if (y > v) {\r\n            colors.push(topColor.r, topColor.r, topColor.b);\r\n        } else {\r\n            colors.push(bottomColor.r, bottomColor.r, bottomColor.b);\r\n        }\r\n    }\r\n    addAttribute(geometry, 'color', new THREE.Float32BufferAttribute(colors, 3, true));\r\n    return colors;\r\n}\r\n\r\n\r\nexport function mergeBarGeometry(geometries) {\r\n    const attributes = [], colors = [];\r\n    for (let i = 0, len = geometries.length; i < len; i++) {\r\n        const { color, normal, position, uv } = geometries[i].attributes;\r\n        const index = geometries[i].index;\r\n        for (let j = 0, len1 = color.array.length; j < len1; j++) {\r\n            colors.push(color.array[j]);\r\n        }\r\n        attributes.push({\r\n            // color: color.array,\r\n            normal: normal.array,\r\n            uv: uv.array,\r\n            position: position.array,\r\n            indices: index.array\r\n        });\r\n    }\r\n    const bufferGeometry = mergeBufferGeometries(attributes);\r\n    for (let i = 0, len = colors.length; i < len; i++) {\r\n        bufferGeometry.attributes.color.array[i] = colors[i];\r\n    }\r\n    return bufferGeometry;\r\n\r\n}\r\n\r\n\r\n","import * as maptalks from 'maptalks';\r\nimport * as THREE from 'three';\r\nimport BaseObject from './BaseObject';\r\nimport { getGeometry, initVertexColors } from './util/BarUtil';\r\n\r\n\r\nconst OPTIONS = {\r\n    radius: 10,\r\n    height: 100,\r\n    radialSegments: 6,\r\n    altitude: 0,\r\n    topColor: null,\r\n    bottomColor: '#2d2f61',\r\n};\r\n\r\n\r\n/**\r\n *\r\n */\r\nclass Bar extends BaseObject {\r\n    constructor(coordinate, options, material, layer) {\r\n        options = maptalks.Util.extend({}, OPTIONS, options, { layer, coordinate });\r\n        super();\r\n        this._initOptions(options);\r\n        const { height, radius, topColor, bottomColor, altitude } = options;\r\n        options.height = layer.distanceToVector3(height, height).x;\r\n        options.radius = layer.distanceToVector3(radius, radius).x;\r\n        // Meter as unit\r\n        options._radius = this.options.radius;\r\n        options._height = this.options.height;\r\n        this._h = options.height;\r\n        const geometry = getGeometry(options);\r\n        if (topColor && !material.map) {\r\n            initVertexColors(geometry, bottomColor, topColor, 'z', options.height / 2);\r\n            material.vertexColors = THREE.VertexColors;\r\n        }\r\n        this._createMesh(geometry, material);\r\n        const z = layer.distanceToVector3(altitude, altitude).x;\r\n        const position = layer.coordinateToVector3(coordinate, z);\r\n        this.getObject3d().position.copy(position);\r\n        // this.getObject3d().rotation.x = Math.PI / 2;\r\n        // this.getObject3d().translateY(options.height / 2);\r\n    }\r\n}\r\n\r\nexport default Bar;\r\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize);\n                earcutLinked(c, triangles, dim, minX, minY, invSize);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        var b = splitPolygon(outerNode, hole);\n        filterPoints(b, b.next);\n    }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","/*\n (c) 2017, Vladimir Agafonkin\n Simplify.js, a high-performance JS polyline simplification library\n mourner.github.io/simplify-js\n*/\n\n// to suit your point format, run search/replace for '.x' and '.y';\n// for 3D version, see 3d branch (configurability would draw significant performance overhead)\n\n// square distance between 2 points\nfunction getSqDist(p1, p2) {\n\n    var dx = p1[0] - p2[0],\n        dy = p1[1] - p2[1];\n\n    return dx * dx + dy * dy;\n}\n\n// square distance from a point to a segment\nfunction getSqSegDist(p, p1, p2) {\n\n    var x = p1[0],\n        y = p1[1],\n        dx = p2[0] - x,\n        dy = p2[1] - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((p[0] - x) * dx + (p[1] - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = p2[0];\n            y = p2[1];\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = p[0] - x;\n    dy = p[1] - y;\n\n    return dx * dx + dy * dy;\n}\n// rest of the code doesn't care about point format\n\n// basic distance-based simplification\nfunction simplifyRadialDist(points, sqTolerance) {\n\n    var prevPoint = points[0],\n        newPoints = [prevPoint],\n        point;\n\n    for (var i = 1, len = points.length; i < len; i++) {\n        point = points[i];\n\n        if (getSqDist(point, prevPoint) > sqTolerance) {\n            newPoints.push(point);\n            prevPoint = point;\n        }\n    }\n\n    if (prevPoint !== point) newPoints.push(point);\n\n    return newPoints;\n}\n\nfunction simplifyDPStep(points, first, last, sqTolerance, simplified) {\n    var maxSqDist = sqTolerance,\n        index;\n\n    for (var i = first + 1; i < last; i++) {\n        var sqDist = getSqSegDist(points[i], points[first], points[last]);\n\n        if (sqDist > maxSqDist) {\n            index = i;\n            maxSqDist = sqDist;\n        }\n    }\n\n    if (maxSqDist > sqTolerance) {\n        if (index - first > 1) simplifyDPStep(points, first, index, sqTolerance, simplified);\n        simplified.push(points[index]);\n        if (last - index > 1) simplifyDPStep(points, index, last, sqTolerance, simplified);\n    }\n}\n\n// simplification using Ramer-Douglas-Peucker algorithm\nfunction simplifyDouglasPeucker(points, sqTolerance) {\n    var last = points.length - 1;\n\n    var simplified = [points[0]];\n    simplifyDPStep(points, 0, last, sqTolerance, simplified);\n    simplified.push(points[last]);\n\n    return simplified;\n}\n\n// both algorithms combined for awesome performance\nfunction simplify(points, tolerance, highestQuality) {\n\n    if (points.length <= 2) return points;\n\n    var sqTolerance = tolerance !== undefined ? tolerance * tolerance : 1;\n\n    points = highestQuality ? points : simplifyRadialDist(points, sqTolerance);\n    points = simplifyDouglasPeucker(points, sqTolerance);\n\n    return points;\n}\nexport default simplify;","export function dot(v1, v2) {\n    return v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2];\n}\nexport function v2Dot(v1, v2) {\n    return v1[0] * v2[0] + v1[1] * v2[1];\n}\n\nexport function normalize(out, v) {\n    const x = v[0];\n    const y = v[1];\n    const z = v[2];\n    const d = Math.sqrt(x * x + y * y + z * z);\n    out[0] = x / d;\n    out[1] = y / d;\n    out[2] = z / d;\n    return out;\n}\n\nexport function v2Normalize(out, v) {\n    const x = v[0];\n    const y = v[1];\n    const d = Math.sqrt(x * x + y * y);\n    out[0] = x / d;\n    out[1] = y / d;\n    return out;\n}\n\nexport function scale(out, v, s) {\n    out[0] = v[0] * s;\n    out[1] = v[1] * s;\n    out[2] = v[2] * s;\n    return out;\n}\n\nexport function mul(out, v1, v2) {\n    out[0] = v1[0] * v2[0];\n    out[1] = v1[1] * v2[1];\n    out[2] = v1[2] * v2[2];\n    return out;\n}\n\nexport function scaleAndAdd(out, v1, v2, s) {\n    out[0] = v1[0] + v2[0] * s;\n    out[1] = v1[1] + v2[1] * s;\n    out[2] = v1[2] + v2[2] * s;\n    return out;\n}\n\nexport function add(out, v1, v2) {\n    out[0] = v1[0] + v2[0];\n    out[1] = v1[1] + v2[1];\n    out[2] = v1[2] + v2[2];\n    return out;\n}\n\nexport function v2Add(out, v1, v2) {\n    out[0] = v1[0] + v2[0];\n    out[1] = v1[1] + v2[1];\n    return out;\n}\n\nexport function sub(out, v1, v2) {\n    out[0] = v1[0] - v2[0];\n    out[1] = v1[1] - v2[1];\n    out[2] = v1[2] - v2[2];\n    return out;\n}\n\nexport function v2Sub(out, v1, v2) {\n    out[0] = v1[0] - v2[0];\n    out[1] = v1[1] - v2[1];\n    return out;\n}\n\nexport function v3Sub(out, v1, v2) {\n    out[0] = v1[0] - v2[0];\n    out[1] = v1[1] - v2[1];\n    out[2] = v1[2] - v2[2];\n    return out;\n}\n\nexport function v3Normalize(out, v) {\n    const x = v[0];\n    const y = v[1];\n    const z = v[2];\n    const d = Math.sqrt(x * x + y * y + z * z);\n    out[0] = x / d;\n    out[1] = y / d;\n    out[2] = z / d;\n    return out;\n}\n\nexport function v3Cross(out, v1, v2) {\n    var ax = v1[0], ay = v1[1], az = v1[2],\n        bx = v2[0], by = v2[1], bz = v2[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n}\n\nconst rel = [];\n// start and end must be normalized\nexport function slerp(out, start, end, t) {\n    // https://keithmaggio.wordpress.com/2011/02/15/math-magician-lerp-slerp-and-nlerp/\n    const cosT = dot(start, end);\n    const theta = Math.acos(cosT) * t;\n\n    scaleAndAdd(rel, end, start, -cosT);\n    normalize(rel, rel);// start and rel Orthonormal basis\n\n    scale(out, start, Math.cos(theta));\n    scaleAndAdd(out, out, rel, Math.sin(theta));\n\n    return out;\n}\n\nexport function lineIntersection(x1, y1, x2, y2, x3, y3, x4, y4, out, writeOffset) {\n    const dx1 = x2 - x1;\n    const dx2 = x4 - x3;\n    const dy1 = y2 - y1;\n    const dy2 = y4 - y3;\n\n    const cross = dy2 * dx1 - dx2 * dy1;\n    const tmp1 = y1 - y3;\n    const tmp2 = x1 - x3;\n    const t1 = (dx2 * tmp1 - dy2 * tmp2) / cross;\n    // const t2 = (dx1 * tmp1 - dy1 * tmp2) / cross;\n\n    out[writeOffset] = x1 + t1 * (x2 - x1);\n    out[writeOffset + 1] = y1 + t1 * (y2 - y1);\n\n    return t1;\n}\n\nexport function area(points, start, end) {\n    // Signed polygon area\n    const n = end - start;\n    if (n < 3) {\n        return 0;\n    }\n    let area = 0;\n    for (let i = (end - 1) * 2, j = start * 2; j < end * 2;) {\n        const x0 = points[i];\n        const y0 = points[i + 1];\n        const x1 = points[j];\n        const y1 = points[j + 1];\n        i = j;\n        j += 2;\n        area += x0 * y1 - x1 * y0;\n    }\n\n    return area;\n}\n\n\nexport function triangleArea(x0, y0, x1, y1, x2, y2) {\n    return (x1 - x0) * (y2 - y1) - (y1 - y0) * (x2 - x1);\n}","// TODO fitRect x, y are negative?\n// TODO Dimensions\n// TODO bevel=\"top\"|\"bottom\"\n\nimport earcut from 'earcut';\nimport doSimplify from './simplify';\nimport {\n    slerp, v2Normalize, v2Dot, v2Add, area,\n    v3Normalize, v3Sub, v3Cross\n} from './math';\n\nexport function triangulate(vertices, holes, dimensions=2) {\n    return earcut(vertices, holes, dimensions);\n};\n\nexport function flatten(data) {\n    return earcut.flatten(data);\n}\n\nconst v1 = [];\nconst v2 = [];\nconst v = [];\n\nfunction innerOffsetPolygon(\n    vertices, out, start, end, outStart, offset, miterLimit, close\n) {\n    const checkMiterLimit = miterLimit != null;\n    let outOff = outStart;\n    let indicesMap = null;\n    if (checkMiterLimit) {\n        indicesMap = new Uint32Array(end - start);\n    }\n    for (let i = start; i < end; i++) {\n        const nextIdx = i === end - 1 ? start : i + 1;\n        const prevIdx = i === start ? end - 1 : i - 1;\n        const x1 = vertices[prevIdx * 2];\n        const y1 = vertices[prevIdx * 2 + 1];\n        const x2 = vertices[i * 2];\n        const y2 = vertices[i * 2 + 1];\n        const x3 = vertices[nextIdx * 2];\n        const y3 = vertices[nextIdx * 2 + 1];\n\n        v1[0] = x2 - x1;\n        v1[1] = y2 - y1;\n        v2[0] = x3 - x2;\n        v2[1] = y3 - y2;\n\n        v2Normalize(v1, v1);\n        v2Normalize(v2, v2);\n\n        checkMiterLimit && (indicesMap[i] = outOff);\n        if (!close && i === start) {\n            v[0] = v2[1];\n            v[1] = -v2[0];\n            v2Normalize(v, v);\n            out[outOff * 2] = x2 + v[0] * offset;\n            out[outOff * 2 + 1] = y2 + v[1] * offset;\n            outOff++;\n        }\n        else if (!close && i === end - 1) {\n            v[0] = v1[1];\n            v[1] = -v1[0];\n            v2Normalize(v, v);\n            out[outOff * 2] = x2 + v[0] * offset;\n            out[outOff * 2 + 1] = y2 + v[1] * offset;\n            outOff++;\n        }\n        else {\n            // PENDING Why using sub will lost the direction info.\n            v2Add(v, v2, v1);\n            const tmp = v[1];\n            v[1] = -v[0];\n            v[0] = tmp;\n\n            v2Normalize(v, v);\n\n            const cosA = v2Dot(v, v2);\n            const sinA = Math.sqrt(1 - cosA * cosA);\n            // PENDING\n            const miter = offset * Math.min(10, 1 / sinA);\n\n            const isCovex = offset * cosA < 0;\n\n            if (checkMiterLimit && (1 / sinA) > miterLimit && isCovex) {\n                const mx = x2 + v[0] * offset;\n                const my = y2 + v[1] * offset;\n                const halfA = Math.acos(sinA) / 2;\n                const dist = Math.tan(halfA) * Math.abs(offset);\n                out[outOff * 2] = mx + v[1] * dist;\n                out[outOff * 2 + 1] = my - v[0] * dist;\n                outOff++;\n                out[outOff * 2] = mx - v[1] * dist;\n                out[outOff * 2 + 1] = my + v[0] * dist;\n                outOff++;\n            }\n            else {\n                out[outOff * 2] = x2 + v[0] * miter;\n                out[outOff * 2 + 1] = y2 + v[1] * miter;\n                outOff++;\n            }\n        }\n    }\n\n    return indicesMap;\n}\n\nexport function offsetPolygon(vertices, holes, offset, miterLimit, close) {\n    const offsetVertices = miterLimit != null ? [] : new Float32Array(vertices.length);\n    const exteriorSize = (holes && holes.length) ? holes[0] : vertices.length / 2;\n\n    innerOffsetPolygon(\n        vertices, offsetVertices, 0, exteriorSize, 0, offset, miterLimit, close, false\n    );\n\n    if (holes) {\n        for (let i = 0; i < holes.length; i++) {\n            const start = holes[i];\n            const end = holes[i + 1] || vertices.length / 2;\n            innerOffsetPolygon(\n                vertices, offsetVertices, start, end,\n                miterLimit != null ? offsetVertices.length / 2 : start,\n                offset, miterLimit, close\n            );\n        }\n    }\n\n    return offsetVertices;\n}\n\nfunction reversePoints(points, stride, start, end) {\n    for (let i = 0; i < Math.floor((end - start) / 2); i++) {\n        for (let j = 0; j < stride; j++) {\n            const a = (i + start) * stride + j;\n            const b = (end - i - 1) * stride + j;\n            const tmp = points[a];\n            points[a] = points[b];\n            points[b] = tmp;\n        }\n    }\n\n    return points;\n}\n\nfunction convertToClockwise(vertices, holes) {\n    let polygonVertexCount = vertices.length / 2;\n    let start = 0;\n    let end = holes && holes.length ? holes[0] : polygonVertexCount;\n    if (area(vertices, start, end) > 0) {\n        reversePoints(vertices, 2, start, end);\n    }\n    for (let h = 1; h < (holes ? holes.length : 0) + 1; h++) {\n        start = holes[h - 1];\n        end = holes[h] || polygonVertexCount;\n        if (area(vertices, start, end) < 0) {\n            reversePoints(vertices, 2, start, end);\n        }\n    }\n}\n\nfunction normalizeOpts(opts) {\n\n    opts.depth = opts.depth || 1;\n    opts.bevelSize = opts.bevelSize || 0;\n    opts.bevelSegments = opts.bevelSegments == null ? 2 : opts.bevelSegments;\n    opts.smoothSide = opts.smoothSide || false;\n    opts.smoothBevel = opts.smoothBevel || false;\n    opts.simplify = opts.simplify || 0;\n\n    // Normalize bevel options.\n    if (typeof opts.depth === 'number') {\n        opts.bevelSize = Math.min(!(opts.bevelSegments > 0) ? 0 : opts.bevelSize, opts.depth / 2);\n    }\n    if (!(opts.bevelSize > 0)) {\n        opts.bevelSegments = 0;\n    }\n    opts.bevelSegments = Math.round(opts.bevelSegments);\n\n    const boundingRect = opts.boundingRect;\n    opts.translate = opts.translate || [0, 0];\n    opts.scale = opts.scale || [1, 1];\n    if (opts.fitRect) {\n        let targetX = opts.fitRect.x == null\n            ? (boundingRect.x || 0)\n            : opts.fitRect.x;\n        let targetY = opts.fitRect.y == null\n            ? (boundingRect.y || 0)\n            : opts.fitRect.y;\n        let targetWidth = opts.fitRect.width;\n        let targetHeight = opts.fitRect.height;\n        if (targetWidth == null) {\n            if (targetHeight != null) {\n                targetWidth = targetHeight / boundingRect.height * boundingRect.width;\n            }\n            else {\n                targetWidth = boundingRect.width;\n                targetHeight = boundingRect.height;\n            }\n        }\n        else if (targetHeight == null) {\n            targetHeight = targetWidth / boundingRect.width * boundingRect.height;\n        }\n        opts.scale = [\n            targetWidth / boundingRect.width,\n            targetHeight / boundingRect.height\n        ];\n        opts.translate = [\n            (targetX - boundingRect.x) * opts.scale[0],\n            (targetY - boundingRect.y) * opts.scale[1]\n        ];\n    }\n}\n\nfunction generateNormal(indices, position) {\n\n    function v3Set(p, a, b, c) {\n        p[0] = a; p[1] = b; p[2] = c;\n    }\n\n    const p1 = [];\n    const p2 = [];\n    const p3 = [];\n\n    const v21 = [];\n    const v32 = [];\n\n    const n = [];\n\n    const len = indices.length;\n    const normals = new Float32Array(position.length);\n    for (let f = 0; f < len;) {\n        const i1 = indices[f++] * 3;\n        const i2 = indices[f++] * 3;\n        const i3 = indices[f++] * 3;\n\n        v3Set(p1, position[i1], position[i1 + 1], position[i1 + 2]);\n        v3Set(p2, position[i2], position[i2 + 1], position[i2 + 2]);\n        v3Set(p3, position[i3], position[i3 + 1], position[i3 + 2]);\n\n        v3Sub(v21, p1, p2);\n        v3Sub(v32, p2, p3);\n        v3Cross(n, v21, v32);\n        // Already be weighted by the triangle area\n        for (let i = 0; i < 3; i++) {\n            normals[i1 + i] = normals[i1 + i] + n[i];\n            normals[i2 + i] = normals[i2 + i] + n[i];\n            normals[i3 + i] = normals[i3 + i] + n[i];\n        }\n    }\n\n    for (var i = 0; i < normals.length;) {\n        v3Set(n, normals[i], normals[i+1], normals[i+2]);\n        v3Normalize(n, n);\n        normals[i++] = n[0];\n        normals[i++] = n[1];\n        normals[i++] = n[2];\n    }\n\n    return normals;\n}\n// 0,0----1,0\n// 0,1----1,1\nconst quadToTriangle = [\n    [0, 0], [1, 0], [1, 1],\n    [0, 0], [1, 1], [0, 1]\n];\n\n// Add side vertices and indices. Include bevel.\nfunction addExtrudeSide(\n    out, {vertices, topVertices, depth, rect}, start, end,\n    cursors, opts\n) {\n    const ringVertexCount = end - start;\n    const splitSide = opts.smoothSide ? 1 : 2;\n    const splitRingVertexCount = ringVertexCount * splitSide;\n\n    const splitBevel = opts.smoothBevel ? 1 : 2;\n    const bevelSize = Math.min(depth / 2, opts.bevelSize);\n    const bevelSegments = opts.bevelSegments;\n    const vertexOffset = cursors.vertex;\n    const size = Math.max(rect.width, rect.height);\n\n    // Side vertices\n    if (bevelSize > 0) {\n\n        const v0 = [0, 0, 1];\n        const v1 = [];\n        const v2 = [0, 0, -1];\n        const v = [];\n\n        let ringCount = 0;\n        let vLen = new Float32Array(ringVertexCount);\n        for (let k = 0; k < 2; k++) {\n            const z = (k === 0 ? (depth - bevelSize) : bevelSize);\n            for (let s = 0; s <= bevelSegments * splitBevel; s++) {\n                let uLen = 0;\n                let prevX;\n                let prevY;\n                for (let i = 0; i < ringVertexCount; i++) {\n\n                    for (let j = 0; j < splitSide; j++) {\n                        // TODO Cache and optimize\n                        let idx = ((i + j) % ringVertexCount + start) * 2;\n                        v1[0] = vertices[idx] - topVertices[idx];\n                        v1[1] = vertices[idx + 1] - topVertices[idx + 1];\n                        v1[2] = 0;\n                        const l = Math.sqrt(v1[0] * v1[0] + v1[1] * v1[1]);\n                        v1[0] /= l;\n                        v1[1] /= l;\n\n                        const t = (Math.floor(s / splitBevel) + (s % splitBevel)) / bevelSegments;\n                        k === 0 ? slerp(v, v0, v1, t)\n                            : slerp(v, v1, v2, t);\n\n                        const t2 = k === 0  ? t : 1 - t;\n                        const a = bevelSize * Math.sin(t2 * Math.PI / 2);\n                        const b = l * Math.cos(t2 * Math.PI / 2);\n\n                        // ellipse radius\n                        const r = bevelSize * l / Math.sqrt(a * a + b * b);\n\n                        const x = v[0] * r + topVertices[idx];\n                        const y = v[1] * r + topVertices[idx + 1];\n                        const zz = v[2] * r + z;\n                        out.position[cursors.vertex * 3] = x;\n                        out.position[cursors.vertex * 3 + 1] = y;\n                        out.position[cursors.vertex * 3 + 2] = zz;\n\n                        // TODO Cache and optimize\n                        if (i > 0 || j > 0) {\n                            uLen += Math.sqrt((prevX - x) * (prevX - x) + (prevY - y) * (prevY - y));\n                        }\n                        if (s > 0 || k > 0) {\n                            let tmp = (cursors.vertex - splitRingVertexCount) * 3;\n                            let prevX2 = out.position[tmp];\n                            let prevY2 = out.position[tmp + 1];\n                            let prevZ2 = out.position[tmp + 2];\n\n                            vLen[i] += Math.sqrt(\n                                (prevX2 - x) * (prevX2 - x)\n                                + (prevY2 - y) * (prevY2 - y)\n                                + (prevZ2 - zz) * (prevZ2 - zz)\n                            );\n                        }\n                        out.uv[cursors.vertex * 2] = uLen / size;\n                        out.uv[cursors.vertex * 2 + 1] = vLen[i] / size;\n\n                        prevX = x;\n                        prevY = y;\n                        cursors.vertex++;\n                    }\n\n                    if ((splitBevel > 1 && (s % splitBevel)) || (splitBevel === 1 && s >= 1)) {\n                        for (let f = 0; f < 6; f++) {\n                            const m = (quadToTriangle[f][0] + i * splitSide) % splitRingVertexCount;\n                            const n = quadToTriangle[f][1] + ringCount;\n                            out.indices[cursors.index++] = (n - 1) * splitRingVertexCount + m + vertexOffset;\n                        }\n                    }\n                }\n\n                ringCount++;\n            }\n        }\n    }\n    else {\n        for (let k = 0; k < 2; k++) {\n            const z = k === 0 ? depth - bevelSize : bevelSize;\n            let uLen = 0;\n            let prevX;\n            let prevY;\n            for (let i = 0; i < ringVertexCount; i++) {\n                for (let m = 0; m < splitSide; m++) {\n                    const idx = ((i + m) % ringVertexCount + start) * 2;\n                    const x = vertices[idx];\n                    const y = vertices[idx + 1];\n                    out.position[cursors.vertex * 3] = x;\n                    out.position[cursors.vertex * 3 + 1] = y;\n                    out.position[cursors.vertex * 3 + 2] = z;\n                    if (i > 0 || m > 0) {\n                        uLen += Math.sqrt((prevX - x) * (prevX - x) + (prevY - y) * (prevY - y));\n                    }\n                    out.uv[cursors.vertex * 2] = uLen / size;\n                    out.uv[cursors.vertex * 2 + 1] = z / size;\n                    prevX = x;\n                    prevY = y;\n\n                    cursors.vertex++;\n                }\n            }\n        }\n    }\n    // Connect the side\n    const sideStartRingN = bevelSize > 0 ? (bevelSegments * splitBevel + 1) : 1;\n    for (let i = 0; i < ringVertexCount; i++) {\n        for (let f = 0; f < 6; f++) {\n            const m = (quadToTriangle[f][0] + i * splitSide) % splitRingVertexCount;\n            const n = quadToTriangle[f][1] + sideStartRingN;\n            out.indices[cursors.index++] = (n - 1) * splitRingVertexCount + m + vertexOffset;\n        }\n    }\n}\n\nfunction addTopAndBottom({indices, vertices, topVertices, rect, depth}, out, cursors, opts) {\n    if (vertices.length <= 4) {\n        return;\n    }\n\n    const vertexOffset = cursors.vertex;\n    // Top indices\n    const indicesLen = indices.length;\n    for (let i = 0; i < indicesLen; i++) {\n        out.indices[cursors.index++] = vertexOffset + indices[i];\n    }\n    const size = Math.max(rect.width, rect.height);\n    // Top and bottom vertices\n    for (let k = 0; k < (opts.excludeBottom ? 1 : 2); k++) {\n        for (let i = 0; i < topVertices.length; i += 2) {\n            const x = topVertices[i];\n            const y = topVertices[i + 1];\n            out.position[cursors.vertex * 3] = x;\n            out.position[cursors.vertex * 3 + 1] = y;\n            out.position[cursors.vertex * 3 + 2] = (1 - k) * depth;\n\n            out.uv[cursors.vertex * 2] = (x - rect.x) / size;\n            out.uv[cursors.vertex * 2 + 1] = (y - rect.y) / size;\n            cursors.vertex++;\n        }\n    }\n    // Bottom indices\n    if (!opts.excludeBottom) {\n        const vertexCount = vertices.length / 2;\n        for (let i = 0; i < indicesLen; i += 3) {\n            for (let k = 0; k < 3; k++) {\n                out.indices[cursors.index++] = vertexOffset + vertexCount + indices[i + 2 - k];\n            }\n        }\n    }\n}\n\n\nfunction innerExtrudeTriangulatedPolygon(preparedData, opts) {\n    let indexCount = 0;\n    let vertexCount = 0;\n\n    for (let p = 0; p < preparedData.length; p++) {\n        const {indices, vertices, holes, depth} = preparedData[p];\n        const polygonVertexCount = vertices.length / 2;\n        const bevelSize = Math.min(depth / 2, opts.bevelSize);\n        const bevelSegments = !(bevelSize > 0) ? 0 : opts.bevelSegments;\n\n        indexCount += indices.length * (opts.excludeBottom ? 1 : 2);\n        vertexCount += polygonVertexCount * (opts.excludeBottom ? 1 : 2);\n        const ringCount = 2 + bevelSegments * 2;\n\n        let start = 0;\n        let end = 0;\n        for (let h = 0; h < (holes ? holes.length : 0) + 1; h++) {\n            if (h === 0) {\n                end = holes && holes.length ? holes[0] : polygonVertexCount;\n            }\n            else {\n                start = holes[h - 1];\n                end = holes[h] || polygonVertexCount;\n            }\n\n            indexCount += (end - start) * 6 * (ringCount - 1);\n\n            const sideRingVertexCount = (end - start) * (opts.smoothSide ? 1 : 2);\n            vertexCount += sideRingVertexCount * ringCount\n                // Double the bevel vertex number if not smooth\n                + (!opts.smoothBevel ? bevelSegments * sideRingVertexCount * 2 : 0);\n        }\n    }\n\n    const data = {\n        position: new Float32Array(vertexCount * 3),\n        indices: new (vertexCount > 0xffff ? Uint32Array : Uint16Array)(indexCount),\n        uv: new Float32Array(vertexCount * 2)\n    };\n\n    const cursors = {\n        vertex: 0, index: 0\n    };\n\n    for (let d = 0; d < preparedData.length; d++) {\n        addTopAndBottom(preparedData[d], data, cursors, opts);\n    }\n\n    for (let d = 0; d < preparedData.length; d++) {\n        const {holes, vertices} = preparedData[d];\n        const topVertexCount = vertices.length / 2;\n\n        let start = 0;\n        let end = (holes && holes.length) ? holes[0] : topVertexCount;\n        // Add exterior\n        addExtrudeSide(data, preparedData[d], start, end, cursors, opts);\n        // Add holes\n        if (holes) {\n            for (let h = 0; h < holes.length; h++) {\n                start = holes[h];\n                end = holes[h + 1] || topVertexCount;\n                addExtrudeSide(data, preparedData[d], start, end, cursors, opts);\n            }\n        }\n    }\n\n    // Wrap uv\n    for (let i = 0; i < data.uv.length; i++) {\n        const val = data.uv[i];\n        if (val > 0 && Math.round(val) === val) {\n            data.uv[i] = 1;\n        }\n        else {\n            data.uv[i] = val % 1;\n        }\n    }\n\n    data.normal = generateNormal(data.indices, data.position);\n    // PENDING\n    data.boundingRect = preparedData[0] && preparedData[0].rect;\n\n    return data;\n}\n\nfunction convertPolylineToTriangulatedPolygon(polyline, polylineIdx, opts) {\n    const lineWidth = opts.lineWidth;\n    const pointCount = polyline.length;\n    const points = new Float32Array(pointCount * 2);\n    const translate = opts.translate || [0, 0];\n    const scale = opts.scale || [1, 1];\n    for (let i = 0, k = 0; i < pointCount; i++) {\n        points[k++] = polyline[i][0] * scale[0] + translate[0];\n        points[k++] = polyline[i][1] * scale[1] + translate[1];\n    }\n\n    if (area(points, 0, pointCount) < 0) {\n        reversePoints(points, 2, 0, pointCount);\n    }\n\n    const insidePoints = [];\n    const outsidePoints = [];\n    const miterLimit = opts.miterLimit;\n    const outsideIndicesMap = innerOffsetPolygon(\n        points, outsidePoints, 0, pointCount, 0, -lineWidth / 2, miterLimit, false\n    );\n    reversePoints(points, 2, 0, pointCount);\n    const insideIndicesMap = innerOffsetPolygon(\n        points, insidePoints, 0, pointCount, 0, -lineWidth / 2, miterLimit, false\n    );\n\n    const polygonVertexCount = (insidePoints.length + outsidePoints.length) / 2;\n    const polygonVertices = new Float32Array(polygonVertexCount * 2);\n\n    let offset = 0;\n    const outsidePointCount = outsidePoints.length / 2;\n    for (let i = 0; i < outsidePoints.length; i++) {\n        polygonVertices[offset++] = outsidePoints[i];\n    }\n    for (let i = 0; i < insidePoints.length; i++) {\n        polygonVertices[offset++] = insidePoints[i];\n    }\n\n    // Built indices\n    const indices = new (polygonVertexCount > 0xffff ? Uint32Array : Uint16Array)(\n        ((pointCount - 1) * 2 + (polygonVertexCount - pointCount * 2)) * 3\n    );\n    let off = 0;\n    for (let i = 0; i < pointCount - 1; i++) {\n        const i2 = i + 1;\n        indices[off++] = outsidePointCount - 1 - outsideIndicesMap[i];\n        indices[off++] = outsidePointCount - 1 - outsideIndicesMap[i] - 1;\n        indices[off++] = insideIndicesMap[i] + 1 + outsidePointCount;\n\n        indices[off++] = outsidePointCount - 1 - outsideIndicesMap[i];\n        indices[off++] = insideIndicesMap[i] + 1 + outsidePointCount;\n        indices[off++] = insideIndicesMap[i] + outsidePointCount;\n\n        if (insideIndicesMap[i2] - insideIndicesMap[i] === 2) {\n            indices[off++] = insideIndicesMap[i] + 2 + outsidePointCount;\n            indices[off++] = insideIndicesMap[i] + 1 + outsidePointCount;\n            indices[off++] = outsidePointCount - outsideIndicesMap[i2] - 1;\n        }\n        else if (outsideIndicesMap[i2] - outsideIndicesMap[i] === 2) {\n            indices[off++] = insideIndicesMap[i2] + outsidePointCount;\n            indices[off++] = outsidePointCount - 1 - (outsideIndicesMap[i] + 1);\n            indices[off++] = outsidePointCount - 1 - (outsideIndicesMap[i] + 2);\n        }\n    }\n\n    const topVertices = opts.bevelSize > 0\n        ? offsetPolygon(polygonVertices, [], opts.bevelSize, null, true) : polygonVertices;\n    const boundingRect = opts.boundingRect;\n    return {\n        vertices: polygonVertices,\n        indices,\n        topVertices,\n        rect: {\n            x: boundingRect.x * scale[0] + translate[0],\n            y: boundingRect.y * scale[1] + translate[1],\n            width: boundingRect.width * scale[0],\n            height: boundingRect.height * scale[1],\n        },\n        depth: typeof opts.depth === 'function' ? opts.depth(polylineIdx) : opts.depth,\n        holes: []\n    };\n}\n\nfunction removeClosePointsOfPolygon(polygon, epsilon) {\n    const newPolygon = [];\n    for (let k  = 0; k < polygon.length; k++) {\n        const points = polygon[k];\n        const newPoints = [];\n        const len = points.length;\n        let x1 = points[len - 1][0];\n        let y1 = points[len - 1][1];\n        let dist = 0;\n        for (let i = 0; i < len; i++) {\n            let x2 = points[i][0];\n            let y2 = points[i][1];\n            const dx = x2 - x1;\n            const dy = y2 - y1;\n            dist += Math.sqrt(dx * dx + dy * dy);\n            if (dist > epsilon) {\n                newPoints.push(points[i]);\n                dist = 0;\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n        if (newPoints.length >= 3) {\n            newPolygon.push(newPoints);\n        }\n    }\n    return newPolygon.length > 0 ? newPolygon : null;\n}\n\nfunction simplifyPolygon(polygon, tolerance) {\n    const newPolygon = [];\n    for (let k  = 0; k < polygon.length; k++) {\n        let points = polygon[k];\n        points = doSimplify(points, tolerance, true);\n        if (points.length >= 3) {\n            newPolygon.push(points);\n        }\n    }\n    return newPolygon.length > 0 ? newPolygon : null;\n}\n/**\n *\n * @param {Array} polygons Polygons array that match GeoJSON MultiPolygon geometry.\n * @param {Object} [opts]\n * @param {number|Function} [opts.depth]\n * @param {number} [opts.bevelSize = 0]\n * @param {number} [opts.bevelSegments = 2]\n * @param {number} [opts.simplify = 0]\n * @param {boolean} [opts.smoothSide = false]\n * @param {boolean} [opts.smoothBevel = false]\n * @param {boolean} [opts.excludeBottom = false]\n * @param {Object} [opts.fitRect] translate and scale will be ignored if fitRect is set\n * @param {Array} [opts.translate]\n * @param {Array} [opts.scale]\n *\n * @return {Object} {indices, position, uv, normal, boundingRect}\n */\nexport function extrudePolygon(polygons, opts) {\n\n    opts = Object.assign({}, opts);\n\n    const min = [Infinity, Infinity];\n    const max = [-Infinity, -Infinity];\n    for (let i = 0; i < polygons.length; i++) {\n        updateBoundingRect(polygons[i][0], min, max);\n    }\n    opts.boundingRect = opts.boundingRect || {\n        x: min[0], y: min[1], width: max[0] - min[0], height: max[1] - min[1]\n    };\n\n    normalizeOpts(opts);\n\n    const preparedData = [];\n    const translate = opts.translate || [0, 0];\n    const scale = opts.scale || [1, 1];\n    const boundingRect = opts.boundingRect;\n    const transformdRect = {\n        x: boundingRect.x * scale[0] + translate[0],\n        y: boundingRect.y * scale[1] + translate[1],\n        width: boundingRect.width * scale[0],\n        height: boundingRect.height * scale[1],\n    };\n\n    const epsilon = Math.min(\n        boundingRect.width, boundingRect.height\n    ) / 1e5;\n    for (let i = 0; i < polygons.length; i++) {\n        let newPolygon = removeClosePointsOfPolygon(polygons[i], epsilon);\n        if (!newPolygon) {\n            continue;\n        }\n        const simplifyTolerance = opts.simplify / Math.max(scale[0], scale[1]);\n        if (simplifyTolerance > 0) {\n            newPolygon = simplifyPolygon(newPolygon, simplifyTolerance);\n        }\n        if (!newPolygon) {\n            continue;\n        }\n\n        const {vertices, holes, dimensions} = earcut.flatten(newPolygon);\n\n        for (let k = 0; k < vertices.length;) {\n            vertices[k] = vertices[k++] * scale[0] + translate[0];\n            vertices[k] = vertices[k++] * scale[1] + translate[1];\n        }\n\n        convertToClockwise(vertices, holes);\n\n        if (dimensions !== 2) {\n            throw new Error('Only 2D polygon points are supported');\n        }\n        const topVertices = opts.bevelSize > 0\n            ? offsetPolygon(vertices, holes, opts.bevelSize, null, true) : vertices;\n        const indices = triangulate(topVertices, holes, dimensions);\n        preparedData.push({\n            indices,\n            vertices,\n            topVertices,\n            holes,\n            rect: transformdRect,\n            depth: typeof opts.depth === 'function' ? opts.depth(i) : opts.depth\n        });\n    }\n    return innerExtrudeTriangulatedPolygon(preparedData, opts);\n};\n\n/**\n *\n * @param {Array} polylines Polylines array that match GeoJSON MultiLineString geometry.\n * @param {Object} [opts]\n * @param {number} [opts.depth]\n * @param {number} [opts.bevelSize = 0]\n * @param {number} [opts.bevelSegments = 2]\n * @param {number} [opts.simplify = 0]\n * @param {boolean} [opts.smoothSide = false]\n * @param {boolean} [opts.smoothBevel = false]\n * @param {boolean} [opts.excludeBottom = false]\n * @param {boolean} [opts.lineWidth = 1]\n * @param {boolean} [opts.miterLimit = 2]\n * @param {Object} [opts.fitRect] translate and scale will be ignored if fitRect is set\n * @param {Array} [opts.translate]\n * @param {Array} [opts.scale]\n * @param {Object} [opts.boundingRect]\n * @return {Object} {indices, position, uv, normal, boundingRect}\n */\nexport function extrudePolyline(polylines, opts) {\n\n    opts = Object.assign({}, opts);\n\n    const min = [Infinity, Infinity];\n    const max = [-Infinity, -Infinity];\n    for (let i = 0; i < polylines.length; i++) {\n        updateBoundingRect(polylines[i], min, max);\n    }\n    opts.boundingRect = opts.boundingRect || {\n        x: min[0], y: min[1], width: max[0] - min[0], height: max[1] - min[1]\n    };\n\n    normalizeOpts(opts);\n    const scale = opts.scale || [1, 1];\n\n    if (opts.lineWidth == null) {\n        opts.lineWidth = 1;\n    }\n    if (opts.miterLimit == null) {\n        opts.miterLimit = 2;\n    }\n    const preparedData = [];\n    // Extrude polyline to polygon\n    for (let i = 0; i < polylines.length; i++) {\n        let newPolyline = polylines[i];\n        const simplifyTolerance = opts.simplify / Math.max(scale[0], scale[1]);\n        if (simplifyTolerance > 0) {\n            newPolyline = doSimplify(newPolyline, simplifyTolerance, true);\n        }\n        preparedData.push(convertPolylineToTriangulatedPolygon(newPolyline, i, opts));\n    }\n\n    return innerExtrudeTriangulatedPolygon(preparedData, opts);\n}\n\nfunction updateBoundingRect(points, min, max) {\n    for (let i = 0; i < points.length; i++) {\n        min[0] = Math.min(points[i][0], min[0]);\n        min[1] = Math.min(points[i][1], min[1]);\n        max[0] = Math.max(points[i][0], max[0]);\n        max[1] = Math.max(points[i][1], max[1]);\n    }\n}\n\n/**\n *\n * @param {Object} geojson\n * @param {Object} [opts]\n * @param {number} [opts.depth]\n * @param {number} [opts.bevelSize = 0]\n * @param {number} [opts.bevelSegments = 2]\n * @param {number} [opts.simplify = 0]\n * @param {boolean} [opts.smoothSide = false]\n * @param {boolean} [opts.smoothBevel = false]\n * @param {boolean} [opts.excludeBottom = false]\n * @param {boolean} [opts.lineWidth = 1]\n * @param {boolean} [opts.miterLimit = 2]\n * @param {Object} [opts.fitRect] translate and scale will be ignored if fitRect is set\n * @param {Array} [opts.translate]\n * @param {Array} [opts.scale]\n * @param {Object} [opts.boundingRect]\n * @return {Object} {polyline: {indices, position, uv, normal}, polygon: {indices, position, uv, normal}}\n */\n\n // TODO Not merge feature\nexport function extrudeGeoJSON(geojson, opts) {\n\n    opts = Object.assign({}, opts);\n\n    const polylines = [];\n    const polygons = [];\n\n    const polylineFeatureIndices = [];\n    const polygonFeatureIndices = [];\n\n    const min = [Infinity, Infinity];\n    const max = [-Infinity, -Infinity];\n\n    for (let i = 0; i < geojson.features.length; i++) {\n        const feature = geojson.features[i];\n        const geometry = feature.geometry;\n        if (geometry && geometry.coordinates) {\n            switch (geometry.type) {\n                case 'LineString':\n                    polylines.push(geometry.coordinates);\n                    polylineFeatureIndices.push(i);\n                    updateBoundingRect(geometry.coordinates, min, max);\n                    break;\n                case 'MultiLineString':\n                    for (let k = 0; k < geometry.coordinates.length; k++) {\n                        polylines.push(geometry.coordinates[k]);\n                        polylineFeatureIndices.push(i);\n                        updateBoundingRect(geometry.coordinates[k], min, max);\n                    }\n                    break;\n                case 'Polygon':\n                    polygons.push(geometry.coordinates);\n                    polygonFeatureIndices.push(i);\n                    updateBoundingRect(geometry.coordinates[0], min, max);\n                    break;\n                case 'MultiPolygon':\n                    for (let k = 0; k < geometry.coordinates.length; k++) {\n                        polygons.push(geometry.coordinates[k]);\n                        polygonFeatureIndices.push(i);\n                        updateBoundingRect(geometry.coordinates[k][0], min, max);\n                    }\n                    break;\n            }\n        }\n    }\n\n    opts.boundingRect = opts.boundingRect || {\n        x: min[0], y: min[1], width: max[0] - min[0], height: max[1] - min[1]\n    };\n\n    const originalDepth = opts.depth;\n    return {\n        polyline: extrudePolyline(polylines, Object.assign(opts, {\n            depth: function (idx) {\n                if (typeof originalDepth === 'function') {\n                    return originalDepth(\n                        geojson.features[polylineFeatureIndices[idx]]\n                    );\n                }\n                return originalDepth;\n            }\n        })),\n        polygon: extrudePolygon(polygons, Object.assign(opts, {\n            depth: function (idx) {\n                if (typeof originalDepth === 'function') {\n                    return originalDepth(\n                        geojson.features[polygonFeatureIndices[idx]]\n                    );\n                }\n                return originalDepth;\n            }\n        }))\n    };\n}","/* eslint-disable indent */\r\nimport * as maptalks from 'maptalks';\r\n\r\nconst TYPES = ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon'];\r\n\r\nfunction getGeoJSONType(feature = {}) {\r\n    const geometry = feature.geometry || {};\r\n    return geometry.type;\r\n}\r\n\r\n\r\nexport function isGeoJSON(feature = {}) {\r\n    const type = getGeoJSONType(feature);\r\n    if (type) {\r\n        for (let i = 0, len = TYPES.length; i < len; i++) {\r\n            if (TYPES[i] === type) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\n\r\nexport function isGeoJSONPolygon(feature = {}) {\r\n    const type = getGeoJSONType(feature);\r\n    if (type && (type === TYPES[4] || type === TYPES[5])) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function isGeoJSONLine(feature = {}) {\r\n    const type = getGeoJSONType(feature);\r\n    if (type && (type === TYPES[2] || type === TYPES[3])) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function isGeoJSONPoint(feature = {}) {\r\n    const type = getGeoJSONType(feature);\r\n    if (type && (type === TYPES[0] || type === TYPES[1])) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function isGeoJSONMulti(feature = {}) {\r\n    const type = getGeoJSONType(feature);\r\n    if (type) {\r\n        if (type.indexOf('Multi') > -1) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function getGeoJSONCoordinates(feature = {}) {\r\n    const geometry = feature.geometry || {};\r\n    return geometry.coordinates || [];\r\n}\r\n\r\n\r\nexport function getGeoJSONCenter(feature = {}) {\r\n    const type = getGeoJSONType(feature);\r\n    if (!type) {\r\n        return null;\r\n    }\r\n    const geometry = feature.geometry || {};\r\n    const coordinates = geometry.coordinates;\r\n    if (!coordinates) {\r\n        return null;\r\n    }\r\n    const coords = [];\r\n    switch (type) {\r\n        case 'Point': {\r\n            coords.push(coordinates);\r\n            break;\r\n        }\r\n        case 'MultiPoint':\r\n        case 'LineString': {\r\n            for (let i = 0, len = coordinates.length; i < len; i++) {\r\n                coords.push(coordinates[i]);\r\n            }\r\n            break;\r\n        }\r\n        case 'MultiLineString':\r\n        case 'Polygon': {\r\n            for (let i = 0, len = coordinates.length; i < len; i++) {\r\n                for (let j = 0, len1 = coordinates[i].length; j < len1; j++) {\r\n                    coords.push(coordinates[i][j]);\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case 'MultiPolygon': {\r\n            for (let i = 0, len = coordinates.length; i < len; i++) {\r\n                for (let j = 0, len1 = coordinates[i].length; j < len1; j++) {\r\n                    for (let m = 0, len2 = coordinates[i][j].length; m < len2; m++) {\r\n                        coords.push(coordinates[i][j][m]);\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\r\n    for (let i = 0, len = coords.length; i < len; i++) {\r\n        const c = coords[i];\r\n        const x = c[0], y = c[1];\r\n\r\n        minX = Math.min(minX, x);\r\n        minY = Math.min(minY, y);\r\n        maxX = Math.max(maxX, x);\r\n        maxY = Math.max(maxY, y);\r\n    }\r\n    return new maptalks.Coordinate((minX + maxX) / 2, (minY + maxY) / 2);\r\n}\r\n\r\n\r\n\r\nexport function spliteGeoJSONMulti(feature = {}) {\r\n    const type = getGeoJSONType(feature);\r\n    if (!type) {\r\n        return null;\r\n    }\r\n    const geometry = feature.geometry || {};\r\n    const properties = feature.properties || {};\r\n    const coordinates = geometry.coordinates;\r\n    if (!coordinates) {\r\n        return null;\r\n    }\r\n    const features = [];\r\n    let fType;\r\n    switch (type) {\r\n        case 'MultiPoint': {\r\n            fType = 'Point';\r\n            break;\r\n        }\r\n        case 'MultiLineString': {\r\n            fType = 'LineString';\r\n            break;\r\n        }\r\n        case 'MultiPolygon': {\r\n            fType = 'Polygon';\r\n            break;\r\n        }\r\n    }\r\n    if (fType) {\r\n        for (let i = 0, len = coordinates.length; i < len; i++) {\r\n            features.push({\r\n                type: 'Feature',\r\n                geometry: {\r\n                    type: fType,\r\n                    coordinates: coordinates[i]\r\n                },\r\n                properties\r\n            });\r\n        }\r\n    } else {\r\n        features.push(feature);\r\n    }\r\n    return features;\r\n}\r\n","import * as THREE from 'three';\r\nimport * as maptalks from 'maptalks';\r\nimport { extrudePolyline } from 'geometry-extrude';\r\nimport { isGeoJSON, getGeoJSONCoordinates, getGeoJSONCenter } from './GeoJSONUtil';\r\nimport { addAttribute } from './ThreeAdaptUtil';\r\nconst COMMA = ',';\r\n\r\n/**\r\n *\r\n * @param {maptalks.LineString} lineString\r\n * @param {ThreeLayer} layer\r\n */\r\nexport function getLinePosition(lineString, layer, center) {\r\n    const positions = [];\r\n    const positionsV = [];\r\n    if (Array.isArray(lineString) && lineString[0] instanceof THREE.Vector3) {\r\n        for (let i = 0, len = lineString.length; i < len; i++) {\r\n            const v = lineString[i];\r\n            positions.push(v.x, v.y, v.z);\r\n            positionsV.push(v);\r\n        }\r\n    } else {\r\n        if (Array.isArray(lineString)) {\r\n            lineString = new maptalks.LineString(lineString);\r\n        }\r\n        const z = 0;\r\n        //support geojson\r\n        let coordinates, cent;\r\n        if (isGeoJSON(lineString)) {\r\n            coordinates = getGeoJSONCoordinates(lineString);\r\n            cent = getGeoJSONCenter(lineString);\r\n        } else {\r\n            coordinates = lineString.getCoordinates();\r\n            cent = lineString.getCenter();\r\n        }\r\n        const centerPt = layer.coordinateToVector3(center || cent);\r\n        for (let i = 0, len = coordinates.length; i < len; i++) {\r\n            let coordinate = coordinates[i];\r\n            if (Array.isArray(coordinate)) {\r\n                coordinate = new maptalks.Coordinate(coordinate);\r\n            }\r\n            const v = layer.coordinateToVector3(coordinate, z).sub(centerPt);\r\n            positions.push(v.x, v.y, v.z);\r\n            positionsV.push(v);\r\n        }\r\n    }\r\n    return {\r\n        positions: positions,\r\n        positionsV: positionsV\r\n    };\r\n}\r\n\r\n\r\n\r\n/**\r\n *\r\n * @param {maptalks.LineString} lineString\r\n * @param {Number} lineWidth\r\n * @param {Number} depth\r\n * @param {ThreeLayer} layer\r\n */\r\nexport function getExtrudeLineGeometry(lineString, lineWidth = 1, depth = 1, layer, center) {\r\n    const positions = getLinePosition(lineString, layer, center).positionsV;\r\n    const ps = [];\r\n    for (let i = 0, len = positions.length; i < len; i++) {\r\n        const p = positions[i];\r\n        ps.push([p.x, p.y]);\r\n    }\r\n    const {\r\n        indices,\r\n        position,\r\n        normal\r\n    } = extrudePolyline([ps], {\r\n        lineWidth,\r\n        depth\r\n    });\r\n    const geometry = new THREE.BufferGeometry();\r\n    addAttribute(geometry, 'position', new THREE.Float32BufferAttribute(position, 3));\r\n    addAttribute(geometry, 'normal', new THREE.Float32BufferAttribute(normal, 3));\r\n    geometry.setIndex(new THREE.Uint32BufferAttribute(indices, 1));\r\n    return geometry;\r\n}\r\n\r\n/**\r\n *\r\n * @param {Array[Array]} chunkLines\r\n * @param {*} layer\r\n */\r\nexport function getChunkLinesPosition(chunkLines, layer, positionMap, centerPt) {\r\n    const positions = [],\r\n        positionsV = [], lnglats = [];\r\n    for (let i = 0, len = chunkLines.length; i < len; i++) {\r\n        const line = chunkLines[i];\r\n        for (let j = 0, len1 = line.length; j < len1; j++) {\r\n            const lnglat = line[j];\r\n            if (lnglats.length > 0) {\r\n                const key = lnglat.join(COMMA).toString();\r\n                const key1 = lnglats[lnglats.length - 1].join(COMMA).toString();\r\n                if (key !== key1) {\r\n                    lnglats.push(lnglat);\r\n                }\r\n            } else {\r\n                lnglats.push(lnglat);\r\n            }\r\n        }\r\n    }\r\n    const z = 0;\r\n    for (let i = 0, len = lnglats.length; i < len; i++) {\r\n        const lnglat = lnglats[i];\r\n        let v;\r\n        const key = lnglat.join(COMMA).toString();\r\n        if (positionMap && positionMap[key]) {\r\n            v = positionMap[key];\r\n        } else {\r\n            v = layer.coordinateToVector3(lnglat, z).sub(centerPt);\r\n        }\r\n        positionsV.push(v);\r\n        positions.push(v.x, v.y, v.z);\r\n    }\r\n    return {\r\n        positions: positions,\r\n        positionsV: positionsV,\r\n        lnglats: lnglats\r\n    };\r\n}\r\n\r\n\r\n/**\r\n *\r\n * @param {*} lineString\r\n * @param {*} lineWidth\r\n * @param {*} depth\r\n * @param {*} layer\r\n */\r\nexport function getExtrudeLineParams(lineString, lineWidth = 1, depth = 1, layer, center) {\r\n    const positions = getLinePosition(lineString, layer, center).positionsV;\r\n    const ps = [];\r\n    for (let i = 0, len = positions.length; i < len; i++) {\r\n        const p = positions[i];\r\n        ps.push([p.x, p.y]);\r\n    }\r\n    const {\r\n        indices,\r\n        position,\r\n        normal\r\n    } = extrudePolyline([ps], {\r\n        lineWidth: lineWidth,\r\n        depth: depth\r\n    });\r\n    return {\r\n        position: position,\r\n        normal: normal,\r\n        indices: indices\r\n    };\r\n}\r\n","import * as maptalks from 'maptalks';\r\nimport * as THREE from 'three';\r\nimport BaseObject from './BaseObject';\r\nimport { getLinePosition } from './util/LineUtil';\r\nimport { isGeoJSON, getGeoJSONCenter } from './util/GeoJSONUtil';\r\nimport { addAttribute } from './util/ThreeAdaptUtil';\r\n\r\nfunction initColors(cs) {\r\n    const colors = [];\r\n    if (cs && cs.length) {\r\n        cs.forEach(color => {\r\n            color = (color instanceof THREE.Color ? color : new THREE.Color(color));\r\n            colors.push(color.r, color.g, color.b);\r\n        });\r\n    }\r\n    return colors;\r\n}\r\n\r\nconst OPTIONS = {\r\n    altitude: 0,\r\n    colors: null\r\n};\r\n\r\n/**\r\n *\r\n */\r\nclass Line extends BaseObject {\r\n    constructor(lineString, options, material, layer) {\r\n        options = maptalks.Util.extend({}, OPTIONS, options, { layer, lineString });\r\n        super();\r\n        this._initOptions(options);\r\n        const positions = getLinePosition(lineString, layer).positions;\r\n        const geometry = new THREE.BufferGeometry();\r\n        addAttribute(geometry, 'position', new THREE.Float32BufferAttribute(positions, 3));\r\n        const colors = initColors(options.colors);\r\n        if (colors && colors.length) {\r\n            addAttribute(geometry, 'color', new THREE.Float32BufferAttribute(colors, 3));\r\n            material.vertexColors = THREE.VertexColors;\r\n        }\r\n        this._createLine(geometry, material);\r\n\r\n        const { altitude } = options;\r\n        const center = (isGeoJSON(lineString) ? getGeoJSONCenter(lineString) : lineString.getCenter());\r\n        const z = layer.distanceToVector3(altitude, altitude).x;\r\n        const v = layer.coordinateToVector3(center, z);\r\n        this.getObject3d().position.copy(v);\r\n    }\r\n}\r\n\r\nexport default Line;\r\n","import * as maptalks from 'maptalks';\r\nimport BaseObject from './BaseObject';\r\nimport { getExtrudeLineGeometry } from './util/LineUtil';\r\nimport { isGeoJSON, getGeoJSONCenter } from './util/GeoJSONUtil';\r\n\r\nconst OPTIONS = {\r\n    width: 3,\r\n    height: 1,\r\n    altitude: 0\r\n};\r\n\r\n\r\n/**\r\n *\r\n */\r\nclass ExtrudeLine extends BaseObject {\r\n    constructor(lineString, options, material, layer) {\r\n        options = maptalks.Util.extend({}, OPTIONS, options, { layer, lineString });\r\n        super();\r\n        this._initOptions(options);\r\n\r\n        const { height, width } = options;\r\n        options.height = layer.distanceToVector3(height, height).x;\r\n        options.width = layer.distanceToVector3(width, width).x;\r\n        const geometry = getExtrudeLineGeometry(lineString, options.width, options.height, layer);\r\n        this._createMesh(geometry, material);\r\n\r\n        const { altitude } = options;\r\n        const center = (isGeoJSON(lineString) ? getGeoJSONCenter(lineString) : lineString.getCenter());\r\n        const z = layer.distanceToVector3(altitude, altitude).x;\r\n        const v = layer.coordinateToVector3(center, z);\r\n        this.getObject3d().position.copy(v);\r\n    }\r\n}\r\n\r\nexport default ExtrudeLine;\r\n","import * as THREE from 'three';\r\nimport * as maptalks from 'maptalks';\r\nimport { isGeoJSONPolygon, spliteGeoJSONMulti, getGeoJSONCenter, isGeoJSONMulti, getGeoJSONCoordinates } from './GeoJSONUtil';\r\nimport { extrudePolygon } from 'geometry-extrude';\r\nimport { addAttribute } from './ThreeAdaptUtil';\r\n/**\r\n * this is for ExtrudeMesh util\r\n */\r\n\r\n/**\r\n * Fix the bug in the center of multipoygon\r\n * @param {maptalks.Polygon} polygon\r\n * @param {*} layer\r\n */\r\n// export function toShape(datas = []) {\r\n//     const shapes = [];\r\n//     for (let i = 0, len = datas.length; i < len; i++) {\r\n//         const { outer, holes } = datas[i];\r\n//         const shape = [outer];\r\n//         if (holes && holes.length) {\r\n//             for (let j = 0, len1 = holes.length; j < len1; j++) {\r\n//                 shape.push(holes[j]);\r\n//             }\r\n//         }\r\n//         shapes.push(shape);\r\n//     }\r\n//     return shapes;\r\n// }\r\n\r\n/**\r\n *  Support custom center point\r\n * @param {maptalks.Polygon|maptalks.MultiPolygon} polygon\r\n * @param {*} height\r\n * @param {*} layer\r\n */\r\nexport function getExtrudeGeometry(polygon, height, layer, center) {\r\n    const { position, normal, uv, indices } = getExtrudeGeometryParams(polygon, height, layer, center);\r\n    const color = new Float32Array(position.length);\r\n    color.fill(1, 0, position.length);\r\n    const bufferGeomertry = new THREE.BufferGeometry();\r\n    addAttribute(bufferGeomertry, 'color', new THREE.BufferAttribute(color, 3));\r\n    addAttribute(bufferGeomertry, 'normal', new THREE.BufferAttribute(normal, 3));\r\n    addAttribute(bufferGeomertry, 'position', new THREE.BufferAttribute(position, 3));\r\n    addAttribute(bufferGeomertry, 'uv', new THREE.BufferAttribute(uv, 2));\r\n    bufferGeomertry.setIndex(new THREE.Uint32BufferAttribute(indices, 1));\r\n    return bufferGeomertry;\r\n}\r\n\r\n\r\nexport function getExtrudeGeometryParams(polygon, height, layer, center) {\r\n    const datas = getPolygonPositions(polygon, layer, center);\r\n    const shapes = datas;\r\n    //Possible later use of geojson\r\n    if (!shapes) return null;\r\n    height = layer.distanceToVector3(height, height).x;\r\n    const { position, normal, uv, indices } = extrudePolygon(shapes, {\r\n        depth: height\r\n    });\r\n    return {\r\n        position, normal, uv, indices\r\n    };\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} geometry\r\n * @param {*} color\r\n * @param {*} _topColor\r\n */\r\nexport function initVertexColors(geometry, color, _topColor) {\r\n    const position = geometry.attributes.position.array;\r\n    const len = position.length;\r\n    const bottomColor = (color instanceof THREE.Color ? color : new THREE.Color(color));\r\n    const topColor = new THREE.Color(_topColor);\r\n    const colors = [];\r\n    for (let i = 0; i < len; i += 3) {\r\n        const z = position[i + 2];\r\n        if (z > 0) {\r\n            colors.push(topColor.r, topColor.r, topColor.b);\r\n        } else {\r\n            colors.push(bottomColor.r, bottomColor.r, bottomColor.b);\r\n        }\r\n    }\r\n    addAttribute(geometry, 'color', new THREE.Float32BufferAttribute(colors, 3, true));\r\n    return colors;\r\n}\r\n\r\n/**\r\n *Get the center point of the point set\r\n * @param {*} coordinates\r\n */\r\nexport function getCenterOfPoints(coordinates = []) {\r\n    let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\r\n    for (let i = 0, len = coordinates.length; i < len; i++) {\r\n        const c = coordinates[i];\r\n        let x, y;\r\n        if (Array.isArray(c)) {\r\n            x = c[0];\r\n            y = c[1];\r\n        } else if (c instanceof maptalks.Coordinate) {\r\n            x = c.x;\r\n            y = c.y;\r\n        }\r\n        minX = Math.min(minX, x);\r\n        minY = Math.min(minY, y);\r\n        maxX = Math.max(maxX, x);\r\n        maxY = Math.max(maxY, y);\r\n    }\r\n    return new maptalks.Coordinate((minX + maxX) / 2, (minY + maxY) / 2);\r\n}\r\n\r\n\r\n/**\r\n *\r\n * @param {*} polygon\r\n * @param {*} layer\r\n * @param {*} center\r\n */\r\nexport function getPolygonPositions(polygon, layer, center, isArrayBuff = false) {\r\n    if (!polygon) {\r\n        return null;\r\n    }\r\n    let datas = [];\r\n    if (polygon instanceof maptalks.MultiPolygon) {\r\n        datas = polygon.getGeometries().map(p => {\r\n            return getSinglePolygonPositions(p, layer, center || polygon.getCenter(), isArrayBuff);\r\n        });\r\n    } else if (polygon instanceof maptalks.Polygon) {\r\n        const data = getSinglePolygonPositions(polygon, layer, center || polygon.getCenter(), isArrayBuff);\r\n        datas.push(data);\r\n    } else if (isGeoJSONPolygon(polygon)) {\r\n        const cent = getGeoJSONCenter(polygon);\r\n        if (!isGeoJSONMulti(polygon)) {\r\n            const data = getSinglePolygonPositions(polygon, layer, center || cent, isArrayBuff);\r\n            datas.push(data);\r\n        } else {\r\n            const fs = spliteGeoJSONMulti(polygon);\r\n            for (let i = 0, len = fs.length; i < len; i++) {\r\n                datas.push(getSinglePolygonPositions(fs[i], layer, center || cent, isArrayBuff));\r\n            }\r\n        }\r\n    }\r\n    return datas;\r\n}\r\n\r\nexport function getSinglePolygonPositions(polygon, layer, center, isArrayBuff = false) {\r\n    let shell, holes;\r\n    //it is pre for geojson,Possible later use of geojson\r\n    if (isGeoJSONPolygon(polygon)) {\r\n        const coordinates = getGeoJSONCoordinates(polygon);\r\n        shell = coordinates[0];\r\n        holes = coordinates.slice(1, coordinates.length);\r\n        center = center || getGeoJSONCenter(polygon);\r\n    } else {\r\n        shell = polygon.getShell();\r\n        holes = polygon.getHoles();\r\n        center = center || polygon.getCenter();\r\n    }\r\n    const centerPt = layer.coordinateToVector3(center);\r\n    let outer;\r\n    if (isArrayBuff) {\r\n        outer = new Float32Array(shell.length * 2);\r\n    } else {\r\n        outer = [];\r\n    }\r\n    for (let i = 0, len = shell.length; i < len; i++) {\r\n        const c = shell[i];\r\n        const v = layer.coordinateToVector3(c).sub(centerPt);\r\n        if (isArrayBuff) {\r\n            const idx = i * 2;\r\n            outer[idx] = v.x;\r\n            outer[idx + 1] = v.y;\r\n            // outer[idx + 2] = v.z;\r\n        } else {\r\n            outer.push([v.x, v.y]);\r\n        }\r\n    }\r\n    const data = [(isArrayBuff ? outer.buffer : outer)];\r\n    if (holes && holes.length > 0) {\r\n        for (let i = 0, len = holes.length; i < len; i++) {\r\n            const pts = (isArrayBuff ? new Float32Array(holes[i].length * 2) : []);\r\n            for (let j = 0, len1 = holes[i].length; j < len1; j++) {\r\n                const c = holes[i][j];\r\n                const pt = layer.coordinateToVector3(c).sub(centerPt);\r\n                if (isArrayBuff) {\r\n                    const idx = j * 2;\r\n                    pts[idx] = pt.x;\r\n                    pts[idx + 1] = pt.y;\r\n                    // pts[idx + 2] = pt.z;\r\n                } else {\r\n                    pts.push([pt.x, pt.y]);\r\n                }\r\n            }\r\n            data.push((isArrayBuff ? pts.buffer : pts));\r\n        }\r\n    }\r\n    return data;\r\n}\r\n\r\n","import * as maptalks from 'maptalks';\r\nimport * as THREE from 'three';\r\nimport BaseObject from './BaseObject';\r\nimport { getExtrudeGeometry, initVertexColors } from './util/ExtrudeUtil';\r\nimport { getGeoJSONCenter, isGeoJSONPolygon } from './util/GeoJSONUtil';\r\n\r\nconst OPTIONS = {\r\n    altitude: 0,\r\n    height: 1,\r\n    topColor: null,\r\n    bottomColor: '#2d2f61',\r\n};\r\n\r\n/**\r\n *\r\n */\r\nclass ExtrudePolygon extends BaseObject {\r\n    constructor(polygon, options, material, layer) {\r\n        options = maptalks.Util.extend({}, OPTIONS, options, { layer, polygon });\r\n        super();\r\n        this._initOptions(options);\r\n        const { height, topColor, bottomColor, altitude } = options;\r\n        const geometry = getExtrudeGeometry(polygon, height, layer);\r\n        const center = (isGeoJSONPolygon(polygon) ? getGeoJSONCenter(polygon) : polygon.getCenter());\r\n\r\n        if (topColor && !material.map) {\r\n            initVertexColors(geometry, bottomColor, topColor);\r\n            material.vertexColors = THREE.VertexColors;\r\n        }\r\n        this._createMesh(geometry, material);\r\n        const z = layer.distanceToVector3(altitude, altitude).x;\r\n        const v = layer.coordinateToVector3(center, z);\r\n        this.getObject3d().position.copy(v);\r\n    }\r\n}\r\n\r\nexport default ExtrudePolygon;\r\n","import * as maptalks from 'maptalks';\r\nimport BaseObject from './BaseObject';\r\n\r\nconst OPTIONS = {\r\n    altitude: 0,\r\n    coordinate: null\r\n};\r\n\r\n\r\n/**\r\n * Model container\r\n */\r\nclass Model extends BaseObject {\r\n    constructor(model, options = {}, layer) {\r\n        if (!options.coordinate) {\r\n            console.warn('coordinate is null,it is important to locate the model');\r\n            options.coordinate = layer.getMap().getCenter();\r\n        }\r\n        options = maptalks.Util.extend({}, OPTIONS, options, { layer, model });\r\n        super();\r\n        this._initOptions(options);\r\n        this._createGroup();\r\n        this.getObject3d().add(model);\r\n        const { altitude, coordinate } = options;\r\n        const z = layer.distanceToVector3(altitude, altitude).x;\r\n        const position = layer.coordinateToVector3(coordinate, z);\r\n        this.getObject3d().position.copy(position);\r\n    }\r\n}\r\n\r\nexport default Model;\r\n","/**\r\n * provide a simple geo function\r\n */\r\n\r\nconst PI = Math.PI / 180;\r\nconst R = 6378137;\r\nconst MINLENGTH = 1;\r\n\r\n\r\nfunction formatLineArray(polyline) {\r\n    const lnglats = polyline.getCoordinates();\r\n    return lnglats.map(lnglat => {\r\n        return lnglat.toArray();\r\n    });\r\n}\r\n\r\nfunction degreesToRadians(d) {\r\n    return d * PI;\r\n}\r\n\r\n\r\n\r\nexport function distance(c1, c2) {\r\n    if (!c1 || !c2) {\r\n        return 0;\r\n    }\r\n    if (!Array.isArray(c1)) {\r\n        c1 = c1.toArray();\r\n    }\r\n    if (!Array.isArray(c2)) {\r\n        c2 = c2.toArray();\r\n    }\r\n    let b = degreesToRadians(c1[1]);\r\n    const d = degreesToRadians(c2[1]),\r\n        e = b - d,\r\n        f = degreesToRadians(c1[0]) - degreesToRadians(c2[0]);\r\n    b = 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(e / 2), 2) + Math.cos(b) * Math.cos(d) * Math.pow(Math.sin(f / 2), 2)));\r\n    b *= R;\r\n    return Math.round(b * 1E5) / 1E5;\r\n}\r\n\r\n\r\nexport function lineLength(polyline) {\r\n    let lnglatArray = polyline;\r\n    if (!Array.isArray(polyline)) {\r\n        lnglatArray = formatLineArray(polyline);\r\n    }\r\n    let l = 0;\r\n    for (let i = 0, len = lnglatArray.length; i < len - 1; i++) {\r\n        l += distance(lnglatArray[i], lnglatArray[i + 1]);\r\n    }\r\n    return l;\r\n}\r\n\r\n\r\nfunction getPercentLngLat(l, length) {\r\n    const { len, c1, c2 } = l;\r\n    const dx = c2[0] - c1[0],\r\n        dy = c2[1] - c1[1];\r\n    const percent = length / len;\r\n    const lng = c1[0] + percent * dx;\r\n    const lat = c1[1] + percent * dy;\r\n    return [lng, lat];\r\n}\r\n\r\n\r\n\r\n/**\r\n * This is not an accurate line segment cutting method, but rough, in order to speed up the calculation,\r\n * the correct cutting algorithm can be referred to. http://turfjs.org/docs/#lineChunk\r\n * @param {*} cs\r\n * @param {*} lineChunkLength\r\n */\r\nexport function lineSlice(cs, lineChunkLength = 10) {\r\n    lineChunkLength = Math.max(lineChunkLength, MINLENGTH);\r\n    if (!Array.isArray(cs)) {\r\n        cs = formatLineArray(cs);\r\n    }\r\n    const LEN = cs.length;\r\n    let list = [];\r\n    let totalLen = 0;\r\n    for (let i = 0; i < LEN - 1; i++) {\r\n        const len = distance(cs[i], cs[i + 1]);\r\n        const floorlen = Math.floor(len);\r\n        list.push({\r\n            c1: cs[i],\r\n            len: floorlen,\r\n            c2: cs[i + 1]\r\n        });\r\n        totalLen += floorlen;\r\n    }\r\n    if (totalLen <= lineChunkLength) {\r\n        const lnglats = list.map(d => {\r\n            return [d.c1, d.c2];\r\n        });\r\n        return lnglats;\r\n    }\r\n    if (list.length === 1) {\r\n        if (list[0].len <= lineChunkLength) {\r\n            return [\r\n                [list[0].c1, list[0].c2]\r\n            ];\r\n        }\r\n    }\r\n\r\n    const LNGLATSLEN = list.length;\r\n    const first = list[0];\r\n\r\n    let idx = 0;\r\n    let currentLngLat;\r\n    let currentLen = 0;\r\n    const lines = [];\r\n    let lls = [first.c1];\r\n    while (idx < LNGLATSLEN) {\r\n        const { len, c2 } = list[idx];\r\n        currentLen += len;\r\n        if (currentLen < lineChunkLength) {\r\n            lls.push(c2);\r\n            if (idx === LNGLATSLEN - 1) {\r\n                lines.push(lls);\r\n            }\r\n            idx++;\r\n        }\r\n        if (currentLen === lineChunkLength) {\r\n            lls.push(c2);\r\n            currentLen = 0;\r\n            lines.push(lls);\r\n            //next\r\n            lls = [c2];\r\n            idx++;\r\n        }\r\n        if (currentLen > lineChunkLength) {\r\n            const offsetLen = (len - currentLen + lineChunkLength);\r\n            currentLngLat = getPercentLngLat(list[idx], offsetLen);\r\n            lls.push(currentLngLat);\r\n            lines.push(lls);\r\n            currentLen = 0;\r\n            list[idx].c1 = currentLngLat;\r\n            list[idx].len = len - offsetLen;\r\n            //next\r\n            lls = [];\r\n            lls.push(currentLngLat);\r\n        }\r\n    }\r\n    return lines;\r\n}\r\n","import * as maptalks from 'maptalks';\r\nimport * as THREE from 'three';\r\nimport BaseObject from './BaseObject';\r\n\r\nimport { lineSlice } from './util/GeoUtil';\r\nimport { getExtrudeLineParams, getChunkLinesPosition } from './util/LineUtil';\r\nimport { isGeoJSON, getGeoJSONCenter, getGeoJSONCoordinates } from './util/GeoJSONUtil';\r\nimport { addAttribute } from './util/ThreeAdaptUtil';\r\n\r\nconst MAX_POINTS = 1000;\r\n\r\n/**\r\n *\r\n * @param {THREE.BufferGeometry} geometry\r\n * @param {*} ps\r\n * @param {*} norls\r\n * @param {*} indices\r\n */\r\nfunction setExtrudeLineGeometryAttribute(geometry, ps, norls, indices) {\r\n    const len = ps.length;\r\n    geometry.attributes.normal.count = len;\r\n    geometry.attributes.position.count = len;\r\n    const positions = geometry.attributes.position.array;\r\n    const normals = geometry.attributes.normal.array;\r\n    for (let i = 0; i < len; i++) {\r\n        positions[i] = ps[i];\r\n        normals[i] = norls[i];\r\n    }\r\n    // geometry.index.array = new Uint16Array(indices.length);\r\n    geometry.index.count = indices.length;\r\n    // geometry.index.needsUpdate = true;\r\n    for (let i = 0, len1 = indices.length; i < len1; i++) {\r\n        geometry.index.array[i] = indices[i];\r\n    }\r\n    // geometry.setIndex(new THREE.Uint32BufferAttribute(indices, 1));\r\n    // geometry.setDrawRange(0, len / 3);\r\n}\r\n\r\n\r\nconst OPTIONS = {\r\n    trail: 5,\r\n    chunkLength: 50,\r\n    width: 2,\r\n    height: 1,\r\n    speed: 1,\r\n    altitude: 0,\r\n    interactive: false\r\n};\r\n\r\n/**\r\n *\r\n */\r\nclass ExtrudeLineTrail extends BaseObject {\r\n    constructor(lineString, options, material, layer) {\r\n        options = maptalks.Util.extend({}, OPTIONS, options, { layer, lineString });\r\n        super();\r\n        this._initOptions(options);\r\n\r\n        const { width, height, altitude, speed, chunkLength, trail } = options;\r\n        let center, coordinates;\r\n        if (isGeoJSON(lineString)) {\r\n            center = getGeoJSONCenter(lineString);\r\n            coordinates = getGeoJSONCoordinates(lineString);\r\n        } else {\r\n            center = lineString.getCenter();\r\n            coordinates = lineString;\r\n        }\r\n        const chunkLines = lineSlice(coordinates, chunkLength);\r\n\r\n        const centerPt = layer.coordinateToVector3(lineString.getCenter());\r\n        //cache position for  faster computing,reduce double counting\r\n        const positionMap = {};\r\n        for (let i = 0, len = chunkLines.length; i < len; i++) {\r\n            const chunkLine = chunkLines[i];\r\n            for (let j = 0, len1 = chunkLine.length; j < len1; j++) {\r\n                const lnglat = chunkLine[j];\r\n                const key = lnglat.join(',').toString();\r\n                if (!positionMap[key]) {\r\n                    positionMap[key] = layer.coordinateToVector3(lnglat).sub(centerPt);\r\n                }\r\n            }\r\n        }\r\n\r\n        const positions = getChunkLinesPosition(chunkLines.slice(0, 1), layer, positionMap, centerPt).positionsV;\r\n\r\n        //generate geometry\r\n        const geometry = new THREE.BufferGeometry();\r\n        const ps = new Float32Array(MAX_POINTS * 3); // 3 vertices per point\r\n        const norls = new Float32Array(MAX_POINTS * 3); // 3 vertices per point\r\n        const inds = new Uint16Array(MAX_POINTS);\r\n        addAttribute(geometry, 'position', (new THREE.BufferAttribute(ps, 3)));\r\n        addAttribute(geometry, 'normal', (new THREE.BufferAttribute(norls, 3)));\r\n        geometry.setIndex(new THREE.BufferAttribute(inds, 1));\r\n\r\n\r\n        const lineWidth = layer.distanceToVector3(width, width).x;\r\n        const depth = layer.distanceToVector3(height, height).x;\r\n        const params = getExtrudeLineParams(positions, lineWidth, depth, layer);\r\n        setExtrudeLineGeometryAttribute(geometry, params.position, params.normal, params.indices);\r\n\r\n        this._createMesh(geometry, material);\r\n        const z = layer.distanceToVector3(altitude, altitude).x;\r\n        const v = layer.coordinateToVector3(center, z);\r\n        this.getObject3d().position.copy(v);\r\n\r\n        this._params = {\r\n            index: 0,\r\n            chunkLines,\r\n            geometries: [],\r\n            layer,\r\n            trail: Math.max(1, trail),\r\n            lineWidth,\r\n            depth,\r\n            speed: Math.min(1, speed),\r\n            idx: 0,\r\n            loaded: false,\r\n            positionMap,\r\n            centerPt\r\n        };\r\n        this._init(this._params);\r\n\r\n    }\r\n\r\n    /**\r\n     * Follow-up support for adding webworker\r\n     * @param {*} params\r\n     */\r\n    _init(params) {\r\n        const { layer, trail, lineWidth, depth, chunkLines, positionMap, centerPt } = params;\r\n        const len = chunkLines.length, geometries = [];\r\n        for (let i = 0; i < len; i++) {\r\n            const lines = chunkLines.slice(i, i + trail);\r\n            const ps = getChunkLinesPosition(lines, layer, positionMap, centerPt).positionsV;\r\n            geometries.push(getExtrudeLineParams(ps, lineWidth, depth, layer));\r\n        }\r\n        this._params.geometries = geometries;\r\n        this._params.loaded = true;\r\n    }\r\n\r\n\r\n    _animation() {\r\n        const { index, geometries, speed, idx, chunkLines, trail, lineWidth, depth, loaded, layer, positionMap, centerPt } = this._params;\r\n        if (!loaded) return;\r\n        const i = Math.round(index);\r\n        if (i > idx) {\r\n            this._params.idx++;\r\n            let p = geometries[i];\r\n            //if not init, this is will running\r\n            if (!p) {\r\n                const lines = chunkLines.slice(i, i + trail);\r\n                const ps = getChunkLinesPosition(lines, layer, positionMap, centerPt).positionsV;\r\n                p = getExtrudeLineParams(ps, lineWidth, depth, layer);\r\n                geometries[i] = p;\r\n            }\r\n            setExtrudeLineGeometryAttribute(this.getObject3d().geometry, p.position, p.normal, p.indices);\r\n            this.getObject3d().geometry.attributes.position.needsUpdate = true;\r\n            this.getObject3d().geometry.attributes.normal.needsUpdate = true;\r\n            this.getObject3d().geometry.index.needsUpdate = true;\r\n        }\r\n        if (index >= chunkLines.length - 1) {\r\n            this._params.index = -1;\r\n            this._params.idx = -1;\r\n        }\r\n        this._params.index += speed;\r\n    }\r\n}\r\n\r\nexport default ExtrudeLineTrail;\r\n","import * as THREE from 'three';\r\n\r\nconst EVENTS = ['click', 'mousemove', 'mousedown', 'mouseup', 'dblclick', 'contextmenu'].join(' ').toString();\r\n\r\n/**\r\n * This is for the merger, MergedExtrudeMesh,Points ...\r\n * @param {*} Base\r\n */\r\nconst MergedMixin = (Base) => {\r\n\r\n    return class extends Base {\r\n\r\n        // this._faceMap=[];\r\n        // this._baseObjects = [];\r\n        // this._datas = [];\r\n        // this.faceIndex = null;\r\n        // this.index=null;\r\n        // this._geometriesAttributes = [];\r\n        // this._geometryCache = geometry.clone();\r\n        // this.isHide = false;\r\n\r\n        /**\r\n         *\r\n         * @param {*} baseObjects\r\n         */\r\n        _initBaseObjectsEvent(baseObjects) {\r\n            if (baseObjects && Array.isArray(baseObjects) && baseObjects.length) {\r\n                for (let i = 0, len = baseObjects.length; i < len; i++) {\r\n                    const baseObject = baseObjects[i];\r\n                    this._proxyEvent(baseObject);\r\n                }\r\n            }\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         *Events representing the merge\r\n         * @param {*} baseObject\r\n         */\r\n        _proxyEvent(baseObject) {\r\n            baseObject.on('add', (e) => {\r\n                this._showGeometry(e.target, true);\r\n            });\r\n            baseObject.on('remove', (e) => {\r\n                this._showGeometry(e.target, false);\r\n            });\r\n            baseObject.on('mouseout', (e) => {\r\n                this._mouseover = false;\r\n                this.fire('mouseout', Object.assign({}, e, { target: this, selectMesh: (this.getSelectMesh ? this.getSelectMesh() : null) }));\r\n                // this._showGeometry(e.target, false);\r\n            });\r\n            baseObject.on(EVENTS, (e) => {\r\n                this.fire(e.type, Object.assign({}, e, { target: this, selectMesh: (this.getSelectMesh ? this.getSelectMesh() : null) }));\r\n            });\r\n        }\r\n\r\n\r\n        /**\r\n         * Get the index of the monomer to be hidden\r\n         * @param {*} attribute\r\n         */\r\n        _getHideGeometryIndex(attribute) {\r\n            const indexs = [];\r\n            let count = 0;\r\n            for (let i = 0, len = this._geometriesAttributes.length; i < len; i++) {\r\n                if (this._geometriesAttributes[i].hide === true) {\r\n                    indexs.push(i);\r\n                    count += this._geometriesAttributes[i][attribute].count;\r\n                }\r\n            }\r\n            return {\r\n                indexs,\r\n                count\r\n            };\r\n        }\r\n\r\n        /**\r\n         * update geometry attributes\r\n         * @param {*} bufferAttribute\r\n         * @param {*} attribute\r\n         */\r\n        _updateAttribute(bufferAttribute, attribute) {\r\n            const { indexs } = this._getHideGeometryIndex(attribute);\r\n            const array = this._geometryCache.attributes[attribute].array;\r\n            const len = array.length;\r\n            for (let i = 0; i < len; i++) {\r\n                bufferAttribute.array[i] = array[i];\r\n            }\r\n            let value = NaN;\r\n            if (this.getObject3d() instanceof THREE.LineSegments) {\r\n                value = 0;\r\n            }\r\n            for (let j = 0; j < indexs.length; j++) {\r\n                const index = indexs[j];\r\n                const { start, end } = this._geometriesAttributes[index][attribute];\r\n                for (let i = start; i < end; i++) {\r\n                    bufferAttribute.array[i] = value;\r\n                }\r\n            }\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * show or hide monomer\r\n         * @param {*} baseObject\r\n         * @param {*} isHide\r\n         */\r\n        _showGeometry(baseObject, isHide) {\r\n            let index;\r\n            if (baseObject) {\r\n                index = baseObject.getOptions().index;\r\n            }\r\n            if (index != null) {\r\n                const geometryAttributes = this._geometriesAttributes[index];\r\n                const { hide } = geometryAttributes;\r\n                if (hide === isHide) {\r\n                    return this;\r\n                }\r\n                geometryAttributes.hide = isHide;\r\n                const buffGeom = this.getObject3d().geometry;\r\n                this._updateAttribute(buffGeom.attributes.position, 'position');\r\n                // this._updateAttribute(buffGeom.attributes.normal, 'normal', 3);\r\n                // this._updateAttribute(buffGeom.attributes.color, 'color', 3);\r\n                // this._updateAttribute(buffGeom.attributes.uv, 'uv', 2);\r\n                buffGeom.attributes.position.needsUpdate = true;\r\n                // buffGeom.attributes.color.needsUpdate = true;\r\n                // buffGeom.attributes.normal.needsUpdate = true;\r\n                // buffGeom.attributes.uv.needsUpdate = true;\r\n                this.isHide = isHide;\r\n            }\r\n            return this;\r\n        }\r\n\r\n\r\n        /**\r\n         * Get selected monomer\r\n         */\r\n        getSelectMesh() {\r\n            return {\r\n                data: null,\r\n                baseObject: null\r\n            };\r\n        }\r\n    };\r\n};\r\n\r\nexport default MergedMixin;\r\n","import * as maptalks from 'maptalks';\r\nimport { isGeoJSONPolygon } from '../util/GeoJSONUtil';\r\nimport { getPolygonPositions } from '../util/ExtrudeUtil';\r\nimport pkg from './../../package.json';\r\n\r\n\r\n\r\nconst MeshActor = class extends maptalks.worker.Actor {\r\n    test(info, cb) {\r\n        //send data to worker thread\r\n        this.send(info, null, cb);\r\n    }\r\n\r\n    pushQueue(q = {}) {\r\n        const { type, data, callback, layer, key, center } = q;\r\n        let params;\r\n        if (type === 'Polygon') {\r\n            params = gengerateExtrudePolygons(data, center, layer);\r\n        } else if (type === 'Line') {\r\n            //todo liness\r\n        } else if (type === 'Point') {\r\n            //todo points\r\n        }\r\n        this.send({ type, datas: params.datas }, params.transfe, function (err, message) {\r\n            if (err) {\r\n                console.error(err);\r\n            }\r\n            message.key = key;\r\n            callback(message);\r\n        });\r\n    }\r\n\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    // receive(message) {\r\n    //     console.log(message);\r\n    // }\r\n};\r\n\r\nvar actor;\r\nexport function getActor() {\r\n    if (!actor) {\r\n        actor = new MeshActor(pkg.name);\r\n    }\r\n    return actor;\r\n}\r\n\r\n/**\r\n * generate extrudepolygons data for worker\r\n * @param {*} polygons\r\n * @param {*} layer\r\n */\r\nfunction gengerateExtrudePolygons(polygons = [], center, layer) {\r\n    const len = polygons.length;\r\n    const datas = [], transfer = [];\r\n    for (let i = 0; i < len; i++) {\r\n        const polygon = polygons[i];\r\n        const data = getPolygonPositions(polygon, layer, center, true);\r\n        for (let j = 0, len1 = data.length; j < len1; j++) {\r\n            const d = data[j];\r\n            for (let m = 0, len2 = d.length; m < len2; m++) {\r\n                //ring\r\n                transfer.push(d[m]);\r\n            }\r\n        }\r\n        let height = (isGeoJSONPolygon(polygon) ? polygon.properties : polygon.getProperties() || {}).height || 1;\r\n        height = layer.distanceToVector3(height, height).x;\r\n        datas.push({\r\n            data,\r\n            height\r\n        });\r\n    }\r\n    return {\r\n        datas,\r\n        transfer\r\n    };\r\n}\r\n\r\n\r\n\r\n\r\n","import * as maptalks from 'maptalks';\r\nimport * as THREE from 'three';\r\nimport BaseObject from './BaseObject';\r\nimport { initVertexColors, getCenterOfPoints, getExtrudeGeometryParams } from './util/ExtrudeUtil';\r\nimport ExtrudePolygon from './ExtrudePolygon';\r\nimport MergedMixin from './MergedMixin';\r\nimport { getGeoJSONCenter, isGeoJSONPolygon } from './util/GeoJSONUtil';\r\nimport { mergeBufferGeometries } from './util/MergeGeometryUtil';\r\nimport { getActor } from './worker/MeshActor';\r\nimport { addAttribute } from './util/ThreeAdaptUtil';\r\n\r\n\r\nfunction updateAttribute(data) {\r\n    //arraybuffer data\r\n    const { position, normal, uv, indices } = data;\r\n    const color = new Float32Array(position.length);\r\n    color.fill(1, 0, position.length);\r\n    const bufferGeomertry = new THREE.BufferGeometry();\r\n    addAttribute(bufferGeomertry, 'color', new THREE.BufferAttribute(color, 3));\r\n    addAttribute(bufferGeomertry, 'normal', new THREE.BufferAttribute(new Float32Array(normal), 3));\r\n    addAttribute(bufferGeomertry, 'position', new THREE.BufferAttribute(new Float32Array(position), 3));\r\n    addAttribute(bufferGeomertry, 'uv', new THREE.BufferAttribute(new Float32Array(uv), 2));\r\n    bufferGeomertry.setIndex(new THREE.BufferAttribute(new Uint32Array(indices), 1));\r\n    return bufferGeomertry;\r\n}\r\n\r\nconst OPTIONS = {\r\n    altitude: 0,\r\n    height: 1,\r\n    topColor: null,\r\n    bottomColor: '#2d2f61',\r\n};\r\n\r\nclass ExtrudePolygons extends MergedMixin(BaseObject) {\r\n    constructor(polygons, options, material, layer) {\r\n        if (!Array.isArray(polygons)) {\r\n            polygons = [polygons];\r\n        }\r\n        const centers = [];\r\n        const len = polygons.length;\r\n        for (let i = 0; i < len; i++) {\r\n            const polygon = polygons[i];\r\n            centers.push(isGeoJSONPolygon(polygon) ? getGeoJSONCenter(polygon) : polygon.getCenter());\r\n        }\r\n        // Get the center point of the point set\r\n        const center = getCenterOfPoints(centers);\r\n        options = maptalks.Util.extend({}, OPTIONS, options, { layer, polygons, coordinate: center });\r\n        const { topColor, bottomColor, altitude, asynchronous } = options;\r\n        let bufferGeometry;\r\n        const extrudePolygons = [], faceMap = [], geometriesAttributes = [];\r\n        if (asynchronous) {\r\n            var actor = getActor();\r\n            const SIZE = 0.000001;\r\n            bufferGeometry = new THREE.BoxBufferGeometry(SIZE, SIZE, SIZE * 5);\r\n            actor.pushQueue({\r\n                type: 'Polygon',\r\n                layer,\r\n                key: options.key,\r\n                center,\r\n                data: polygons,\r\n                callback: (e) => {\r\n                    const { faceMap, geometriesAttributes } = e;\r\n                    this._faceMap = faceMap;\r\n                    this._geometriesAttributes = geometriesAttributes;\r\n                    const bufferGeometry = updateAttribute(e);\r\n                    if (topColor && !material.map) {\r\n                        initVertexColors(bufferGeometry, bottomColor, topColor);\r\n                        material.vertexColors = THREE.VertexColors;\r\n                    }\r\n                    this.getObject3d().geometry.dispose();\r\n                    this.getObject3d().geometry = bufferGeometry;\r\n                    this.getObject3d().material.needsUpdate = true;\r\n                    this._geometryCache = bufferGeometry.clone();\r\n                    this._fire('workerload', { target: this });\r\n                }\r\n            });\r\n        } else {\r\n            const geometries = [];\r\n            let faceIndex = 0, psIndex = 0, normalIndex = 0, uvIndex = 0;\r\n            for (let i = 0; i < len; i++) {\r\n                const polygon = polygons[i];\r\n                const height = (isGeoJSONPolygon(polygon) ? polygon.properties : polygon.getProperties() || {}).height || 1;\r\n                const buffGeom = getExtrudeGeometryParams(polygon, height, layer, center);\r\n                geometries.push(buffGeom);\r\n\r\n                // const extrudePolygon = new ExtrudePolygon(polygon, Object.assign({}, options, { height, index: i }), material, layer);\r\n                // extrudePolygons.push(extrudePolygon);\r\n\r\n                const { position, normal, uv, indices } = buffGeom;\r\n                const faceLen = indices.length / 3;\r\n                faceMap[i] = [faceIndex + 1, faceIndex + faceLen];\r\n                faceIndex += faceLen;\r\n                const psCount = position.length / 3,\r\n                    //  colorCount = buffGeom.attributes.color.count,\r\n                    normalCount = normal.length / 3, uvCount = uv.length / 2;\r\n                geometriesAttributes[i] = {\r\n                    position: {\r\n                        count: psCount,\r\n                        start: psIndex,\r\n                        end: psIndex + psCount * 3,\r\n                    },\r\n                    normal: {\r\n                        count: normalCount,\r\n                        start: normalIndex,\r\n                        end: normalIndex + normalCount * 3,\r\n                    },\r\n                    // color: {\r\n                    //     count: colorCount,\r\n                    //     start: colorIndex,\r\n                    //     end: colorIndex + colorCount * 3,\r\n                    // },\r\n                    uv: {\r\n                        count: uvCount,\r\n                        start: uvIndex,\r\n                        end: uvIndex + uvCount * 2,\r\n                    },\r\n                    hide: false\r\n                };\r\n                psIndex += psCount * 3;\r\n                normalIndex += normalCount * 3;\r\n                // colorIndex += colorCount * 3;\r\n                uvIndex += uvCount * 2;\r\n            }\r\n            bufferGeometry = mergeBufferGeometries(geometries);\r\n            if (topColor && !material.map) {\r\n                initVertexColors(bufferGeometry, bottomColor, topColor);\r\n                material.vertexColors = THREE.VertexColors;\r\n            }\r\n        }\r\n\r\n        super();\r\n        this._initOptions(options);\r\n\r\n        this._createMesh(bufferGeometry, material);\r\n        const z = layer.distanceToVector3(altitude, altitude).x;\r\n        const v = layer.coordinateToVector3(center, z);\r\n        this.getObject3d().position.copy(v);\r\n\r\n        //Face corresponding to monomer\r\n        this._faceMap = faceMap;\r\n        this._baseObjects = extrudePolygons;\r\n        this._datas = polygons;\r\n        this._geometriesAttributes = geometriesAttributes;\r\n        this.faceIndex = null;\r\n        this._geometryCache = bufferGeometry.clone();\r\n        this.isHide = false;\r\n\r\n        this._initBaseObjectsEvent(extrudePolygons);\r\n    }\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    getSelectMesh() {\r\n        const index = this._getIndex();\r\n        if (index != null) {\r\n            if (!this._baseObjects[index]) {\r\n                const polygon = this._datas[index];\r\n                const opts = Object.assign({}, this.options, isGeoJSONPolygon(polygon) ? polygon.properties : polygon.getProperties(), { index });\r\n                this._baseObjects[index] = new ExtrudePolygon(polygon, opts, this.getObject3d().material, this.getLayer());\r\n                this._proxyEvent(this._baseObjects[index]);\r\n            }\r\n            return {\r\n                data: this._datas[index],\r\n                baseObject: this._baseObjects[index]\r\n            };\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    _getIndex(faceIndex) {\r\n        if (faceIndex == null) {\r\n            faceIndex = this.faceIndex;\r\n        }\r\n        if (faceIndex != null) {\r\n            for (let i = 0, len = this._faceMap.length; i < len; i++) {\r\n                const [start, end] = this._faceMap[i];\r\n                if (start <= faceIndex && faceIndex < end) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ExtrudePolygons;\r\n","/* eslint-disable indent */\r\nimport * as THREE from 'three';\r\n\r\nfunction positionsConvert(worldPoints, altitude = 0, layer) {\r\n    const vectors = [];\r\n    for (let i = 0, len = worldPoints.length; i < len; i += 3) {\r\n        let x = worldPoints[i], y = worldPoints[i + 1], z = worldPoints[i + 2];\r\n        if (altitude > 0) {\r\n            z += layer.distanceToVector3(altitude, altitude).x;\r\n        }\r\n        vectors.push(new THREE.Vector3(x, y, z));\r\n    }\r\n    return vectors;\r\n}\r\n\r\nexport function vectors2Pixel(worldPoints, size, camera, altitude = 0, layer) {\r\n    if (!(worldPoints[0] instanceof THREE.Vector3)) {\r\n        worldPoints = positionsConvert(worldPoints, altitude, layer);\r\n    }\r\n    const pixels = worldPoints.map(worldPoint => {\r\n        return vector2Pixel(worldPoint, size, camera);\r\n    });\r\n    return pixels;\r\n\r\n}\r\n\r\n// eslint-disable-next-line camelcase\r\nexport function vector2Pixel(world_vector, size, camera) {\r\n    // eslint-disable-next-line camelcase\r\n    const vector = world_vector.project(camera);\r\n    const halfWidth = size.width / 2;\r\n    const halfHeight = size.height / 2;\r\n    const result = {\r\n        x: Math.round(vector.x * halfWidth + halfWidth),\r\n        y: Math.round(-vector.y * halfHeight + halfHeight)\r\n    };\r\n    return result;\r\n}\r\n\r\nexport function draw(context, data, type, options) {\r\n    options = options || {};\r\n    for (const key in options) {\r\n        context[key] = options[key];\r\n    }\r\n    switch (type) {\r\n        case 'Circle': {\r\n            const size = options._size || options.size || 20;\r\n            const x = data.x || data[0], y = data.y || data[1];\r\n            context.beginPath();\r\n            context.moveTo(x, y);\r\n            context.arc(x, y, size / 2, 0, Math.PI * 2);\r\n            context.fill();\r\n            context.restore();\r\n            break;\r\n        }\r\n        case 'LineString': {\r\n            context.beginPath();\r\n            for (let j = 0; j < data.length; j++) {\r\n                const xy = data[j];\r\n                const x = xy.x || xy[0],\r\n                    y = xy.y || xy[1];\r\n                if (j === 0) {\r\n                    context.moveTo(x, y);\r\n                } else {\r\n                    context.lineTo(x, y);\r\n                }\r\n            }\r\n            context.stroke();\r\n            context.restore();\r\n            break;\r\n        }\r\n        default: {\r\n            console.error(`type ${type} is not support now!`);\r\n            break;\r\n\r\n        }\r\n    }\r\n}\r\n","import * as maptalks from 'maptalks';\r\nimport * as THREE from 'three';\r\nimport BaseObject from './BaseObject';\r\nimport { vector2Pixel } from './util/IdentifyUtil';\r\nimport { addAttribute } from './util/ThreeAdaptUtil';\r\n\r\nconst OPTIONS = {\r\n    altitude: 0,\r\n    height: 0\r\n};\r\n\r\nconst vector = new THREE.Vector3();\r\n\r\nclass Point extends BaseObject {\r\n    constructor(coordinate, options, material, layer) {\r\n        options = maptalks.Util.extend({}, OPTIONS, options, { layer, coordinate });\r\n        super();\r\n        let { height, altitude, color } = options;\r\n        const vs = [], colors = [];\r\n        if (color) {\r\n            color = (color instanceof THREE.Color ? color : new THREE.Color(color));\r\n            colors.push(color.r, color.g, color.b);\r\n        }\r\n        const z = layer.distanceToVector3(height, height).x;\r\n        const v = layer.coordinateToVector3(coordinate, z);\r\n        vs.push(v.x, v.y, v.z);\r\n        const geometry = new THREE.BufferGeometry();\r\n        addAttribute(geometry, 'position', new THREE.Float32BufferAttribute(vs, 3, true));\r\n        if (colors.length) {\r\n            addAttribute(geometry, 'color', new THREE.Float32BufferAttribute(colors, 3, true));\r\n        }\r\n\r\n        options.positions = v;\r\n        this._initOptions(options);\r\n        this._createPoints(geometry, material);\r\n        const z1 = layer.distanceToVector3(altitude, altitude).x;\r\n        this.getObject3d().position.z = z1;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {maptalks.Coordinate} coordinate\r\n     */\r\n    identify(coordinate) {\r\n        const layer = this.getLayer(), size = this.getMap().getSize(),\r\n            camera = this.getLayer().getCamera(), positions = this.getOptions().positions, altitude = this.getOptions().altitude;\r\n        //Size of points\r\n        const pointSize = this.getObject3d().material.size;\r\n        const pixel = this.getMap().coordToContainerPoint(coordinate);\r\n\r\n        const z = layer.distanceToVector3(altitude, altitude).x;\r\n        vector.x = positions.x;\r\n        vector.y = positions.y;\r\n        vector.z = positions.z + z;\r\n        //3D vector to screen coordinates\r\n        const p = vector2Pixel(vector, size, camera);\r\n        //Distance between two points\r\n        const distance = Math.sqrt(Math.pow(pixel.x - p.x, 2) + Math.pow(pixel.y - p.y, 2));\r\n        if (distance <= pointSize / 2) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default Point;\r\n","\r\nimport * as maptalks from 'maptalks';\r\n\r\nconst ROW = 30, COL = 30;\r\n\r\n\r\nfunction contains(b, p) {\r\n    const { minx, miny, maxx, maxy } = b;\r\n    const [x, y] = p;\r\n    if (minx <= x && x <= maxx && miny <= y && y <= maxy) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nclass BBox {\r\n\r\n    constructor(minlng, minlat, maxlng, maxlat) {\r\n        this.minlng = minlng;\r\n        this.minlat = minlat;\r\n        this.maxlng = maxlng;\r\n        this.maxlat = maxlat;\r\n        this.minx = Infinity;\r\n        this.miny = Infinity;\r\n        this.maxx = -Infinity;\r\n        this.maxy = -Infinity;\r\n        this.coordinates = [];\r\n        this.positions = [];\r\n        this.indexs = [];\r\n        this.key = null;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param {*} map\r\n     */\r\n    updateBBoxPixel(map) {\r\n        let minx = Infinity, miny = Infinity, maxx = -Infinity, maxy = -Infinity;\r\n        const { minlng, minlat, maxlng, maxlat } = this;\r\n        [\r\n            [minlng, minlat],\r\n            [minlng, maxlat],\r\n            [maxlng, minlat],\r\n            [maxlng, maxlat]\r\n        ].map(lnglat => {\r\n            return new maptalks.Coordinate(lnglat);\r\n        }).map(coordinate => {\r\n            return map.coordToContainerPoint(coordinate);\r\n        }).forEach(pixel => {\r\n            minx = Math.min(minx, pixel.x);\r\n            miny = Math.min(miny, pixel.y);\r\n            maxx = Math.max(maxx, pixel.x);\r\n            maxy = Math.max(maxy, pixel.y);\r\n        });\r\n        this.minx = minx;\r\n        this.miny = miny;\r\n        this.maxx = maxx;\r\n        this.maxy = maxy;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     *Determine whether a point is included\r\n     * @param {*} c\r\n     */\r\n    containsCoordinate(c) {\r\n        let lng, lat;\r\n        if (Array.isArray(c)) {\r\n            lng = c[0];\r\n            lat = c[1];\r\n        } else if (c instanceof maptalks.Coordinate) {\r\n            lng = c.x;\r\n            lat = c.y;\r\n        }\r\n        const { minlng, minlat, maxlng, maxlat } = this;\r\n        if (minlng <= lng && lng <= maxlng && minlat <= lat & lat <= maxlat) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     *Judge rectangle intersection\r\n     * @param {*} pixel\r\n     * @param {*} size\r\n     */\r\n    isRecCross(pixel, size) {\r\n        const { x, y } = pixel;\r\n        const rec = {\r\n            minx: x - size / 2,\r\n            miny: y - size / 2,\r\n            maxx: x + size / 2,\r\n            maxy: y + size / 2\r\n        };\r\n        const { minx, miny, maxx, maxy } = rec;\r\n        if (contains(this, [minx, miny]) ||\r\n            contains(this, [minx, maxy]) ||\r\n            contains(this, [maxx, miny]) ||\r\n            contains(this, [maxx, maxy]) ||\r\n            contains(rec, [this.minx, this.miny]) ||\r\n            contains(rec, [this.minx, this.maxy]) ||\r\n            contains(rec, this.maxx, this.miny) ||\r\n            contains(rec, this.maxx, this.maxy)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     *generate grids\r\n     * @param {*} minlng\r\n     * @param {*} minlat\r\n     * @param {*} maxlng\r\n     * @param {*} maxlat\r\n     */\r\n    static initGrids(minlng, minlat, maxlng, maxlat) {\r\n        const grids = [], offsetX = maxlng - minlng, offsetY = maxlat - minlat;\r\n        const averageX = offsetX / COL, averageY = offsetY / ROW;\r\n        let x = minlng, y = minlat;\r\n        for (let i = 0; i < COL; i++) {\r\n            x = minlng + i * averageX;\r\n            for (let j = 0; j < ROW; j++) {\r\n                y = minlat + j * averageY;\r\n                const bounds = new BBox(x, y, x + averageX, y + averageY);\r\n                bounds.key = j + '-' + i;\r\n                grids.push(bounds);\r\n            }\r\n        }\r\n        return grids;\r\n    }\r\n\r\n}\r\n\r\nexport default BBox;\r\n","import * as maptalks from 'maptalks';\r\nimport * as THREE from 'three';\r\nimport BaseObject from './BaseObject';\r\nimport Point from './Point';\r\nimport { vector2Pixel } from './util/IdentifyUtil';\r\nimport MergedMixin from './MergedMixin';\r\nimport BBox from './util/BBox';\r\nimport { addAttribute } from './util/ThreeAdaptUtil';\r\n\r\nconst OPTIONS = {\r\n    altitude: 0\r\n};\r\n\r\nconst vector = new THREE.Vector3();\r\n\r\n/**\r\n *points\r\n */\r\nclass Points extends MergedMixin(BaseObject) {\r\n    constructor(points, options, material, layer) {\r\n        if (!Array.isArray(points)) {\r\n            points = [points];\r\n        }\r\n        options = maptalks.Util.extend({}, OPTIONS, options, { layer, points });\r\n        let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\r\n        for (let i = 0, len = points.length; i < len; i++) {\r\n            const { coordinate } = points[i];\r\n            let x, y;\r\n            if (Array.isArray(coordinate)) {\r\n                x = coordinate[0];\r\n                y = coordinate[1];\r\n            } else if (coordinate instanceof maptalks.Coordinate) {\r\n                x = coordinate.x;\r\n                y = coordinate.y;\r\n            }\r\n            minX = Math.min(minX, x);\r\n            minY = Math.min(minY, y);\r\n            maxX = Math.max(maxX, x);\r\n            maxY = Math.max(maxY, y);\r\n        }\r\n        const grids = BBox.initGrids(minX, minY, maxX, maxY);\r\n        const gridslen = grids.length;\r\n\r\n        const vs = [], vectors = [], colors = [], pointMeshes = [], geometriesAttributes = [];\r\n        for (let i = 0, len = points.length; i < len; i++) {\r\n            let { coordinate, height, color } = points[i];\r\n            if (color) {\r\n                color = (color instanceof THREE.Color ? color : new THREE.Color(color));\r\n                colors.push(color.r, color.g, color.b);\r\n            }\r\n            const z = layer.distanceToVector3(height, height).x;\r\n            const v = layer.coordinateToVector3(coordinate, z);\r\n            vs.push(v.x, v.y, v.z);\r\n            vectors.push(v);\r\n\r\n            geometriesAttributes[i] = {\r\n                position: {\r\n                    count: 1,\r\n                    start: i * 3,\r\n                    end: i * 3 + 3\r\n                },\r\n                hide: false\r\n            };\r\n            for (let j = 0; j < gridslen; j++) {\r\n                if (grids[j].containsCoordinate(coordinate)) {\r\n                    // grids[j].coordinates.push(coordinate);\r\n                    grids[j].positions.push(v);\r\n                    grids[j].indexs.push(i);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const geometry = new THREE.BufferGeometry();\r\n        addAttribute(geometry, 'position', new THREE.Float32BufferAttribute(vs, 3, true));\r\n        if (colors.length) {\r\n            addAttribute(geometry, 'color', new THREE.Float32BufferAttribute(colors, 3, true));\r\n        }\r\n\r\n        //for identify\r\n        options.positions = vectors;\r\n        super();\r\n        this._initOptions(options);\r\n        this._createPoints(geometry, material);\r\n        const altitude = options.altitude;\r\n        const z = layer.distanceToVector3(altitude, altitude).x;\r\n        this.getObject3d().position.z = z;\r\n\r\n        this._baseObjects = pointMeshes;\r\n        this._datas = points;\r\n        this.faceIndex = null;\r\n        this._geometriesAttributes = geometriesAttributes;\r\n        this._geometryCache = geometry.clone();\r\n        this.isHide = false;\r\n        this._initBaseObjectsEvent(pointMeshes);\r\n        this._grids = grids;\r\n        this._bindMapEvents();\r\n    }\r\n\r\n    _bindMapEvents() {\r\n        const map = this.getMap();\r\n        this.on('add', () => {\r\n            this._updateGrids();\r\n            map.on('zoomstart zooming zoomend movestart moving moveend pitch rotate', this._updateGrids, this);\r\n        });\r\n        this.on('remove', () => {\r\n            map.off('zoomstart zooming zoomend movestart moving moveend pitch rotate', this._updateGrids, this);\r\n        });\r\n    }\r\n\r\n    _updateGrids() {\r\n        const map = this.getMap();\r\n        this._grids.forEach(b => {\r\n            if (b.indexs.length) {\r\n                b.updateBBoxPixel(map);\r\n            }\r\n        });\r\n    }\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    getSelectMesh() {\r\n        const index = this.faceIndex;\r\n        if (index != null) {\r\n            if (!this._baseObjects[index]) {\r\n                const data = this._datas[index];\r\n                const { coordinate, height, color } = data;\r\n                this._baseObjects[index] = new Point(coordinate, { height, index, color }, this.getObject3d().material, this.getLayer());\r\n                this._proxyEvent(this._baseObjects[index]);\r\n            }\r\n            return {\r\n                data: this._datas[index],\r\n                baseObject: this._baseObjects[index]\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n   *\r\n   * @param {maptalks.Coordinate} coordinate\r\n   */\r\n    identify(coordinate) {\r\n        const layer = this.getLayer(), size = this.getMap().getSize(),\r\n            camera = this.getLayer().getCamera(), altitude = this.getOptions().altitude, map = this.getMap();\r\n        const z = layer.distanceToVector3(altitude, altitude).x;\r\n        const pointSize = this.getObject3d().material.size;\r\n        const pixel = map.coordToContainerPoint(coordinate);\r\n        const bs = [];\r\n        this._grids.forEach(b => {\r\n            if (b.indexs.length) {\r\n                if (b.isRecCross(pixel, pointSize)) {\r\n                    bs.push(b);\r\n                }\r\n            }\r\n        });\r\n        if (bs.length < 1) {\r\n            return false;\r\n        }\r\n\r\n        for (let i = 0, len = bs.length; i < len; i++) {\r\n            for (let j = 0, len1 = bs[i].positions.length; j < len1; j++) {\r\n                const v = bs[i].positions[j];\r\n                vector.x = v.x;\r\n                vector.y = v.y;\r\n                vector.z = v.z + z;\r\n                const p = vector2Pixel(vector, size, camera);\r\n                const distance = Math.sqrt(Math.pow(pixel.x - p.x, 2) + Math.pow(pixel.y - p.y, 2));\r\n                if (distance <= pointSize / 2) {\r\n                    this.faceIndex = bs[i].indexs[j];\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        // for (let i = 0, len = positions.length; i < len; i++) {\r\n        //     const v = positions[i];\r\n        //     vector.x = v.x;\r\n        //     vector.y = v.y;\r\n        //     vector.z = v.z + z;\r\n        //     const p = vector2Pixel(vector, size, camera);\r\n        //     const distance = Math.sqrt(Math.pow(pixel.x - p.x, 2) + Math.pow(pixel.y - p.y, 2));\r\n        //     if (distance <= pointSize / 2) {\r\n        //         this.faceIndex = i;\r\n        //         console.timeEnd(timer);\r\n        //         return true;\r\n        //     }\r\n        // }\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default Points;\r\n","import * as maptalks from 'maptalks';\r\nimport * as THREE from 'three';\r\nimport BaseObject from './BaseObject';\r\nimport { getGeometry, initVertexColors, mergeBarGeometry } from './util/BarUtil';\r\nimport Bar from './Bar';\r\nimport MergedMixin from './MergedMixin';\r\n\r\n\r\nconst OPTIONS = {\r\n    coordinate: null,\r\n    radius: 10,\r\n    height: 100,\r\n    radialSegments: 6,\r\n    altitude: 0,\r\n    topColor: null,\r\n    bottomColor: '#2d2f61',\r\n};\r\n\r\n/**\r\n * merged bars\r\n */\r\nclass Bars extends MergedMixin(BaseObject) {\r\n    constructor(points, options, material, layer) {\r\n        if (!Array.isArray(points)) {\r\n            points = [points];\r\n        }\r\n        const len = points.length;\r\n        const geometries = [], bars = [], geometriesAttributes = [], faceMap = [];\r\n        let faceIndex = 0, psIndex = 0, normalIndex = 0, uvIndex = 0;\r\n        for (let i = 0; i < len; i++) {\r\n            const opts = maptalks.Util.extend({ index: i }, OPTIONS, points[i]);\r\n            const { radius, radialSegments, altitude, topColor, bottomColor, height, coordinate } = opts;\r\n            const r = layer.distanceToVector3(radius, radius).x;\r\n            const h = layer.distanceToVector3(height, height).x;\r\n            const alt = layer.distanceToVector3(altitude, altitude).x;\r\n            const buffGeom = getGeometry({ radius: r, height: h, radialSegments }, false);\r\n            if (topColor && !material.map) {\r\n                initVertexColors(buffGeom, bottomColor, topColor, 'z', h / 2);\r\n                material.vertexColors = THREE.VertexColors;\r\n            }\r\n            // buffGeom.rotateX(Math.PI / 2);\r\n            const v = layer.coordinateToVector3(coordinate);\r\n            const parray = buffGeom.attributes.position.array;\r\n            for (let j = 0, len1 = parray.length; j < len1; j += 3) {\r\n                parray[j + 2] += alt;\r\n                parray[j] += v.x;\r\n                parray[j + 1] += v.y;\r\n                parray[j + 2] += v.z;\r\n            }\r\n            geometries.push(buffGeom);\r\n            const bar = new Bar(coordinate, opts, material, layer);\r\n            bars.push(bar);\r\n\r\n            const geometry = new THREE.Geometry();\r\n            geometry.fromBufferGeometry(buffGeom);\r\n            const faceLen = geometry.faces.length;\r\n            faceMap[i] = [faceIndex + 1, faceIndex + faceLen];\r\n            faceIndex += faceLen;\r\n            geometry.dispose();\r\n\r\n            const psCount = buffGeom.attributes.position.count,\r\n                //  colorCount = buffGeom.attributes.color.count,\r\n                normalCount = buffGeom.attributes.normal.count, uvCount = buffGeom.attributes.uv.count;\r\n            geometriesAttributes[i] = {\r\n                position: {\r\n                    count: psCount,\r\n                    start: psIndex,\r\n                    end: psIndex + psCount * 3,\r\n                },\r\n                normal: {\r\n                    count: normalCount,\r\n                    start: normalIndex,\r\n                    end: normalIndex + normalCount * 3,\r\n                },\r\n                // color: {\r\n                //     count: colorCount,\r\n                //     start: colorIndex,\r\n                //     end: colorIndex + colorCount * 3,\r\n                // },\r\n                uv: {\r\n                    count: uvCount,\r\n                    start: uvIndex,\r\n                    end: uvIndex + uvCount * 2,\r\n                },\r\n                hide: false\r\n            };\r\n            psIndex += psCount * 3;\r\n            normalIndex += normalCount * 3;\r\n            // colorIndex += colorCount * 3;\r\n            uvIndex += uvCount * 2;\r\n        }\r\n        super();\r\n        options = maptalks.Util.extend({}, { altitude: 0, layer, points }, options);\r\n        this._initOptions(options);\r\n        const geometry = mergeBarGeometry(geometries);\r\n        this._createMesh(geometry, material);\r\n\r\n        this._faceMap = faceMap;\r\n        this._baseObjects = bars;\r\n        this._datas = points;\r\n        this._geometriesAttributes = geometriesAttributes;\r\n        this.faceIndex = null;\r\n        this._geometryCache = geometry.clone();\r\n        this.isHide = false;\r\n\r\n        this._initBaseObjectsEvent(bars);\r\n    }\r\n\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    getSelectMesh() {\r\n        const index = this._getIndex();\r\n        if (index != null) {\r\n            return {\r\n                data: this._datas[index],\r\n                baseObject: this._baseObjects[index]\r\n            };\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    _getIndex(faceIndex) {\r\n        if (faceIndex == null) {\r\n            faceIndex = this.faceIndex;\r\n        }\r\n        if (faceIndex != null) {\r\n            for (let i = 0, len = this._faceMap.length; i < len; i++) {\r\n                const [start, end] = this._faceMap[i];\r\n                if (start <= faceIndex && faceIndex < end) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Bars;\r\n","import * as maptalks from 'maptalks';\r\nimport MergedMixin from './MergedMixin';\r\nimport BaseObject from './BaseObject';\r\nimport { getCenterOfPoints } from './util/ExtrudeUtil';\r\nimport { getExtrudeLineParams } from './util/LineUtil';\r\nimport ExtrudeLine from './ExtrudeLine';\r\nimport { getGeoJSONCenter, isGeoJSON } from './util/GeoJSONUtil';\r\nimport { mergeBufferGeometries } from './util/MergeGeometryUtil';\r\n\r\nconst OPTIONS = {\r\n    width: 3,\r\n    height: 1,\r\n    altitude: 0\r\n};\r\n\r\nclass ExtrudeLines extends MergedMixin(BaseObject) {\r\n    constructor(lineStrings, options, material, layer) {\r\n        if (!Array.isArray(lineStrings)) {\r\n            lineStrings = [lineStrings];\r\n        }\r\n        const centers = [];\r\n        const len = lineStrings.length;\r\n        for (let i = 0; i < len; i++) {\r\n            const lineString = lineStrings[i];\r\n            centers.push(isGeoJSON(lineString) ? getGeoJSONCenter(lineString) : lineString.getCenter());\r\n        }\r\n        // Get the center point of the point set\r\n        const center = getCenterOfPoints(centers);\r\n        const geometries = [], extrudeLines = [];\r\n        let faceIndex = 0, faceMap = [], geometriesAttributes = [],\r\n            psIndex = 0, normalIndex = 0;\r\n        for (let i = 0; i < len; i++) {\r\n            const lineString = lineStrings[i];\r\n            const opts = maptalks.Util.extend({}, OPTIONS, isGeoJSON(lineString) ? lineString.properties : lineString.getProperties(), { index: i });\r\n            const { height, width } = opts;\r\n            const w = layer.distanceToVector3(width, width).x;\r\n            const h = layer.distanceToVector3(height, height).x;\r\n            const buffGeom = getExtrudeLineParams(lineString, w, h, layer, center);\r\n            geometries.push(buffGeom);\r\n\r\n            const extrudeLine = new ExtrudeLine(lineString, opts, material, layer);\r\n            extrudeLines.push(extrudeLine);\r\n\r\n            const { position, normal, indices } = buffGeom;\r\n            const faceLen = indices.length / 3;\r\n            faceMap[i] = [faceIndex + 1, faceIndex + faceLen];\r\n            faceIndex += faceLen;\r\n            const psCount = position.length / 3,\r\n                //  colorCount = buffGeom.attributes.color.count,\r\n                normalCount = normal.length / 3;\r\n            geometriesAttributes[i] = {\r\n                position: {\r\n                    count: psCount,\r\n                    start: psIndex,\r\n                    end: psIndex + psCount * 3,\r\n                },\r\n                normal: {\r\n                    count: normalCount,\r\n                    start: normalIndex,\r\n                    end: normalIndex + normalCount * 3,\r\n                },\r\n                // color: {\r\n                //     count: colorCount,\r\n                //     start: colorIndex,\r\n                //     end: colorIndex + colorCount * 3,\r\n                // },\r\n                // uv: {\r\n                //     count: uvCount,\r\n                //     start: uvIndex,\r\n                //     end: uvIndex + uvCount * 2,\r\n                // },\r\n                hide: false\r\n            };\r\n            psIndex += psCount * 3;\r\n            normalIndex += normalCount * 3;\r\n            // colorIndex += colorCount * 3;\r\n            // uvIndex += uvCount * 2;\r\n        }\r\n        const geometry = mergeBufferGeometries(geometries);\r\n\r\n        options = maptalks.Util.extend({}, OPTIONS, options, { layer, lineStrings, coordinate: center });\r\n        super();\r\n        this._initOptions(options);\r\n\r\n        this._createMesh(geometry, material);\r\n        const { altitude } = options;\r\n        const z = layer.distanceToVector3(altitude, altitude).x;\r\n        const v = layer.coordinateToVector3(center, z);\r\n        this.getObject3d().position.copy(v);\r\n\r\n        //Face corresponding to monomer\r\n        this._faceMap = faceMap;\r\n        this._baseObjects = extrudeLines;\r\n        this._datas = lineStrings;\r\n        this._geometriesAttributes = geometriesAttributes;\r\n        this.faceIndex = null;\r\n        this._geometryCache = geometry.clone();\r\n        this.isHide = false;\r\n\r\n        this._initBaseObjectsEvent(extrudeLines);\r\n    }\r\n\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    getSelectMesh() {\r\n        const index = this._getIndex();\r\n        if (index != null) {\r\n            return {\r\n                data: this._datas[index],\r\n                baseObject: this._baseObjects[index]\r\n            };\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    _getIndex(faceIndex) {\r\n        if (faceIndex == null) {\r\n            faceIndex = this.faceIndex;\r\n        }\r\n        if (faceIndex != null) {\r\n            for (let i = 0, len = this._faceMap.length; i < len; i++) {\r\n                const [start, end] = this._faceMap[i];\r\n                if (start <= faceIndex && faceIndex < end) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ExtrudeLines;\r\n","import * as maptalks from 'maptalks';\r\nimport * as THREE from 'three';\r\nimport BaseObject from './BaseObject';\r\nimport { getLinePosition } from './util/LineUtil';\r\nimport MergedMixin from './MergedMixin';\r\nimport { getCenterOfPoints } from './util/ExtrudeUtil';\r\nimport Line from './Line';\r\nimport { getGeoJSONCenter, isGeoJSONLine } from './util/GeoJSONUtil';\r\nimport { addAttribute } from './util/ThreeAdaptUtil';\r\n\r\nconst OPTIONS = {\r\n    altitude: 0,\r\n    colors: null\r\n};\r\n\r\n/**\r\n *\r\n */\r\nclass Lines extends MergedMixin(BaseObject) {\r\n    constructor(lineStrings, options, material, layer) {\r\n        if (!Array.isArray(lineStrings)) {\r\n            lineStrings = [lineStrings];\r\n        }\r\n\r\n        const centers = [];\r\n        const len = lineStrings.length;\r\n        for (let i = 0; i < len; i++) {\r\n            const lineString = lineStrings[i];\r\n            centers.push(isGeoJSONLine(lineString) ? getGeoJSONCenter(lineString) : lineString.getCenter());\r\n        }\r\n        // Get the center point of the point set\r\n        const center = getCenterOfPoints(centers);\r\n        options = maptalks.Util.extend({}, OPTIONS, options, { layer, lineStrings, coordinate: center });\r\n\r\n        const lines = [];\r\n        let faceIndex = 0, faceMap = [], geometriesAttributes = [],\r\n            psIndex = 0, ps = [];\r\n        for (let i = 0; i < len; i++) {\r\n            const lineString = lineStrings[i];\r\n            // const opts = maptalks.Util.extend({}, { altitude: options.altitude, index: i }, lineString.getProperties());\r\n            const { positionsV } = getLinePosition(lineString, layer, center);\r\n\r\n            for (let j = 0, len1 = positionsV.length; j < len1; j++) {\r\n                const v = positionsV[j];\r\n                if (j > 0 && j < len1 - 1) {\r\n                    ps.push(v.x, v.y, v.z);\r\n                }\r\n                ps.push(v.x, v.y, v.z);\r\n            }\r\n\r\n            // const line = new Line(lineString, opts, material, layer);\r\n            // lines.push(line);\r\n\r\n            const psCount = positionsV.length + positionsV.length - 2;\r\n            const faceLen = psCount;\r\n            faceMap[i] = [faceIndex, faceIndex + faceLen];\r\n            faceIndex += faceLen;\r\n\r\n            geometriesAttributes[i] = {\r\n                position: {\r\n                    count: psCount,\r\n                    start: psIndex,\r\n                    end: psIndex + psCount * 3,\r\n                },\r\n                hide: false\r\n            };\r\n            psIndex += psCount * 3;\r\n        }\r\n\r\n        const geometry = new THREE.BufferGeometry();\r\n        addAttribute(geometry, 'position', new THREE.Float32BufferAttribute(ps, 3));\r\n        super();\r\n        this._initOptions(options);\r\n\r\n        this._createLineSegments(geometry, material);\r\n\r\n        const { altitude } = options;\r\n        const z = layer.distanceToVector3(altitude, altitude).x;\r\n        const v = layer.coordinateToVector3(center, z);\r\n        this.getObject3d().position.copy(v);\r\n\r\n        this._faceMap = faceMap;\r\n        this._baseObjects = lines;\r\n        this._datas = lineStrings;\r\n        this._geometriesAttributes = geometriesAttributes;\r\n        this.faceIndex = null;\r\n        this.index = null;\r\n        this._geometryCache = geometry.clone();\r\n        this.isHide = false;\r\n\r\n        this._initBaseObjectsEvent(lines);\r\n    }\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    getSelectMesh() {\r\n        const index = this._getIndex();\r\n        if (index != null) {\r\n            if (!this._baseObjects[index]) {\r\n                const lineString = this._datas[index];\r\n                const opts = maptalks.Util.extend({}, this.getOptions(), { index },\r\n                    isGeoJSONLine(lineString) ? lineString.properties : lineString.getProperties());\r\n                this._baseObjects[index] = new Line(lineString, opts, this.getObject3d().material, this.getLayer());\r\n                this._proxyEvent(this._baseObjects[index]);\r\n            }\r\n            return {\r\n                data: this._datas[index],\r\n                baseObject: this._baseObjects[index]\r\n            };\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    _getIndex(faceIndex) {\r\n        if (faceIndex == null) {\r\n            faceIndex = this.faceIndex || this.index;\r\n        }\r\n        if (faceIndex != null) {\r\n            for (let i = 0, len = this._faceMap.length; i < len; i++) {\r\n                const [start, end] = this._faceMap[i];\r\n                if (start <= faceIndex && faceIndex < end) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Lines;\r\n","/*\r\n\r\nGlobal sharing\r\n\r\n*/\r\n\r\n\r\n//Maximum concurrent\r\nconst MAX = 10;\r\nconst waitingQueue = [\r\n    // {\r\n    //     key,\r\n    //     url,\r\n    //     callback,\r\n    //     img,\r\n    //     vt\r\n    // }\r\n];\r\nconst currentQueue = [];\r\n\r\nexport function getQueues() {\r\n    return {\r\n        waitingQueue,\r\n        currentQueue\r\n    };\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} key\r\n * @param {*} url\r\n * @param {*} callback\r\n * @param {*} img\r\n * @param {*} vt\r\n */\r\nexport function pushQueue(key, url, callback, img, vt) {\r\n    // url += `?key=${key}`;\r\n    const q = {\r\n        key,\r\n        url,\r\n        callback,\r\n        img,\r\n        vt\r\n    };\r\n    if (currentQueue.length < MAX) {\r\n        currentQueue.push(q);\r\n        vt.loopMessage(q);\r\n    } else {\r\n        waitingQueue.push(q);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} index\r\n */\r\nexport function outQueue(index) {\r\n    const callback = deleteQueueItem(waitingQueue, index);\r\n    if (callback) {\r\n        callback(index);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n *\r\n * @param {*} queArray\r\n * @param {*} index\r\n */\r\nexport function deleteQueueItem(queArray, index) {\r\n    for (let i = 0, len = queArray.length; i < len; i++) {\r\n        const q = queArray[i];\r\n        if (q) {\r\n            const { key, callback } = q;\r\n            if (index === key) {\r\n                queArray.splice(i, 1);\r\n                return callback;\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} key\r\n * @param {*} vt\r\n */\r\nexport function nextLoop(key, vt) {\r\n    deleteQueueItem(currentQueue, key);\r\n    if (waitingQueue.length) {\r\n        currentQueue.push(waitingQueue[0]);\r\n        waitingQueue.splice(0, 1);\r\n        const last = currentQueue[currentQueue.length - 1];\r\n        vt.loopMessage(last);\r\n    }\r\n}\r\n\r\n\r\n// function message(q) {\r\n//     if (currentQueue.length > 0) {\r\n//         const { key, url, callback, img, loopMessage } = q;\r\n//         maptalks.Ajax.getJSON(url, {}, function (error, res) {\r\n//             if (error) {\r\n//                 console.error(error);\r\n//                 callback(key, null, img);\r\n//             } else {\r\n//                 callback(key, res, img);\r\n//             }\r\n\r\n//             deleteQueueItem(currentQueue, key);\r\n//             if (waitingQueue.length) {\r\n//                 currentQueue.push(waitingQueue[0]);\r\n//                 waitingQueue.splice(0, 1);\r\n//                 const last = currentQueue[currentQueue.length - 1];\r\n//                 message(last);\r\n//                 //  循环消费\r\n//             }\r\n//         });\r\n//     }\r\n// }\r\n","import * as maptalks from 'maptalks';\r\nimport * as THREE from 'three';\r\nimport { pushQueue, outQueue, getQueues, nextLoop } from './queue/TileDataQueue';\r\nimport { isGeoJSONPolygon, isGeoJSONLine, spliteGeoJSONMulti, isGeoJSONPoint, getGeoJSONCoordinates } from './util/GeoJSONUtil';\r\n\r\nconst canvas = document.createElement('canvas');\r\nconst SIZE = 256;\r\ncanvas.width = canvas.height = SIZE;\r\nfunction generateImage(key, debug) {\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, SIZE, SIZE);\r\n    ctx.save();\r\n    if (debug) {\r\n        ctx.fillStyle = 'red';\r\n        ctx.strokeStyle = 'rgba(255,0,0,0.4)';\r\n        ctx.lineWidth = 0.2;\r\n        const text = key || 'tile';\r\n        ctx.font = '18px sans-serif';\r\n        ctx.rect(0, 0, SIZE, SIZE);\r\n        ctx.stroke();\r\n        ctx.fillText(text, 15, SIZE / 2);\r\n    }\r\n    return canvas.toDataURL();\r\n}\r\n\r\nconst OPTIONS = {\r\n    worker: false\r\n};\r\n/**\r\n *Provide a simple data loading layer with large amount of data\r\n */\r\nclass ThreeVectorTileLayer extends maptalks.TileLayer {\r\n    constructor(url, options = {}, getMaterial, layer) {\r\n        super(maptalks.Util.GUID(), maptalks.Util.extend({ urlTemplate: url }, OPTIONS, options));\r\n        this._opts = options;\r\n        this._layer = layer;\r\n        this.getMaterial = getMaterial;\r\n        this._baseObjectKeys = {};\r\n        this._loadTiles = {};\r\n        this._add = null;\r\n        this._layerLaodTime = new Date().getTime();\r\n        this._init();\r\n    }\r\n\r\n    isAsynchronous() {\r\n        return this._opts.worker;\r\n    }\r\n\r\n    /**\r\n     *get current all baseobject\r\n     */\r\n    getBaseObjects() {\r\n        const loadTiles = this._loadTiles;\r\n        const baseos = [];\r\n        for (let key in loadTiles) {\r\n            const baseobjects = this._baseObjectKeys[key];\r\n            if (baseobjects && Array.isArray(baseobjects) && baseobjects.length) {\r\n                for (let i = 0, len = baseobjects.length; i < len; i++) {\r\n                    baseos.push(baseobjects[i]);\r\n                }\r\n            }\r\n        }\r\n        return baseos;\r\n    }\r\n\r\n    /**\r\n     * This method should be overridden for event handling\r\n     * @param {*} type\r\n     * @param {*} e\r\n     */\r\n    // eslint-disable-next-line no-unused-vars\r\n    onSelectMesh(type, e) {\r\n\r\n    }\r\n\r\n    /**\r\n     * this is can override\r\n     * @param {*} index\r\n     * @param {*} json\r\n     */\r\n    formatBaseObjects(index, json) {\r\n        const opts = this._opts, baseobjects = [];\r\n        const asynchronous = this.isAsynchronous();\r\n        for (let layerName in json) {\r\n            const geojson = json[layerName] || {};\r\n            let features;\r\n            if (Array.isArray(geojson)) {\r\n                features = geojson;\r\n            } else if (geojson.type === 'FeatureCollection') {\r\n                features = geojson.features;\r\n            }\r\n            if (features && features.length) {\r\n                const polygons = [], lineStrings = [], points = [];\r\n                for (let i = 0, len = features.length; i < len; i++) {\r\n                    const feature = features[i];\r\n                    if (isGeoJSONPolygon(feature)) {\r\n                        polygons.push(feature);\r\n                    } else if (isGeoJSONLine(feature)) {\r\n                        const fs = spliteGeoJSONMulti(feature);\r\n                        for (let j = 0, len1 = fs.length; j < len1; j++) {\r\n                            lineStrings.push(fs[j]);\r\n                        }\r\n                    } else if (isGeoJSONPoint(feature)) {\r\n                        const fs = spliteGeoJSONMulti(feature);\r\n                        for (let j = 0, len1 = fs.length; j < len1; j++) {\r\n                            points.push(maptalks.Util.extend({}, fs[j].properties, fs[j], { coordinate: getGeoJSONCoordinates(fs[j]) }));\r\n                        }\r\n                    }\r\n                }\r\n                if (polygons.length) {\r\n                    const material = this._getMaterial(layerName, polygons, index, geojson);\r\n                    if (material) {\r\n                        const extrudepolygons = this._layer.toExtrudePolygons(polygons,\r\n                            maptalks.Util.extend({}, { topColor: '#fff', layerName, asynchronous, key: index }, opts), material);\r\n                        baseobjects.push(extrudepolygons);\r\n                    }\r\n                }\r\n\r\n                if (lineStrings.length) {\r\n                    const material = this._getMaterial(layerName, lineStrings, index, geojson);\r\n                    if (material && (material instanceof THREE.LineBasicMaterial || material instanceof THREE.LineDashedMaterial)) {\r\n                        const lines = this._layer.toLines(lineStrings, maptalks.Util.extend({}, { layerName }, opts), material);\r\n                        baseobjects.push(lines);\r\n                    }\r\n                }\r\n                if (points.length) {\r\n                    const material = this._getMaterial(layerName, points, index, geojson);\r\n                    if (material && material instanceof THREE.PointsMaterial) {\r\n                        const ps = this._layer.toPoints(points, maptalks.Util.extend({}, { layerName }, opts), material);\r\n                        baseobjects.push(ps);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return baseobjects;\r\n    }\r\n\r\n    //queue loop\r\n    loopMessage(q) {\r\n        const { currentQueue } = getQueues();\r\n        if (currentQueue.length > 0) {\r\n            this.getTileData(q);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param {*} q\r\n     */\r\n    getTileData(q) {\r\n        const { key, url, callback, img } = q;\r\n        maptalks.Ajax.getJSON(url, {}, function (error, res) {\r\n            if (error) {\r\n                console.error(error);\r\n                callback(key, null, img);\r\n            } else {\r\n                callback(key, res, img);\r\n            }\r\n        });\r\n    }\r\n\r\n    _getCurentTileKeys() {\r\n        const tileGrids = this.getTiles().tileGrids || [];\r\n        const keys = [], keysMap = {};\r\n        for (let i = 0, len = tileGrids.length; i < len; i++) {\r\n            const d = tileGrids[i];\r\n            const tiles = d.tiles || [];\r\n            for (let j = 0, len1 = tiles.length; j < len1; j++) {\r\n                const { dupKey } = tiles[j];\r\n                keys.push(dupKey);\r\n                keysMap[dupKey] = true;\r\n            }\r\n\r\n        }\r\n        return { keys, keysMap };\r\n    }\r\n\r\n\r\n    _isLoad() {\r\n        const { keys } = this._getCurentTileKeys();\r\n        const keys1 = Object.keys(this._renderer.tilesInView);\r\n        if (keys.length === keys1.length) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    _layerOnLoad() {\r\n        // This event will be triggered multiple times per unit time\r\n        const time = new Date().getTime();\r\n        const offsetTime = time - this._layerLaodTime;\r\n        if (offsetTime < 20) {\r\n            return;\r\n        }\r\n        this._layerLaodTime = time;\r\n        const tilesInView = this._renderer.tilesInView, loadTiles = this._loadTiles, threeLayer = this._layer, keys = this._baseObjectKeys;\r\n        const tilesInViewLen = Object.keys(tilesInView), loadTilesLen = Object.keys(loadTiles).length;\r\n        const needsRemoveBaseObjects = [];\r\n        if (tilesInViewLen && loadTilesLen) {\r\n            for (let index in loadTiles) {\r\n                if (!tilesInView[index]) {\r\n                    if (keys[index]) {\r\n                        (keys[index] || []).forEach(baseobject => {\r\n                            needsRemoveBaseObjects.push(baseobject);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (needsRemoveBaseObjects.length) {\r\n            threeLayer.removeMesh(needsRemoveBaseObjects, false);\r\n        }\r\n        if (tilesInViewLen && loadTilesLen) {\r\n            for (let index in tilesInView) {\r\n                if (!loadTiles[index]) {\r\n                    if (keys[index]) {\r\n                        const baseobject = keys[index];\r\n                        threeLayer.addMesh(baseobject);\r\n                    } else {\r\n                        const [y, x, z] = index.split('_').slice(1, 4);\r\n                        this.getTileUrl(x, y, z);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this._loadTiles = Object.assign({}, tilesInView);\r\n        this._diffCache();\r\n    }\r\n\r\n    _init() {\r\n        this.on('layerload', this._layerOnLoad);\r\n        this.on('add', () => {\r\n            if (this._add === false) {\r\n                const baseobjects = this.getBaseObjects();\r\n                this._layer.addMesh(baseobjects);\r\n            }\r\n            this._add = true;\r\n            /**\r\n             * layerload have a bug ,Sometimes it doesn't trigger,I don't know why\r\n             * Add heartbeat detection mechanism\r\n             */\r\n            this.intervalId = setInterval(() => {\r\n                if (this._isLoad() && (!this._layer.getMap().isInteracting())) {\r\n                    this.fire('layerload');\r\n                }\r\n            }, 1000);\r\n        });\r\n        this.on('remove', () => {\r\n            this._add = false;\r\n            const baseobjects = this.getBaseObjects();\r\n            this._layer.removeMesh(baseobjects);\r\n            clearInterval(this.intervalId);\r\n        });\r\n        this.on('show', () => {\r\n            const baseobjects = this.getBaseObjects();\r\n            baseobjects.forEach(baseobject => {\r\n                baseobject.show();\r\n            });\r\n            for (let key in this._baseObjectKeys) {\r\n                const baseobjects = this._baseObjectKeys[key] || [];\r\n                baseobjects.forEach(baseobject => {\r\n                    baseobject.show();\r\n                });\r\n            }\r\n        });\r\n        this.on('hide', () => {\r\n            const baseobjects = this.getBaseObjects();\r\n            baseobjects.forEach(baseobject => {\r\n                baseobject.hide();\r\n            });\r\n            for (let key in this._baseObjectKeys) {\r\n                const baseobjects = this._baseObjectKeys[key] || [];\r\n                baseobjects.forEach(baseobject => {\r\n                    baseobject.hide();\r\n                });\r\n            }\r\n        });\r\n        this.on('renderercreate', (e) => {\r\n            e.renderer.loadTile = function loadTile(tile) {\r\n                var tileSize = this.layer.getTileSize();\r\n                var tileImage = new Image();\r\n                tileImage.width = tileSize['width'];\r\n                tileImage.height = tileSize['height'];\r\n                tileImage.onload = this.onTileLoad.bind(this, tileImage, tile);\r\n                tileImage.onerror = this.onTileError.bind(this, tileImage, tile);\r\n                this.loadTileImage(tileImage, tile['url'], tile.dupKey);\r\n                return tileImage;\r\n            };\r\n\r\n            e.renderer.deleteTile = function (tile) {\r\n                if (!tile || !tile.image) {\r\n                    return;\r\n                }\r\n                tile.image.onload = null;\r\n                tile.image.onerror = null;\r\n                const tileinfo = tile.info || {};\r\n                outQueue(tileinfo.dupKey);\r\n            };\r\n\r\n            e.renderer.loadTileImage = (img, url, key) => {\r\n                img._key = key;\r\n                pushQueue(key, url, (index, json, image) => {\r\n                    // img.src = generateImage(key, this._opts.debug);\r\n                    this._generateBaseObjects(index, json, image);\r\n                    nextLoop(index, this);\r\n                }, img, this);\r\n            };\r\n        });\r\n    }\r\n\r\n    _getMaterial(layerName, data, index, geojson) {\r\n        if (this.getMaterial && maptalks.Util.isFunction(this.getMaterial)) {\r\n            return this.getMaterial(layerName, data, index, geojson);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    _workerLoad(e) {\r\n        const baseobject = e.target;\r\n        const img = baseobject._img;\r\n        img.currentCount++;\r\n        if (img.currentCount === img.needCount) {\r\n            img.src = generateImage(img._key, this._opts.debug);\r\n        }\r\n    }\r\n\r\n\r\n    _generateBaseObjects(index, json, img) {\r\n        if (json && img) {\r\n            const { keysMap } = this._getCurentTileKeys();\r\n            //not in current ,ignore\r\n            if (!keysMap[index]) {\r\n                img.src = generateImage(index, this._opts.debug);\r\n                return;\r\n            }\r\n            const baseobjects = this.formatBaseObjects(index, json);\r\n            if (baseobjects.length) {\r\n                img.needCount = baseobjects.length;\r\n                img.currentCount = 0;\r\n                for (let i = 0, len = baseobjects.length; i < len; i++) {\r\n                    const baseobject = baseobjects[i];\r\n                    baseobject._img = img;\r\n                    baseobject._vt = this;\r\n                    if (!this.isVisible()) {\r\n                        baseobject.hide();\r\n                    }\r\n                    this._cachetile(index, baseobject);\r\n                    if (!baseobject.isAsynchronous()) {\r\n                        img.currentCount++;\r\n                    }\r\n                }\r\n\r\n                this._layer.addMesh(baseobjects, false);\r\n                if (img.needCount === img.currentCount) {\r\n                    img.src = generateImage(index, this._opts.debug);\r\n                }\r\n                if (this.isAsynchronous()) {\r\n                    baseobjects.filter(baseobject => {\r\n                        return baseobject.isAsynchronous();\r\n                    }).forEach(baseobject => {\r\n                        baseobject.on('workerload', this._workerLoad, this);\r\n                    });\r\n                } else {\r\n                    img.src = generateImage(index, this._opts.debug);\r\n                }\r\n            } else {\r\n                img.src = generateImage(index, this._opts.debug);\r\n            }\r\n            this._loadTiles[index] = true;\r\n        } else if (img) {\r\n            img.src = generateImage(index, this._opts.debug);\r\n        }\r\n    }\r\n\r\n    _diffCache() {\r\n        // if (this._layer.getMap().isInteracting()) {\r\n        //     return;\r\n        // }\r\n        if (Object.keys(this._baseObjectKeys).length > this._renderer.tileCache.max) {\r\n            const tileCache = this._renderer.tileCache.data;\r\n            const tilesInView = this._renderer.tilesInView;\r\n            const needsRemoveBaseObjects = [];\r\n            for (let index in this._baseObjectKeys) {\r\n                if (!tileCache[index] && !tilesInView[index]) {\r\n                    (this._baseObjectKeys[index] || []).forEach(baseobject => {\r\n                        if (baseobject.isAdd) {\r\n                            needsRemoveBaseObjects.push(baseobject);\r\n                        }\r\n                    });\r\n                    this._diposeBaseObject(index);\r\n                    delete this._baseObjectKeys[index];\r\n                }\r\n            }\r\n            // Batch deletion can have better performance\r\n            if (needsRemoveBaseObjects.length) {\r\n                this._layer.removeMesh(needsRemoveBaseObjects, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    _diposeBaseObject(index) {\r\n        const baseobjects = this._baseObjectKeys[index];\r\n        if (baseobjects && baseobjects.length) {\r\n            baseobjects.forEach(baseobject => {\r\n                baseobject.getObject3d().geometry.dispose();\r\n                if (baseobject._geometryCache) {\r\n                    baseobject._geometryCache.dispose();\r\n                }\r\n                const bos = baseobject._baseObjects;\r\n                if (bos && bos.length) {\r\n                    bos.forEach(bo => {\r\n                        bo.getObject3d().geometry.dispose();\r\n                        bo = null;\r\n                    });\r\n                }\r\n                baseobject._datas = null;\r\n                baseobject._geometriesAttributes = null;\r\n                baseobject._faceMap = null;\r\n                baseobject = null;\r\n            });\r\n        }\r\n    }\r\n\r\n    _cachetile(index, baseobject) {\r\n        if (!this._baseObjectKeys[index]) {\r\n            this._baseObjectKeys[index] = [];\r\n        }\r\n        this._baseObjectKeys[index].push(baseobject);\r\n\r\n    }\r\n}\r\n\r\nexport default ThreeVectorTileLayer;\r\n","import './dist/worker';\r\nimport * as maptalks from 'maptalks';\r\nimport * as THREE from 'three';\r\nimport BaseObject from './src/BaseObject';\r\nimport Bar from './src/Bar';\r\nimport Line from './src/Line';\r\nimport ExtrudeLine from './src/ExtrudeLine';\r\nimport ExtrudePolygon from './src/ExtrudePolygon';\r\nimport Model from './src/Model';\r\nimport ExtrudeLineTrail from './src/ExtrudeLineTrail';\r\nimport ExtrudePolygons from './src/ExtrudePolygons';\r\nimport Point from './src/Point';\r\nimport Points from './src/Points';\r\nimport Bars from './src/Bars';\r\nimport ExtrudeLines from './src/ExtrudeLines';\r\nimport Lines from './src/Lines';\r\nimport ThreeVectorTileLayer from './src/ThreeVectorTileLayer';\r\n\r\nconst options = {\r\n    'renderer': 'gl',\r\n    'doubleBuffer': false,\r\n    'glOptions': null\r\n};\r\n\r\nconst RADIAN = Math.PI / 180;\r\n\r\nconst LINEPRECISIONS = [\r\n    [4000, 220],\r\n    [2000, 100],\r\n    [1000, 30],\r\n    [500, 15],\r\n    [100, 5],\r\n    [50, 2],\r\n    [10, 1],\r\n    [5, 0.7],\r\n    [2, 0.1],\r\n    [1, 0.05],\r\n    [0.5, 0.02]\r\n];\r\n\r\nconst EVENTS = [\r\n    'mousemove',\r\n    'click',\r\n    'mousedown',\r\n    'mouseup',\r\n    'dblclick',\r\n    'contextmenu',\r\n    'touchstart',\r\n    'touchmove',\r\n    'touchend'\r\n];\r\n\r\nconst MATRIX4 = new THREE.Matrix4();\r\n\r\n/**\r\n * A Layer to render with THREE.JS (http://threejs.org), the most popular library for WebGL. <br>\r\n *\r\n * @classdesc\r\n * A layer to render with THREE.JS\r\n * @example\r\n *  var layer = new maptalks.ThreeLayer('three');\r\n *\r\n *  layer.prepareToDraw = function (gl, scene, camera) {\r\n *      var size = map.getSize();\r\n *      return [size.width, size.height]\r\n *  };\r\n *\r\n *  layer.draw = function (gl, view, scene, camera, width,height) {\r\n *      //...\r\n *  };\r\n *  layer.addTo(map);\r\n * @class\r\n * @category layer\r\n * @extends {maptalks.CanvasLayer}\r\n * @param {String|Number} id - layer's id\r\n * @param {Object} options - options defined in [options]{@link maptalks.ThreeLayer#options}\r\n */\r\nclass ThreeLayer extends maptalks.CanvasLayer {\r\n    /**\r\n     * Draw method of ThreeLayer\r\n     * In default, it calls renderScene, refresh the camera and the scene\r\n     */\r\n    draw() {\r\n        this.renderScene();\r\n    }\r\n\r\n    /**\r\n     * Draw method of ThreeLayer when map is interacting\r\n     * In default, it calls renderScene, refresh the camera and the scene\r\n     */\r\n    drawOnInteracting() {\r\n        this.renderScene();\r\n    }\r\n    /**\r\n     * Convert a geographic coordinate to THREE Vector3\r\n     * @param  {maptalks.Coordinate} coordinate - coordinate\r\n     * @param {Number} [z=0] z value\r\n     * @return {THREE.Vector3}\r\n     */\r\n    coordinateToVector3(coordinate, z = 0) {\r\n        const map = this.getMap();\r\n        if (!map) {\r\n            return null;\r\n        }\r\n        if (!(coordinate instanceof maptalks.Coordinate)) {\r\n            coordinate = new maptalks.Coordinate(coordinate);\r\n        }\r\n        const p = map.coordinateToPoint(coordinate, getTargetZoom(map));\r\n        return new THREE.Vector3(p.x, p.y, z);\r\n    }\r\n\r\n    /**\r\n     * Convert geographic distance to THREE Vector3\r\n     * @param  {Number} w - width\r\n     * @param  {Number} h - height\r\n     * @return {THREE.Vector3}\r\n     */\r\n    distanceToVector3(w, h, coord) {\r\n        const map = this.getMap();\r\n        const zoom = getTargetZoom(map);\r\n        let center = coord || map.getCenter();\r\n        if (!(center instanceof maptalks.Coordinate)) {\r\n            center = new maptalks.Coordinate(center);\r\n        }\r\n        const target = map.locate(center, w, h);\r\n        const p0 = map.coordinateToPoint(center, zoom),\r\n            p1 = map.coordinateToPoint(target, zoom);\r\n        const x = Math.abs(p1.x - p0.x) * maptalks.Util.sign(w);\r\n        const y = Math.abs(p1.y - p0.y) * maptalks.Util.sign(h);\r\n        return new THREE.Vector3(x, y, 0);\r\n    }\r\n\r\n    /**\r\n     * Convert a Polygon or a MultiPolygon to THREE shape\r\n     * @param  {maptalks.Polygon|maptalks.MultiPolygon} polygon - polygon or multipolygon\r\n     * @return {THREE.Shape}\r\n     */\r\n    toShape(polygon) {\r\n        if (!polygon) {\r\n            return null;\r\n        }\r\n        if (polygon instanceof maptalks.MultiPolygon) {\r\n            return polygon.getGeometries().map(c => this.toShape(c));\r\n        }\r\n        const center = polygon.getCenter();\r\n        const centerPt = this.coordinateToVector3(center);\r\n        const shell = polygon.getShell();\r\n        const outer = shell.map(c => this.coordinateToVector3(c).sub(centerPt));\r\n        const shape = new THREE.Shape(outer);\r\n        const holes = polygon.getHoles();\r\n\r\n        if (holes && holes.length > 0) {\r\n            shape.holes = holes.map(item => {\r\n                const pts = item.map(c => this.coordinateToVector3(c).sub(centerPt));\r\n                return new THREE.Shape(pts);\r\n            });\r\n        }\r\n\r\n        return shape;\r\n    }\r\n\r\n\r\n    /**\r\n     * todo   This should also be extracted as a component\r\n     * @param {*} polygon\r\n     * @param {*} altitude\r\n     * @param {*} material\r\n     * @param {*} height\r\n     */\r\n    toExtrudeMesh(polygon, altitude, material, height) {\r\n        if (!polygon) {\r\n            return null;\r\n        }\r\n        if (polygon instanceof maptalks.MultiPolygon) {\r\n            return polygon.getGeometries().map(c => this.toExtrudeMesh(c, altitude, material, height));\r\n        }\r\n        const rings = polygon.getCoordinates();\r\n        rings.forEach(ring => {\r\n            const length = ring.length;\r\n            for (let i = length - 1; i >= 1; i--) {\r\n                if (ring[i].equals(ring[i - 1])) {\r\n                    ring.splice(i, 1);\r\n                }\r\n            }\r\n        });\r\n        polygon.setCoordinates(rings);\r\n        const shape = this.toShape(polygon);\r\n        const center = this.coordinateToVector3(polygon.getCenter());\r\n        height = maptalks.Util.isNumber(height) ? height : altitude;\r\n        height = this.distanceToVector3(height, height).x;\r\n        const amount = this.distanceToVector3(altitude, altitude).x;\r\n        //{ amount: extrudeH, bevelEnabled: true, bevelSegments: 2, steps: 2, bevelSize: 1, bevelThickness: 1 };\r\n        const config = { 'bevelEnabled': false, 'bevelSize': 1 };\r\n        const name = parseInt(THREE.REVISION) >= 93 ? 'depth' : 'amount';\r\n        config[name] = height;\r\n        const geom = new THREE.ExtrudeGeometry(shape, config);\r\n        const buffGeom = new THREE.BufferGeometry();\r\n        buffGeom.fromGeometry(geom);\r\n        const mesh = new THREE.Mesh(buffGeom, material);\r\n        mesh.position.set(center.x, center.y, amount - height);\r\n        return mesh;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param {maptalks.Polygon|maptalks.MultiPolygon} polygon\r\n     * @param {Object} options\r\n     * @param {THREE.Material} material\r\n     */\r\n    toExtrudePolygon(polygon, options, material) {\r\n        return new ExtrudePolygon(polygon, options, material, this);\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param {maptalks.Coordinate} coordinate\r\n     * @param {Object} options\r\n     * @param {THREE.Material} material\r\n     */\r\n    toBar(coordinate, options, material) {\r\n        return new Bar(coordinate, options, material, this);\r\n    }\r\n\r\n\r\n    /**\r\n    *\r\n    * @param {maptalks.LineString} lineString\r\n    * @param {Object} options\r\n    * @param {THREE.LineMaterial} material\r\n    */\r\n    toLine(lineString, options, material) {\r\n        return new Line(lineString, options, material, this);\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param {maptalks.LineString} lineString\r\n     * @param {Object} options\r\n     * @param {THREE.Material} material\r\n     */\r\n    toExtrudeLine(lineString, options, material) {\r\n        return new ExtrudeLine(lineString, options, material, this);\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param {THREE.Mesh|THREE.Group} model\r\n     * @param {Object} options\r\n     */\r\n    toModel(model, options) {\r\n        return new Model(model, options, this);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     *\r\n     * @param {maptalks.LineString} lineString\r\n     * @param {*} options\r\n     * @param {THREE.Material} material\r\n     */\r\n    toExtrudeLineTrail(lineString, options, material) {\r\n        return new ExtrudeLineTrail(lineString, options, material, this);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} polygons\r\n     * @param {*} options\r\n     * @param {*} material\r\n     */\r\n    toExtrudePolygons(polygons, options, material) {\r\n        return new ExtrudePolygons(polygons, options, material, this);\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param {maptalks.Coordinate} coordinate\r\n     * @param {*} options\r\n     * @param {*} material\r\n     */\r\n    toPoint(coordinate, options, material) {\r\n        return new Point(coordinate, options, material, this);\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param {Array} points\r\n     * @param {*} options\r\n     * @param {*} material\r\n     */\r\n    toPoints(points, options, material) {\r\n        return new Points(points, options, material, this);\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param {Array} points\r\n     * @param {*} options\r\n     * @param {*} material\r\n     */\r\n    toBars(points, options, material) {\r\n        return new Bars(points, options, material, this);\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param {Array[maptalks.LineString]} lineStrings\r\n     * @param {*} options\r\n     * @param {*} material\r\n     */\r\n    toExtrudeLines(lineStrings, options, material) {\r\n        return new ExtrudeLines(lineStrings, options, material, this);\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param {Array[maptalks.LineString]} lineStrings\r\n     * @param {*} options\r\n     * @param {*} material\r\n     */\r\n    toLines(lineStrings, options, material) {\r\n        return new Lines(lineStrings, options, material, this);\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param {*} url\r\n     * @param {*} options\r\n     * @param {*} getMaterial\r\n     * @param {*} worker\r\n     */\r\n    toThreeVectorTileLayer(url, options, getMaterial) {\r\n        return new ThreeVectorTileLayer(url, options, getMaterial, this);\r\n    }\r\n\r\n\r\n\r\n\r\n    clearMesh() {\r\n        const scene = this.getScene();\r\n        if (!scene) {\r\n            return this;\r\n        }\r\n        for (var i = scene.children.length - 1; i >= 0; i--) {\r\n            if (scene.children[i] instanceof THREE.Mesh) {\r\n                scene.remove(scene.children[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    lookAt(vector) {\r\n        const renderer = this._getRenderer();\r\n        if (renderer) {\r\n            renderer.context.lookAt(vector);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    getCamera() {\r\n        const renderer = this._getRenderer();\r\n        if (renderer) {\r\n            return renderer.camera;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getScene() {\r\n        const renderer = this._getRenderer();\r\n        if (renderer) {\r\n            return renderer.scene;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    renderScene() {\r\n        const renderer = this._getRenderer();\r\n        if (renderer) {\r\n            return renderer.renderScene();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    getThreeRenderer() {\r\n        const renderer = this._getRenderer();\r\n        if (renderer) {\r\n            return renderer.context;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * add object3ds\r\n     * @param {BaseObject} meshes\r\n     */\r\n    addMesh(meshes, render = true) {\r\n        if (!meshes) return this;\r\n        if (!Array.isArray(meshes)) {\r\n            meshes = [meshes];\r\n        }\r\n        const scene = this.getScene();\r\n        meshes.forEach(mesh => {\r\n            if (mesh instanceof BaseObject) {\r\n                scene.add(mesh.getObject3d());\r\n                if (!mesh.isAdd) {\r\n                    mesh.isAdd = true;\r\n                    mesh._fire('add', { target: mesh });\r\n                }\r\n                if (mesh._animation && maptalks.Util.isFunction(mesh._animation)) {\r\n                    this._animationBaseObjectMap[mesh.getObject3d().uuid] = mesh;\r\n                }\r\n            } else if (mesh instanceof THREE.Object3D) {\r\n                scene.add(mesh);\r\n            }\r\n        });\r\n        this._zoomend();\r\n        if (render) {\r\n            this.renderScene();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * remove object3ds\r\n     * @param {BaseObject} meshes\r\n     */\r\n    removeMesh(meshes, render = true) {\r\n        if (!meshes) return this;\r\n        if (!Array.isArray(meshes)) {\r\n            meshes = [meshes];\r\n        }\r\n        const scene = this.getScene();\r\n        meshes.forEach(mesh => {\r\n            if (mesh instanceof BaseObject) {\r\n                scene.remove(mesh.getObject3d());\r\n                if (mesh.isAdd) {\r\n                    mesh.isAdd = false;\r\n                    mesh._fire('remove', { target: mesh });\r\n                }\r\n                if (mesh._animation && maptalks.Util.isFunction(mesh._animation)) {\r\n                    delete this._animationBaseObjectMap[mesh.getObject3d().uuid];\r\n                }\r\n            } else if (mesh instanceof THREE.Object3D) {\r\n                scene.remove(mesh);\r\n            }\r\n        });\r\n        if (render) {\r\n            this.renderScene();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    _initRaycaster() {\r\n        if (!this._raycaster) {\r\n            this._raycaster = new THREE.Raycaster();\r\n            this._mouse = new THREE.Vector2();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Coordinate} coordinate\r\n     * @param {Object} options\r\n     * @return {Array}\r\n     */\r\n    identify(coordinate, options) {\r\n        if (!coordinate) {\r\n            console.error('coordinate is null,it should be Coordinate');\r\n            return [];\r\n        }\r\n        if (Array.isArray(coordinate)) {\r\n            coordinate = new maptalks.Coordinate(coordinate);\r\n        }\r\n        if (!(coordinate instanceof maptalks.Coordinate)) {\r\n            console.error('coordinate type is error,it should be Coordinate');\r\n            return [];\r\n        }\r\n        const p = this.getMap().coordToContainerPoint(coordinate);\r\n        const { x, y } = p;\r\n        this._initRaycaster();\r\n        const raycaster = this._raycaster,\r\n            mouse = this._mouse,\r\n            camera = this.getCamera(),\r\n            scene = this.getScene(),\r\n            size = this.getMap().getSize();\r\n        //fix Errors will be reported when the layer is not initialized\r\n        if (!scene) {\r\n            return [];\r\n        }\r\n        const width = size.width,\r\n            height = size.height;\r\n        mouse.x = (x / width) * 2 - 1;\r\n        mouse.y = -(y / height) * 2 + 1;\r\n        raycaster.setFromCamera(mouse, camera);\r\n        //set linePrecision for THREE.Line\r\n        raycaster.linePrecision = this._getLinePrecision(this.getMap().getResolution());\r\n        const children = [], hasidentifyChildren = [];\r\n        scene.children.forEach(mesh => {\r\n            const parent = mesh.__parent;\r\n            if (parent && parent.getOptions) {\r\n                const interactive = parent.getOptions().interactive;\r\n                if (interactive && parent.isVisible()) {\r\n                    //If baseobject has its own hit detection\r\n                    if (parent.identify && maptalks.Util.isFunction(parent.identify)) {\r\n                        hasidentifyChildren.push(parent);\r\n                    } else {\r\n                        children.push(mesh);\r\n                    }\r\n                }\r\n            } else if (mesh instanceof THREE.Mesh || mesh instanceof THREE.Group) {\r\n                children.push(mesh);\r\n            }\r\n        });\r\n        let baseObjects = [];\r\n        const intersects = raycaster.intersectObjects(children, true);\r\n        if (intersects && Array.isArray(intersects) && intersects.length) {\r\n            baseObjects = intersects.map(intersect => {\r\n                let object = intersect.object;\r\n                object = this._recursionMesh(object);\r\n                const baseObject = object.__parent || object;\r\n                baseObject.faceIndex = intersect.faceIndex;\r\n                baseObject.index = intersect.index;\r\n                return baseObject;\r\n            });\r\n        }\r\n        if (hasidentifyChildren.length) {\r\n            hasidentifyChildren.forEach(baseObject => {\r\n                // baseObject identify\r\n                if (baseObject.identify(coordinate)) {\r\n                    baseObjects.push(baseObject);\r\n                }\r\n            });\r\n        }\r\n        options = maptalks.Util.extend({}, options);\r\n        const count = options.count;\r\n        return (maptalks.Util.isNumber(count) && count > 0 ? baseObjects.slice(0, count) : baseObjects);\r\n    }\r\n\r\n    /**\r\n    * Recursively finding the root node of mesh,Until it is scene node\r\n    * @param {*} mesh\r\n    */\r\n    _recursionMesh(mesh) {\r\n        while (mesh && (!(mesh.parent instanceof THREE.Scene))) {\r\n            mesh = mesh.parent;\r\n        }\r\n        return mesh || {};\r\n    }\r\n\r\n    //get Line Precision by Resolution\r\n    _getLinePrecision(res = 10) {\r\n        for (let i = 0, len = LINEPRECISIONS.length; i < len; i++) {\r\n            const [resLevel, precision] = LINEPRECISIONS[i];\r\n            if (res > resLevel) {\r\n                return precision;\r\n            }\r\n        }\r\n        return 0.01;\r\n    }\r\n\r\n    /**\r\n     * fire baseObject events\r\n     * @param {*} e\r\n     */\r\n    _identifyBaseObjectEvents(e) {\r\n        const map = this.map || this.getMap();\r\n        //When map interaction, do not carry out mouse movement detection, which can have better performance\r\n        // if (map.isInteracting() && e.type === 'mousemove') {\r\n        //     return this;\r\n        // }\r\n        map.resetCursor('default');\r\n        const { type, coordinate } = e;\r\n        const baseObjects = this.identify(coordinate);\r\n        const scene = this.getScene();\r\n        if (baseObjects.length === 0 && scene) {\r\n            for (let i = 0, len = scene.children.length; i < len; i++) {\r\n                const child = scene.children[i] || {};\r\n                const parent = child.__parent;\r\n                if (parent) {\r\n                    parent.fire('empty', Object.assign({}, e, { target: parent }));\r\n                }\r\n            }\r\n        }\r\n        if (type === 'mousemove') {\r\n            if (baseObjects.length) {\r\n                map.setCursor('pointer');\r\n            }\r\n            // mouseout objects\r\n            const outBaseObjects = [];\r\n            if (this._baseObjects) {\r\n                this._baseObjects.forEach(baseObject => {\r\n                    let isOut = true;\r\n                    baseObjects.forEach(baseO => {\r\n                        if (baseObject === baseO) {\r\n                            isOut = false;\r\n                        }\r\n                    });\r\n                    if (isOut) {\r\n                        outBaseObjects.push(baseObject);\r\n                    }\r\n                });\r\n            }\r\n            outBaseObjects.forEach(baseObject => {\r\n                if (baseObject instanceof BaseObject) {\r\n                    // reset _mouseover status\r\n                    // Deal with the mergedmesh\r\n                    if (baseObject.getSelectMesh) {\r\n                        if (!baseObject.isHide) {\r\n                            baseObject._mouseover = false;\r\n                            baseObject.fire('mouseout', Object.assign({}, e, { target: baseObject, type: 'mouseout', selectMesh: null }));\r\n                            baseObject.closeToolTip();\r\n                        }\r\n                    } else {\r\n                        baseObject._mouseover = false;\r\n                        baseObject.fire('mouseout', Object.assign({}, e, { target: baseObject, type: 'mouseout' }));\r\n                        baseObject.closeToolTip();\r\n                    }\r\n                }\r\n            });\r\n            baseObjects.forEach(baseObject => {\r\n                if (baseObject instanceof BaseObject) {\r\n                    if (!baseObject._mouseover) {\r\n                        baseObject.fire('mouseover', Object.assign({}, e, { target: baseObject, type: 'mouseover', selectMesh: (baseObject.getSelectMesh ? baseObject.getSelectMesh() : null) }));\r\n                        baseObject._mouseover = true;\r\n                    }\r\n                    baseObject.fire(type, Object.assign({}, e, { target: baseObject, selectMesh: (baseObject.getSelectMesh ? baseObject.getSelectMesh() : null) }));\r\n                    // tooltip\r\n                    const tooltip = baseObject.getToolTip();\r\n                    if (tooltip && (!tooltip._owner)) {\r\n                        tooltip.addTo(baseObject);\r\n                    }\r\n                    baseObject.openToolTip(coordinate);\r\n                }\r\n            });\r\n        } else {\r\n            baseObjects.forEach(baseObject => {\r\n                if (baseObject instanceof BaseObject) {\r\n                    baseObject.fire(type, Object.assign({}, e, { target: baseObject, selectMesh: (baseObject.getSelectMesh ? baseObject.getSelectMesh() : null) }));\r\n                    if (type === 'click') {\r\n                        const infoWindow = baseObject.getInfoWindow();\r\n                        if (infoWindow && (!infoWindow._owner)) {\r\n                            infoWindow.addTo(baseObject);\r\n                        }\r\n                        baseObject.openInfoWindow(coordinate);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        this._baseObjects = baseObjects;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     *map zoom event\r\n     */\r\n    _zoomend() {\r\n        const scene = this.getScene();\r\n        if (!scene) {\r\n            return;\r\n        }\r\n        const zoom = this.getMap().getZoom();\r\n        scene.children.forEach(mesh => {\r\n            const parent = mesh.__parent;\r\n            if (parent && parent.getOptions) {\r\n                const minZoom = parent.getMinZoom(), maxZoom = parent.getMaxZoom();\r\n                if ((zoom < minZoom || zoom > maxZoom) && parent.isVisible()) {\r\n                    parent.hide();\r\n                } else if (minZoom <= zoom && zoom <= maxZoom && (!parent.isVisible())) {\r\n                    parent.show();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    onAdd() {\r\n        super.onAdd();\r\n        const map = this.map || this.getMap();\r\n        if (!map) return this;\r\n        EVENTS.forEach(event => {\r\n            map.on(event, this._identifyBaseObjectEvents, this);\r\n        });\r\n        this._needsUpdate = true;\r\n        if (!this._animationBaseObjectMap) {\r\n            this._animationBaseObjectMap = {};\r\n        }\r\n        map.on('zooming zoomend', this._zoomend, this);\r\n        return this;\r\n    }\r\n\r\n    onRemove() {\r\n        super.onRemove();\r\n        const map = this.map || this.getMap();\r\n        if (!map) return this;\r\n        EVENTS.forEach(event => {\r\n            map.off(event, this._identifyBaseObjectEvents, this);\r\n        });\r\n        map.off('zooming zoomend', this._zoomend, this);\r\n        return this;\r\n    }\r\n\r\n    _callbackBaseObjectAnimation() {\r\n        const layer = this;\r\n        if (layer._animationBaseObjectMap) {\r\n            for (let uuid in layer._animationBaseObjectMap) {\r\n                const baseObject = layer._animationBaseObjectMap[uuid];\r\n                baseObject._animation();\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * To make map's 2d point's 1 pixel euqal with 1 pixel on XY plane in THREE's scene:\r\n     * 1. fov is 90 and camera's z is height / 2 * scale,\r\n     * 2. if fov is not 90, a ratio is caculated to transfer z to the equivalent when fov is 90\r\n     * @return {Number} fov ratio on z axis\r\n     */\r\n    _getFovRatio() {\r\n        const map = this.getMap();\r\n        const fov = map.getFov();\r\n        return Math.tan(fov / 2 * RADIAN);\r\n    }\r\n}\r\n\r\nThreeLayer.mergeOptions(options);\r\n\r\nclass ThreeRenderer extends maptalks.renderer.CanvasLayerRenderer {\r\n\r\n    getPrepareParams() {\r\n        return [this.scene, this.camera];\r\n    }\r\n\r\n    getDrawParams() {\r\n        return [this.scene, this.camera];\r\n    }\r\n\r\n    _drawLayer() {\r\n        super._drawLayer.apply(this, arguments);\r\n        // this.renderScene();\r\n    }\r\n\r\n    hitDetect() {\r\n        return false;\r\n    }\r\n\r\n    createCanvas() {\r\n        super.createCanvas();\r\n        this.createContext();\r\n    }\r\n\r\n    createContext() {\r\n        if (this.canvas.gl && this.canvas.gl.wrap) {\r\n            this.gl = this.canvas.gl.wrap();\r\n        } else {\r\n            const layer = this.layer;\r\n            const attributes = layer.options.glOptions || {\r\n                alpha: true,\r\n                depth: true,\r\n                antialias: true,\r\n                stencil: true\r\n            };\r\n            attributes.preserveDrawingBuffer = true;\r\n            this.gl = this.gl || this._createGLContext(this.canvas, attributes);\r\n        }\r\n        this._initThreeRenderer();\r\n        this.layer.onCanvasCreate(this.context, this.scene, this.camera);\r\n    }\r\n\r\n    _initThreeRenderer() {\r\n        const renderer = new THREE.WebGLRenderer({ 'context': this.gl, alpha: true });\r\n        renderer.autoClear = false;\r\n        renderer.setClearColor(new THREE.Color(1, 1, 1), 0);\r\n        renderer.setSize(this.canvas.width, this.canvas.height);\r\n        renderer.clear();\r\n        renderer.canvas = this.canvas;\r\n        this.context = renderer;\r\n\r\n        const scene = this.scene = new THREE.Scene();\r\n        const map = this.layer.getMap();\r\n        const fov = map.getFov() * Math.PI / 180;\r\n        const camera = this.camera = new THREE.PerspectiveCamera(fov, map.width / map.height, map.cameraNear, map.cameraFar);\r\n        camera.matrixAutoUpdate = false;\r\n        this._syncCamera();\r\n        scene.add(camera);\r\n    }\r\n\r\n    onCanvasCreate() {\r\n        super.onCanvasCreate();\r\n\r\n    }\r\n\r\n    resizeCanvas(canvasSize) {\r\n        if (!this.canvas) {\r\n            return;\r\n        }\r\n        let size;\r\n        if (!canvasSize) {\r\n            size = this.getMap().getSize();\r\n        } else {\r\n            size = canvasSize;\r\n        }\r\n        const r = maptalks.Browser.retina ? 2 : 1;\r\n        const canvas = this.canvas;\r\n        //retina support\r\n        canvas.height = r * size['height'];\r\n        canvas.width = r * size['width'];\r\n        this.context.setSize(canvas.width, canvas.height);\r\n    }\r\n\r\n    clearCanvas() {\r\n        if (!this.canvas) {\r\n            return;\r\n        }\r\n\r\n        this.context.clear();\r\n    }\r\n\r\n    prepareCanvas() {\r\n        if (!this.canvas) {\r\n            this.createCanvas();\r\n        } else {\r\n            this.clearCanvas();\r\n        }\r\n        this.layer.fire('renderstart', { 'context': this.context });\r\n        return null;\r\n    }\r\n\r\n    renderScene() {\r\n        this.layer._callbackBaseObjectAnimation();\r\n        this._syncCamera();\r\n        this.context.render(this.scene, this.camera);\r\n        this.completeRender();\r\n    }\r\n\r\n    remove() {\r\n        delete this._drawContext;\r\n        super.remove();\r\n    }\r\n\r\n    _syncCamera() {\r\n        const map = this.getMap();\r\n        const camera = this.camera;\r\n        camera.matrix.elements = map.cameraWorldMatrix;\r\n        camera.projectionMatrix.elements = map.projMatrix;\r\n        camera.projectionMatrixInverse.elements = MATRIX4.getInverse(camera.projectionMatrix).elements;\r\n    }\r\n\r\n    _createGLContext(canvas, options) {\r\n        const names = ['webgl', 'experimental-webgl'];\r\n        let context = null;\r\n        /* eslint-disable no-empty */\r\n        for (let i = 0; i < names.length; ++i) {\r\n            try {\r\n                context = canvas.getContext(names[i], options);\r\n            } catch (e) { }\r\n            if (context) {\r\n                break;\r\n            }\r\n        }\r\n        return context;\r\n        /* eslint-enable no-empty */\r\n    }\r\n}\r\n\r\nThreeLayer.registerRenderer('gl', ThreeRenderer);\r\n\r\nfunction getTargetZoom(map) {\r\n    return map.getGLZoom();\r\n}\r\n\r\nexport {\r\n    ThreeLayer, ThreeRenderer, BaseObject\r\n};\r\n"],"names":["ToolTip","addTo","owner","BaseObject","on","onMouseMove","onMouseOut","_owner","_switchEvents","onAdd","fire","Error","maptalks","OPTIONS","interactive","altitude","minZoom","maxZoom","asynchronous","Base","id","isBaseObject","isAdd","object3d","options","toolTip","infoWindow","_mouseover","_showPlayer","_vt","undefined","GUID","layer","ThreeLayer","addMesh","console","error","remove","getLayer","removeMesh","getObject3d","getId","setId","oldId","_fire","getType","constructor","name","getOptions","getProperties","properties","setProperties","property","old","Object","assign","getMap","getCenter","coordinate","lineString","polygon","geometry","getAltitude","setAltitude","isNumber","z","distanceToVector3","x","position","show","visible","hide","isVisible","getSymbol","material","setSymbol","THREE","needsUpdate","vertexColors","clone","setInfoWindow","InfoWindow","getInfoWindow","openInfoWindow","closeInfoWindow","removeInfoWindow","setToolTip","content","getToolTip","openToolTip","closeToolTip","removeToolTip","animateShow","cb","cancel","isFunction","duration","easing","player","Animation","animate","frame","scale","styles","set","play","getMinZoom","getMaxZoom","isAsynchronous","eventType","param","onSelectMesh","config","_initOptions","extend","_createMesh","__parent","_createGroup","_createLine","computeLineDistances","_createPoints","_createLineSegments","REVISION","parseInt","addAttribute","bufferGeomertry","key","value","setAttribute","mergeBufferGeometries","geometries","attributes","i","length","push","mergedGeometry","indexOffset","mergedIndex","indices","len","index","j","len1","mergedAttribute","mergeBufferAttributes","Uint32Array","normal","uv","color","Float32Array","fill","setIndex","arrayLength","attribute","array","offset","barGeometryCache","KEY","getGeometry","isCache","height","radialSegments","radius","_radius","_height","rotateX","Math","PI","parray","join","toString","initVertexColors","_topColor","v","bottomColor","topColor","colors","y","r","b","mergeBarGeometry","bufferGeometry","Bar","_h","map","coordinateToVector3","copy","earcut","data","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","triangles","next","prev","minX","minY","maxX","maxY","invSize","eliminateHoles","max","earcutLinked","start","end","clockwise","last","signedArea","insertNode","equals","removeNode","filterPoints","p","again","steiner","area","ear","pass","indexCurve","stop","isEarHashed","isEar","cureLocalIntersections","splitEarcut","a","c","pointInTriangle","minTX","minTY","maxTX","maxTY","minZ","zOrder","maxZ","prevZ","n","nextZ","intersects","locallyInside","isValidDiagonal","splitPolygon","queue","list","getLeftmost","sort","compareX","eliminateHole","hole","findHoleBridge","hx","hy","qx","Infinity","m","mx","my","tanMin","tan","abs","sectorContainsSector","sortLinked","q","e","tail","numMerges","pSize","qSize","inSize","leftmost","ax","ay","bx","by","cx","cy","px","py","intersectsPolygon","middleInside","p1","p2","q1","q2","o1","sign","o2","o3","o4","onSegment","min","num","inside","a2","Node","b2","an","bp","deviation","polygonArea","trianglesArea","sum","flatten","result","vertices","holes","dimensions","holeIndex","d","getSqDist","dx","dy","getSqSegDist","t","simplifyRadialDist","points","sqTolerance","prevPoint","newPoints","point","simplifyDPStep","first","simplified","maxSqDist","sqDist","simplifyDouglasPeucker","simplify","tolerance","highestQuality","dot","v1","v2","v2Dot","normalize","out","sqrt","v2Normalize","s","scaleAndAdd","v2Add","v3Sub","v3Normalize","v3Cross","az","bz","rel","slerp","cosT","theta","acos","cos","sin","x0","y0","x1","y1","triangulate","innerOffsetPolygon","outStart","miterLimit","close","checkMiterLimit","outOff","indicesMap","nextIdx","prevIdx","x2","y2","x3","y3","tmp","cosA","sinA","miter","isCovex","halfA","dist","offsetPolygon","offsetVertices","exteriorSize","reversePoints","stride","floor","convertToClockwise","polygonVertexCount","h","normalizeOpts","opts","depth","bevelSize","bevelSegments","smoothSide","smoothBevel","round","boundingRect","translate","fitRect","targetX","targetY","targetWidth","width","targetHeight","generateNormal","v3Set","p3","v21","v32","normals","f","i1","i2","i3","quadToTriangle","addExtrudeSide","cursors","topVertices","rect","ringVertexCount","splitSide","splitRingVertexCount","splitBevel","vertexOffset","vertex","size","v0","ringCount","vLen","k","uLen","prevX","prevY","idx","l","t2","zz","prevX2","prevY2","prevZ2","sideStartRingN","addTopAndBottom","indicesLen","excludeBottom","vertexCount","innerExtrudeTriangulatedPolygon","preparedData","indexCount","sideRingVertexCount","Uint16Array","topVertexCount","val","convertPolylineToTriangulatedPolygon","polyline","polylineIdx","lineWidth","pointCount","insidePoints","outsidePoints","outsideIndicesMap","insideIndicesMap","polygonVertices","outsidePointCount","off","removeClosePointsOfPolygon","epsilon","newPolygon","simplifyPolygon","doSimplify","extrudePolygon","polygons","updateBoundingRect","transformdRect","simplifyTolerance","extrudePolyline","polylines","newPolyline","TYPES","getGeoJSONType","feature","type","isGeoJSON","isGeoJSONPolygon","isGeoJSONLine","isGeoJSONPoint","isGeoJSONMulti","indexOf","getGeoJSONCoordinates","coordinates","getGeoJSONCenter","coords","len2","spliteGeoJSONMulti","features","fType","COMMA","getLinePosition","center","positions","positionsV","Array","isArray","cent","getCoordinates","centerPt","sub","getExtrudeLineGeometry","ps","getChunkLinesPosition","chunkLines","positionMap","lnglats","line","lnglat","key1","getExtrudeLineParams","initColors","cs","forEach","g","Line","ExtrudeLine","getExtrudeGeometry","getExtrudeGeometryParams","datas","getPolygonPositions","shapes","getCenterOfPoints","isArrayBuff","getGeometries","getSinglePolygonPositions","fs","shell","slice","getShell","getHoles","outer","buffer","pts","pt","ExtrudePolygon","Model","model","warn","add","R","MINLENGTH","formatLineArray","toArray","degreesToRadians","distance","c1","c2","asin","pow","getPercentLngLat","percent","lng","lat","lineSlice","lineChunkLength","LEN","totalLen","floorlen","LNGLATSLEN","currentLngLat","currentLen","lines","lls","offsetLen","MAX_POINTS","setExtrudeLineGeometryAttribute","norls","count","trail","chunkLength","speed","ExtrudeLineTrail","chunkLine","inds","params","_params","loaded","_init","_animation","EVENTS","MergedMixin","_initBaseObjectsEvent","baseObjects","baseObject","_proxyEvent","_showGeometry","target","selectMesh","getSelectMesh","_getHideGeometryIndex","indexs","_geometriesAttributes","_updateAttribute","bufferAttribute","_geometryCache","NaN","isHide","geometryAttributes","buffGeom","MeshActor","test","info","send","pushQueue","callback","gengerateExtrudePolygons","transfe","err","message","Actor","actor","getActor","pkg","transfer","updateAttribute","ExtrudePolygons","centers","extrudePolygons","faceMap","geometriesAttributes","SIZE","_faceMap","dispose","faceIndex","psIndex","normalIndex","uvIndex","faceLen","psCount","normalCount","uvCount","_baseObjects","_datas","_getIndex","vector2Pixel","world_vector","camera","vector","project","halfWidth","halfHeight","Point","vs","z1","identify","getSize","getCamera","pointSize","pixel","coordToContainerPoint","ROW","COL","contains","minx","miny","maxx","maxy","BBox","minlng","minlat","maxlng","maxlat","updateBBoxPixel","containsCoordinate","isRecCross","rec","initGrids","grids","offsetX","offsetY","averageX","averageY","bounds","Points","gridslen","vectors","pointMeshes","_grids","_bindMapEvents","_updateGrids","bs","Bars","bars","alt","bar","fromBufferGeometry","faces","ExtrudeLines","lineStrings","extrudeLines","w","extrudeLine","Lines","MAX","waitingQueue","currentQueue","getQueues","url","img","vt","loopMessage","outQueue","deleteQueueItem","queArray","splice","nextLoop","canvas","document","createElement","generateImage","debug","ctx","getContext","clearRect","save","fillStyle","strokeStyle","text","font","stroke","fillText","toDataURL","worker","ThreeVectorTileLayer","getMaterial","urlTemplate","_opts","_layer","_baseObjectKeys","_loadTiles","_add","_layerLaodTime","Date","getTime","getBaseObjects","loadTiles","baseos","baseobjects","formatBaseObjects","json","layerName","geojson","_getMaterial","extrudepolygons","toExtrudePolygons","toLines","toPoints","getTileData","getJSON","res","_getCurentTileKeys","tileGrids","getTiles","keys","keysMap","tiles","dupKey","_isLoad","keys1","_renderer","tilesInView","_layerOnLoad","time","offsetTime","threeLayer","tilesInViewLen","loadTilesLen","needsRemoveBaseObjects","baseobject","split","getTileUrl","_diffCache","intervalId","setInterval","isInteracting","clearInterval","renderer","loadTile","tile","tileSize","getTileSize","tileImage","Image","onload","onTileLoad","bind","onerror","onTileError","loadTileImage","deleteTile","image","tileinfo","_key","_generateBaseObjects","_workerLoad","_img","currentCount","needCount","src","_cachetile","filter","tileCache","_diposeBaseObject","bos","bo","RADIAN","LINEPRECISIONS","MATRIX4","draw","renderScene","drawOnInteracting","coordinateToPoint","getTargetZoom","coord","zoom","locate","p0","toShape","shape","item","toExtrudeMesh","rings","ring","setCoordinates","amount","geom","fromGeometry","mesh","toExtrudePolygon","toBar","toLine","toExtrudeLine","toModel","toExtrudeLineTrail","toPoint","toBars","toExtrudeLines","toThreeVectorTileLayer","clearMesh","scene","getScene","children","lookAt","_getRenderer","context","getThreeRenderer","meshes","render","_animationBaseObjectMap","uuid","_zoomend","_initRaycaster","_raycaster","_mouse","raycaster","mouse","setFromCamera","linePrecision","_getLinePrecision","getResolution","hasidentifyChildren","parent","intersectObjects","intersect","object","_recursionMesh","resLevel","precision","_identifyBaseObjectEvents","resetCursor","child","setCursor","outBaseObjects","isOut","baseO","tooltip","getZoom","event","_needsUpdate","onRemove","_callbackBaseObjectAnimation","_getFovRatio","fov","getFov","mergeOptions","ThreeRenderer","getPrepareParams","getDrawParams","_drawLayer","apply","arguments","hitDetect","createCanvas","createContext","gl","wrap","glOptions","alpha","antialias","stencil","preserveDrawingBuffer","_createGLContext","_initThreeRenderer","onCanvasCreate","autoClear","setClearColor","setSize","clear","cameraNear","cameraFar","matrixAutoUpdate","_syncCamera","resizeCanvas","canvasSize","retina","clearCanvas","prepareCanvas","completeRender","_drawContext","matrix","elements","cameraWorldMatrix","projectionMatrix","projMatrix","projectionMatrixInverse","getInverse","names","CanvasLayerRenderer","registerRenderer","getGLZoom"],"mappingsuBAAMC,OAAO;EACT,QAAIA,KAAK,YAAYC,aAArB,EAAiC;EAC7BD,MAAAA,KAAK,CAACE,EAAN,CAAS,WAAT,EAAsB,KAAKC,WAA3B,EAAwC,IAAxC;EACAH,MAAAA,KAAK,CAACE,EAAN,CAAS,UAAT,EAAqB,KAAKE,UAA1B,EAAsC,IAAtC;EACA,WAAKC,MAAL,GAAcL,KAAd,CAH6B;;EAK7B,WAAKM,aAAL,CAAmB,IAAnB;;EACA,UAAI,KAAKC,KAAT,EAAgB;EACZ,aAAKA,KAAL;EACH;EACD;;;;;;;;;;EAQA,WAAKC,IAAL,CAAU,KAAV;EACA,aAAO,IAAP;EACH,KAnBD,MAmBO;EACH,YAAM,IAAIC,KAAJ,CAAU,6CAAV,CAAN;EACH;EACJ;;;IA/BiBC,WAAA,CAAYZ;;ECElC,IAAMa,OAAO,GAAG;EACZC,EAAAA,WAAW,EAAE,IADD;EAEZC,EAAAA,QAAQ,EAAE,CAFE;EAGZC,EAAAA,OAAO,EAAE,CAHG;EAIZC,EAAAA,OAAO,EAAE,EAJG;EAKZC,EAAAA,YAAY,EAAE;EALF,CAAhB;EAQA;;;;MAGMC,OACF,gBAAc;EAKlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA8BMhB;;;;;EACF,yBAAYiB,EAAZ,EAAgB;EAAA;;EACZ;EACA,UAAKC,YAAL,GAAoB,IAApB;EACA,UAAKC,KAAL,GAAa,KAAb;EACA,UAAKC,QAAL,GAAgB,IAAhB;EACA,UAAKC,OAAL,GAAe,EAAf;EACA,UAAKC,OAAL,GAAe,IAAf;EACA,UAAKC,UAAL,GAAkB,IAAlB;EACA,UAAKC,UAAL,GAAkB,KAAlB;EACA,UAAKC,WAAL,GAAmB,IAAnB;EACA,UAAKC,GAAL,GAAW,IAAX;;EACA,QAAIT,EAAE,KAAKU,SAAX,EAAsB;EAClBV,MAAAA,EAAE,GAAGR,aAAA,CAAcmB,IAAd,EAAL;EACH;;EACD,UAAKX,EAAL,GAAUA,EAAV;EAdY;EAef;;;;WAEDnB,uBAAM+B,OAAO;EACT,QAAIA,KAAK,YAAYC,UAArB,EAAiC;EAC7BD,MAAAA,KAAK,CAACE,OAAN,CAAc,IAAd;EACH,KAFD,MAEO;EACHC,MAAAA,OAAO,CAACC,KAAR,CAAc,wCAAd;EACH;;EACD,WAAO,IAAP;EACH;;WAEDC,2BAAS;EACL,QAAML,KAAK,GAAG,KAAKM,QAAL,EAAd;;EACA,QAAIN,KAAJ,EAAW;EACPA,MAAAA,KAAK,CAACO,UAAN,CAAiB,IAAjB;EACH;;EACD,WAAO,IAAP;EACH;;WAEDC,qCAAc;EACV,WAAO,KAAKjB,QAAZ;EACH;;WAEDkB,yBAAQ;EACJ,WAAO,KAAKrB,EAAZ;EACH;;WAEDsB,uBAAMtB,IAAI;EACN,QAAMuB,KAAK,GAAG,KAAKF,KAAL,EAAd;EACA,SAAKrB,EAAL,GAAUA,EAAV;;EACA,SAAKwB,KAAL,CAAW,UAAX,EAAuB;EACnB,aAAOD,KADY;EAEnB,aAAOvB,EAFY;EAGnB,gBAAU;EAHS,KAAvB;;EAKA,WAAO,IAAP;EACH;;WAEDyB,6BAAU;EACN,WAAO,KAAKC,WAAL,CAAiBC,IAAxB;EACH;;WAEDC,mCAAa;EACT,WAAO,KAAKxB,OAAZ;EACH;;WAEDyB,yCAAgB;EACZ,WAAO,CAAC,KAAKzB,OAAL,IAAgB,EAAjB,EAAqB0B,UAA5B;EACH;;WAEDC,uCAAcC,UAAU;EACpB,QAAMC,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKN,aAAL,EAAlB,CAAZ;EACA,SAAKzB,OAAL,CAAa0B,UAAb,GAA0BE,QAA1B;;EACA,SAAKR,KAAL,CAAW,kBAAX,EAA+B;EAC3B,aAAOS,GADoB;EAE3B,aAAOD,QAFoB;EAG3B,gBAAU;EAHiB,KAA/B;;EAKA,WAAO,IAAP;EACH;;WAGDd,+BAAW;EACP,WAAO,KAAKd,OAAL,CAAaQ,KAApB;EACH;;;WAIDwB,2BAAS;EACL,QAAMxB,KAAK,GAAG,KAAKM,QAAL,EAAd;;EACA,QAAIN,KAAJ,EAAW;EACP,aAAOA,KAAK,CAACwB,MAAN,EAAP;EACH;EACJ;;;WAGDC,iCAAY;EACR,QAAMjC,OAAO,GAAG,KAAKwB,UAAL,EAAhB;EADQ,QAEAU,UAFA,GAEoClC,OAFpC,CAEAkC,UAFA;EAAA,QAEYC,UAFZ,GAEoCnC,OAFpC,CAEYmC,UAFZ;EAAA,QAEwBC,OAFxB,GAEoCpC,OAFpC,CAEwBoC,OAFxB;;EAGR,QAAIF,UAAJ,EAAgB;EACZ,aAAOA,UAAP;EACH,KAFD,MAEO;EACH,UAAMG,QAAQ,GAAGD,OAAO,IAAID,UAA5B;;EACA,UAAIE,QAAQ,IAAIA,QAAQ,CAACJ,SAAzB,EAAoC;EAChC,eAAOI,QAAQ,CAACJ,SAAT,EAAP;EACH;EACJ;EACJ;;WAEDK,qCAAc;EACV,WAAO,KAAKd,UAAL,GAAkBjC,QAAzB;EACH;EAGD;;;;;;WAIAgD,mCAAYhD,UAAU;EAClB,QAAIH,aAAA,CAAcoD,QAAd,CAAuBjD,QAAvB,CAAJ,EAAsC;EAClC,UAAMkD,CAAC,GAAG,KAAK3B,QAAL,GAAgB4B,iBAAhB,CAAkCnD,QAAlC,EAA4CA,QAA5C,EAAsDoD,CAAhE;EACA,WAAK3B,WAAL,GAAmB4B,QAAnB,CAA4BH,CAA5B,GAAgCA,CAAhC;EACA,WAAKzC,OAAL,CAAaT,QAAb,GAAwBA,QAAxB;EACH;;EACD,WAAO,IAAP;EACH;;WAGDsD,uBAAO;EACH,SAAK7B,WAAL,GAAmB8B,OAAnB,GAA6B,IAA7B;;EACA,SAAK1B,KAAL,CAAW,MAAX;;EACA,WAAO,IAAP;EACH;;WAGD2B,uBAAO;EACH,SAAK/B,WAAL,GAAmB8B,OAAnB,GAA6B,KAA7B;;EACA,SAAK1B,KAAL,CAAW,MAAX;;EACA,WAAO,IAAP;EACH;;WAED4B,iCAAY;EACR,WAAQ,CAAC,CAAC,KAAKhC,WAAL,GAAmB8B,OAA7B;EACH;EAGD;;;;;WAGAG,iCAAY;EACR,WAAO,KAAKjC,WAAL,GAAmBkC,QAA1B;EACH;EAED;;;;;;WAIAC,+BAAUD,UAAU;EAChB,QAAIA,QAAQ,IAAIA,QAAQ,YAAYE,cAApC,EAAoD;EAChDF,MAAAA,QAAQ,CAACG,WAAT,GAAuB,IAAvB;EACAH,MAAAA,QAAQ,CAACI,YAAT,GAAwB,KAAKtC,WAAL,GAAmBkC,QAAnB,CAA4BI,YAApD;EACA,UAAMzB,GAAG,GAAG,KAAKb,WAAL,GAAmBkC,QAAnB,CAA4BK,KAA5B,EAAZ;EACA,WAAKvC,WAAL,GAAmBkC,QAAnB,GAA8BA,QAA9B;;EACA,WAAK9B,KAAL,CAAW,cAAX,EAA2B;EACvB,eAAOS,GADgB;EAEvB,eAAOqB,QAFgB;EAGvB,kBAAU;EAHa,OAA3B;EAKH;;EACD,WAAO,IAAP;EACH;;WAEDM,uCAAcxD,SAAS;EACnB,SAAKE,UAAL,GAAkB,IAAId,WAAA,CAAYqE,UAAhB,CAA2BzD,OAA3B,CAAlB;EACA,WAAO,IAAP;EACH;;WAED0D,yCAAgB;EACZ,WAAO,KAAKxD,UAAZ;EACH;;WAEDyD,yCAAezB,YAAY;EACvB;EACCA,IAAAA,UAAU,IAAI,KAAKhC,UAAnB,IAAiC,KAAKA,UAAL,CAAgB2C,IAAhB,CAAqBX,UAArB,CAAlC;EACA,WAAO,IAAP;EACH;;WAED0B,6CAAkB;EACd;EACC,SAAK1D,UAAL,IAAmB,KAAKA,UAAL,CAAgB6C,IAAhB,EAApB;EACA,WAAO,IAAP;EACH;;WAGDc,+CAAmB;EACf;EACC,SAAK3D,UAAL,IAAmB,KAAKA,UAAL,CAAgBW,MAAhB,EAAnB,IAAgD,OAAO,KAAKX,UAA7D;EACA,WAAO,IAAP;EACH;;WAED4D,iCAAWC,SAAS/D,SAAS;EACzB,SAAKC,OAAL,GAAe,IAAIzB,OAAJ,CAAYuF,OAAZ,EAAqB/D,OAArB,CAAf;EACA,WAAO,IAAP;EACH;;WAEDgE,mCAAa;EACT,WAAO,KAAK/D,OAAZ;EACH;;WAEDgE,mCAAY/B,YAAY;EACpB;EACCA,IAAAA,UAAU,IAAI,KAAKjC,OAAnB,IAA8B,KAAKA,OAAL,CAAa4C,IAAb,CAAkBX,UAAlB,CAA/B;EACA,WAAO,IAAP;EACH;;WAEDgC,uCAAe;EACX;EACC,SAAKjE,OAAL,IAAgB,KAAKA,OAAL,CAAa8C,IAAb,EAAjB;EACA,WAAO,IAAP;EACH;;WAEDoB,yCAAgB;EACZ;EACC,SAAKlE,OAAL,IAAgB,KAAKA,OAAL,CAAaY,MAAb,EAAhB,IAA0C,OAAO,KAAKZ,OAAvD;EACA,WAAO,IAAP;EACH;EAED;;;;;EAKA;;;WACAmE,mCAAYpE,SAAcqE,IAAI;EAAA;;EAAA,QAAlBrE,OAAkB;EAAlBA,MAAAA,OAAkB,GAAR,EAAQ;EAAA;;EAC1B,QAAI,KAAKI,WAAT,EAAsB;EAClB,WAAKA,WAAL,CAAiBkE,MAAjB;EACH;;EACD,QAAIlF,aAAA,CAAcmF,UAAd,CAAyBvE,OAAzB,CAAJ,EAAuC;EACnCA,MAAAA,OAAO,GAAG,EAAV;EACAqE,MAAAA,EAAE,GAAGrE,OAAL;EACH;;EACD,QAAMwE,QAAQ,GAAGxE,OAAO,CAAC,UAAD,CAAP,IAAuB,IAAxC;EAAA,QACIyE,MAAM,GAAGzE,OAAO,CAAC,QAAD,CAAP,IAAqB,KADlC;EAEA,QAAM0E,MAAM,GAAG,KAAKtE,WAAL,GAAmBhB,kBAAA,CAAmBuF,SAAnB,CAA6BC,OAA7B,CAAqC;EACnE,eAAS;EAD0D,KAArC,EAE/B;EACC,kBAAYJ,QADb;EAEC,gBAAUC;EAFX,KAF+B,EAK/B,UAAAI,KAAK,EAAI;EACR,UAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;;EACA,UAAIA,KAAK,GAAG,CAAZ,EAAe;EACX,QAAA,MAAI,CAAC9D,WAAL,GAAmB8D,KAAnB,CAAyBE,GAAzB,CAA6B,CAA7B,EAAgC,CAAhC,EAAmCF,KAAnC;EACH;;EACD,UAAIT,EAAJ,EAAQ;EACJA,QAAAA,EAAE,CAACQ,KAAD,EAAQC,KAAR,CAAF;EACH;EACJ,KAbiC,CAAlC;EAcAJ,IAAAA,MAAM,CAACO,IAAP;EACA,WAAOP,MAAP;EACH;;WAGDQ,mCAAa;EACT,WAAO,KAAK1D,UAAL,GAAkBhC,OAAzB;EACH;;WAGD2F,mCAAa;EACT,WAAO,KAAK3D,UAAL,GAAkB/B,OAAzB;EACH;;WAED2F,2CAAiB;EACb,WAAO,KAAK5D,UAAL,GAAkB9B,YAAzB;EACH;;WAEDR,qBAAKmG,WAAWC,OAAO;EACnB,SAAKlE,KAAL,CAAWiE,SAAX,EAAsBC,KAAtB;;EACA,QAAI,KAAKjF,GAAL,IAAY,KAAKA,GAAL,CAASkF,YAAzB,EAAuC;EACnC,WAAKlF,GAAL,CAASkF,YAAT,CAAsBF,SAAtB,EAAiCC,KAAjC;EACH;;EACD,WAAO,IAAP;EACH;;WAEDE,2BAAS;EAEL,WAAO,IAAP;EACH;EAGD;;;;;EAKA;;;;;;WAKAC,qCAAazF,SAAS;EAClB,SAAKA,OAAL,GAAeZ,aAAA,CAAcsG,MAAd,CAAqB,EAArB,EAAyBrG,OAAzB,EAAkCW,OAAlC,CAAf;EACA,WAAO,IAAP;EACH;;WAED2F,mCAAYtD,UAAUa,UAAU;EAC5B,SAAKnD,QAAL,GAAgB,IAAIqD,UAAJ,CAAef,QAAf,EAAyBa,QAAzB,CAAhB;EACA,SAAKnD,QAAL,CAAc6F,QAAd,GAAyB,IAAzB;EACA,WAAO,IAAP;EACH;;WAEDC,uCAAe;EACX,SAAK9F,QAAL,GAAgB,IAAIqD,WAAJ,EAAhB;EACA,SAAKrD,QAAL,CAAc6F,QAAd,GAAyB,IAAzB;EACA,WAAO,IAAP;EACH;;WAGDE,mCAAYzD,UAAUa,UAAU;EAC5B,SAAKnD,QAAL,GAAgB,IAAIqD,UAAJ,CAAef,QAAf,EAAyBa,QAAzB,CAAhB;EACA,SAAKnD,QAAL,CAAcgG,oBAAd;EACA,SAAKhG,QAAL,CAAc6F,QAAd,GAAyB,IAAzB;EACA,WAAO,IAAP;EACH;;;WAIDI,uCAAc3D,UAAUa,UAAU;EAC9B;EACA,SAAKnD,QAAL,GAAgB,IAAIqD,YAAJ,CAAiBf,QAAjB,EAA2Ba,QAA3B,CAAhB;EACA,SAAKnD,QAAL,CAAc6F,QAAd,GAAyB,IAAzB;EACA,WAAO,IAAP;EACH;;WAEDK,mDAAoB5D,UAAUa,UAAU;EACpC,SAAKnD,QAAL,GAAgB,IAAIqD,kBAAJ,CAAuBf,QAAvB,EAAiCa,QAAjC,CAAhB;EACA,SAAKnD,QAAL,CAAcgG,oBAAd;EACA,SAAKhG,QAAL,CAAc6F,QAAd,GAAyB,IAAzB;EACA,WAAO,IAAP;EACH;;;IA9UoBxG,kBAAA,CAAmBO,IAAnB;;ECjDzB;;;;EAGA,IAAMuG,QAAQ,GAAGC,QAAQ,CAAC/C,cAAD,CAAzB;EAEA;;;;;;;AAMA,EAAO,SAASgD,YAAT,CAAsBC,eAAtB,EAAuCC,GAAvC,EAA4CC,KAA5C,EAAmD;EACtD,MAAIL,QAAQ,GAAG,GAAf,EAAoB;EAChBG,IAAAA,eAAe,CAACG,YAAhB,CAA6BF,GAA7B,EAAkCC,KAAlC;EACH,GAFD,MAEO;EACHF,IAAAA,eAAe,CAACD,YAAhB,CAA6BE,GAA7B,EAAkCC,KAAlC;EACH;;EACD,SAAOF,eAAP;EACH;;EClBM,SAASI,qBAAT,CAA+BC,UAA/B,EAA2C;EAC9C,MAAMC,UAAU,GAAG,EAAnB;;EACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAAU,CAACG,MAA/B,EAAuC,EAAED,CAAzC,EAA4C;EACxC,QAAMvE,QAAQ,GAAGqE,UAAU,CAACE,CAAD,CAA3B;;EACA,SAAK,IAAIrF,IAAT,IAAiBc,QAAjB,EAA2B;EACvB,UAAIsE,UAAU,CAACpF,IAAD,CAAV,KAAqBjB,SAAzB,EAAoC;EAChCqG,QAAAA,UAAU,CAACpF,IAAD,CAAV,GAAmB,EAAnB;EACH;;EACDoF,MAAAA,UAAU,CAACpF,IAAD,CAAV,CAAiBuF,IAAjB,CAAsBzE,QAAQ,CAACd,IAAD,CAA9B;EACH;EACJ,GAV6C;;;EAY9C,MAAMwF,cAAc,GAAG,EAAvB;EACA,MAAIC,WAAW,GAAG,CAAlB;EACA,MAAMC,WAAW,GAAG,EAApB;;EACA,OAAK,IAAI1F,KAAT,IAAiBoF,UAAjB,EAA6B;EACzB,QAAIpF,KAAI,KAAK,SAAb,EAAwB;EACpB,UAAM2F,QAAO,GAAGP,UAAU,CAACpF,KAAD,CAA1B;;EACA,WAAK,IAAIqF,EAAC,GAAG,CAAR,EAAWO,GAAG,GAAGD,QAAO,CAACL,MAA9B,EAAsCD,EAAC,GAAGO,GAA1C,EAA+CP,EAAC,EAAhD,EAAoD;EAChD,YAAMQ,KAAK,GAAGF,QAAO,CAACN,EAAD,CAArB;;EACA,aAAK,IAAIS,CAAC,GAAG,CAAR,EAAWC,IAAI,GAAGF,KAAK,CAACP,MAA7B,EAAqCQ,CAAC,GAAGC,IAAzC,EAA+CD,CAAC,EAAhD,EAAoD;EAChDJ,UAAAA,WAAW,CAACH,IAAZ,CAAiBM,KAAK,CAACC,CAAD,CAAL,GAAWL,WAA5B;EACH;;EACDA,QAAAA,WAAW,IAAIL,UAAU,CAAC,UAAD,CAAV,CAAuBC,EAAvB,EAA0BC,MAA1B,GAAmC,CAAlD;EACH;EACJ,KATD,MASO;EACH,UAAMU,eAAe,GAAGC,qBAAqB,CAACb,UAAU,CAACpF,KAAD,CAAX,CAA7C;EACA,UAAI,CAACgG,eAAL,EAAsB,OAAO,IAAP;EACtBR,MAAAA,cAAc,CAACxF,KAAD,CAAd,GAAuBgG,eAAvB;EACH;EACJ;;EACDR,EAAAA,cAAc,CAAC,SAAD,CAAd,GAA4B,IAAIU,WAAJ,CAAgBR,WAAhB,CAA5B;EA/B8C,MAgCtCrE,QAhCsC,GAgCJmE,cAhCI,CAgCtCnE,QAhCsC;EAAA,MAgC5B8E,MAhC4B,GAgCJX,cAhCI,CAgC5BW,MAhC4B;EAAA,MAgCpBC,EAhCoB,GAgCJZ,cAhCI,CAgCpBY,EAhCoB;EAAA,MAgChBT,OAhCgB,GAgCJH,cAhCI,CAgChBG,OAhCgB;EAiC9C,MAAMb,eAAe,GAAG,IAAIjD,oBAAJ,EAAxB;EACA,MAAMwE,KAAK,GAAG,IAAIC,YAAJ,CAAiBjF,QAAQ,CAACiE,MAA1B,CAAd;EACAe,EAAAA,KAAK,CAACE,IAAN,CAAW,CAAX,EAAc,CAAd,EAAiBlF,QAAQ,CAACiE,MAA1B;EACAT,EAAAA,YAAY,CAACC,eAAD,EAAkB,OAAlB,EAA2B,IAAIjD,qBAAJ,CAA0BwE,KAA1B,EAAiC,CAAjC,CAA3B,CAAZ;EACAxB,EAAAA,YAAY,CAACC,eAAD,EAAkB,QAAlB,EAA4B,IAAIjD,qBAAJ,CAA0BsE,MAA1B,EAAkC,CAAlC,CAA5B,CAAZ;EACAtB,EAAAA,YAAY,CAACC,eAAD,EAAkB,UAAlB,EAA8B,IAAIjD,qBAAJ,CAA0BR,QAA1B,EAAoC,CAApC,CAA9B,CAAZ;;EACA,MAAI+E,EAAE,IAAIA,EAAE,CAACd,MAAb,EAAqB;EACjBT,IAAAA,YAAY,CAACC,eAAD,EAAkB,IAAlB,EAAwB,IAAIjD,qBAAJ,CAA0BuE,EAA1B,EAA8B,CAA9B,CAAxB,CAAZ;EACH;;EACDtB,EAAAA,eAAe,CAAC0B,QAAhB,CAAyB,IAAI3E,qBAAJ,CAA0B8D,OAA1B,EAAmC,CAAnC,CAAzB;EACA,SAAOb,eAAP;EACH;;EAID,SAASmB,qBAAT,CAA+Bb,UAA/B,EAA2C;EACvC,MAAIqB,WAAW,GAAG,CAAlB;;EACA,OAAK,IAAIpB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,UAAU,CAACE,MAA/B,EAAuC,EAAED,CAAzC,EAA4C;EACxC,QAAMqB,SAAS,GAAGtB,UAAU,CAACC,CAAD,CAA5B;EACAoB,IAAAA,WAAW,IAAIC,SAAS,CAACpB,MAAzB;EACH;;EACD,MAAMqB,KAAK,GAAG,IAAIL,YAAJ,CAAiBG,WAAjB,CAAd;EACA,MAAIG,MAAM,GAAG,CAAb;;EACA,OAAK,IAAIvB,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGD,UAAU,CAACE,MAA/B,EAAuC,EAAED,GAAzC,EAA4C;EACxCsB,IAAAA,KAAK,CAAClD,GAAN,CAAU2B,UAAU,CAACC,GAAD,CAApB,EAAyBuB,MAAzB;EACAA,IAAAA,MAAM,IAAIxB,UAAU,CAACC,GAAD,CAAV,CAAcC,MAAxB;EACH;;EACD,SAAOqB,KAAP;EACH;;EC7DD,IAAME,gBAAgB,GAAG,EAAzB;EACA,IAAMC,GAAG,GAAG,GAAZ;EAEA;;;;;AAIA,EAAO,SAASC,WAAT,CAAqB1G,QAArB,EAA+B2G,OAA/B,EAA+C;EAAA,MAAhBA,OAAgB;EAAhBA,IAAAA,OAAgB,GAAN,IAAM;EAAA;;EAAA,MAE9CC,MAF8C,GAO9C5G,QAP8C,CAE9C4G,MAF8C;EAAA,MAG9CC,cAH8C,GAO9C7G,QAP8C,CAG9C6G,cAH8C;EAAA,MAI9CC,MAJ8C,GAO9C9G,QAP8C,CAI9C8G,MAJ8C;EAAA,MAK9CC,OAL8C,GAO9C/G,QAP8C,CAK9C+G,OAL8C;EAAA,MAM9CC,OAN8C,GAO9ChH,QAP8C,CAM9CgH,OAN8C;;EAQlD,MAAI,CAACL,OAAL,EAAc;EAAE;EACZ,QAAMlG,SAAQ,GAAG,IAAIe,4BAAJ,CAAiCsF,MAAjC,EAAyCA,MAAzC,EAAiDF,MAAjD,EAAyDC,cAAzD,EAAyE,CAAzE,CAAjB;;EACApG,IAAAA,SAAQ,CAACwG,OAAT,CAAiBC,IAAI,CAACC,EAAL,GAAU,CAA3B;;EACA,QAAMC,MAAM,GAAG3G,SAAQ,CAACsE,UAAT,CAAoB/D,QAApB,CAA6BsF,KAA5C;;EACA,SAAK,IAAIb,CAAC,GAAG,CAAR,EAAWC,IAAI,GAAG0B,MAAM,CAACnC,MAA9B,EAAsCQ,CAAC,GAAGC,IAA1C,EAAgDD,CAAC,IAAI,CAArD,EAAwD;EACpD2B,MAAAA,MAAM,CAAC3B,CAAC,GAAG,CAAL,CAAN,IAAkBmB,MAAM,GAAG,CAA3B;EACH;;EACD,WAAOnG,SAAP;EACH;;EACD,MAAIA,QAAJ;;EACA,OAAK,IAAIuE,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;EACzB,QAAIN,GAAG,GAAG,CAAEsC,OAAO,GAAGhC,CAAZ,EAAgB+B,OAAhB,EAAyBF,cAAzB,EAAyCQ,IAAzC,CAA8CZ,GAA9C,EAAmDa,QAAnD,EAAV;EACA7G,IAAAA,QAAQ,GAAG+F,gBAAgB,CAAC9B,GAAD,CAA3B;EACA,QAAIjE,QAAJ,EAAc;EACdiE,IAAAA,GAAG,GAAG,CAAEsC,OAAO,GAAGhC,CAAZ,EAAgB+B,OAAhB,EAAyBF,cAAzB,EAAyCQ,IAAzC,CAA8CZ,GAA9C,EAAmDa,QAAnD,EAAN;EACA7G,IAAAA,QAAQ,GAAG+F,gBAAgB,CAAC9B,GAAD,CAA3B;EACA,QAAIjE,QAAJ,EAAc;EACjB;;EACD,MAAI,CAACA,QAAL,EAAe;EACX,QAAMiE,IAAG,GAAG,CAACsC,OAAD,EAAUD,OAAV,EAAmBF,cAAnB,EAAmCQ,IAAnC,CAAwCZ,GAAxC,EAA6Ca,QAA7C,EAAZ;;EACA7G,IAAAA,QAAQ,GAAG+F,gBAAgB,CAAC9B,IAAD,CAAhB,GAAwB,IAAIlD,4BAAJ,CAAiCsF,MAAjC,EAAyCA,MAAzC,EAAiDF,MAAjD,EAAyDC,cAAzD,EAAyE,CAAzE,CAAnC;EACApG,IAAAA,QAAQ,CAACwG,OAAT,CAAiBC,IAAI,CAACC,EAAL,GAAU,CAA3B;EACA,QAAMC,OAAM,GAAG3G,QAAQ,CAACsE,UAAT,CAAoB/D,QAApB,CAA6BsF,KAA5C;;EACA,SAAK,IAAIb,EAAC,GAAG,CAAR,EAAWC,IAAI,GAAG0B,OAAM,CAACnC,MAA9B,EAAsCQ,EAAC,GAAGC,IAA1C,EAAgDD,EAAC,IAAI,CAArD,EAAwD;EACpD2B,MAAAA,OAAM,CAAC3B,EAAC,GAAG,CAAL,CAAN,IAAkBmB,MAAM,GAAG,CAA3B;EACH;;EACD,WAAOnG,QAAP;EACH;;EACD,SAAOA,QAAP;EACH;EAGD;;;;;;;AAMA,EAAO,SAAS8G,gBAAT,CAA0B9G,QAA1B,EAAoCuF,KAApC,EAA2CwB,SAA3C,EAAsD9C,GAAtD,EAAiE+C,CAAjE,EAAwE;EAAA,MAAlB/C,GAAkB;EAAlBA,IAAAA,GAAkB,GAAZ,GAAY;EAAA;;EAAA,MAAP+C,CAAO;EAAPA,IAAAA,CAAO,GAAH,CAAG;EAAA;;EAC3E,MAAIlB,MAAM,GAAG,CAAb;;EACA,MAAI7B,GAAG,KAAK,GAAZ,EAAiB;EACb6B,IAAAA,MAAM,GAAG,CAAT;EACH,GAFD,MAEO,IAAI7B,GAAG,KAAK,GAAZ,EAAiB;EACpB6B,IAAAA,MAAM,GAAG,CAAT;EACH;;EACD,MAAMvF,QAAQ,GAAGP,QAAQ,CAACsE,UAAT,CAAoB/D,QAApB,CAA6BsF,KAA9C;EACA,MAAMf,GAAG,GAAGvE,QAAQ,CAACiE,MAArB;EACA,MAAMyC,WAAW,GAAI1B,KAAK,YAAYxE,WAAjB,GAA+BwE,KAA/B,GAAuC,IAAIxE,WAAJ,CAAgBwE,KAAhB,CAA5D;EACA,MAAM2B,QAAQ,GAAG,IAAInG,WAAJ,CAAgBgG,SAAhB,CAAjB;EACA,MAAMI,MAAM,GAAG,EAAf;;EACA,OAAK,IAAI5C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGO,GAApB,EAAyBP,CAAC,IAAI,CAA9B,EAAiC;EAC7B,QAAM6C,CAAC,GAAG7G,QAAQ,CAACgE,CAAC,GAAGuB,MAAL,CAAlB;;EACA,QAAIsB,CAAC,GAAGJ,CAAR,EAAW;EACPG,MAAAA,MAAM,CAAC1C,IAAP,CAAYyC,QAAQ,CAACG,CAArB,EAAwBH,QAAQ,CAACG,CAAjC,EAAoCH,QAAQ,CAACI,CAA7C;EACH,KAFD,MAEO;EACHH,MAAAA,MAAM,CAAC1C,IAAP,CAAYwC,WAAW,CAACI,CAAxB,EAA2BJ,WAAW,CAACI,CAAvC,EAA0CJ,WAAW,CAACK,CAAtD;EACH;EACJ;;EACDvD,EAAAA,YAAY,CAAC/D,QAAD,EAAW,OAAX,EAAoB,IAAIe,4BAAJ,CAAiCoG,MAAjC,EAAyC,CAAzC,EAA4C,IAA5C,CAApB,CAAZ;EACA,SAAOA,MAAP;EACH;AAGD,EAAO,SAASI,gBAAT,CAA0BlD,UAA1B,EAAsC;EACzC,MAAMC,UAAU,GAAG,EAAnB;EAAA,MAAuB6C,MAAM,GAAG,EAAhC;;EACA,OAAK,IAAI5C,CAAC,GAAG,CAAR,EAAWO,GAAG,GAAGT,UAAU,CAACG,MAAjC,EAAyCD,CAAC,GAAGO,GAA7C,EAAkDP,CAAC,EAAnD,EAAuD;EAAA,gCACXF,UAAU,CAACE,CAAD,CAAV,CAAcD,UADH;EAAA,QAC3CiB,KAD2C,yBAC3CA,KAD2C;EAAA,QACpCF,MADoC,yBACpCA,MADoC;EAAA,QAC5B9E,QAD4B,yBAC5BA,QAD4B;EAAA,QAClB+E,EADkB,yBAClBA,EADkB;EAEnD,QAAMP,KAAK,GAAGV,UAAU,CAACE,CAAD,CAAV,CAAcQ,KAA5B;;EACA,SAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,IAAI,GAAGM,KAAK,CAACM,KAAN,CAAYrB,MAAnC,EAA2CQ,CAAC,GAAGC,IAA/C,EAAqDD,CAAC,EAAtD,EAA0D;EACtDmC,MAAAA,MAAM,CAAC1C,IAAP,CAAYc,KAAK,CAACM,KAAN,CAAYb,CAAZ,CAAZ;EACH;;EACDV,IAAAA,UAAU,CAACG,IAAX,CAAgB;EACZ;EACAY,MAAAA,MAAM,EAAEA,MAAM,CAACQ,KAFH;EAGZP,MAAAA,EAAE,EAAEA,EAAE,CAACO,KAHK;EAIZtF,MAAAA,QAAQ,EAAEA,QAAQ,CAACsF,KAJP;EAKZhB,MAAAA,OAAO,EAAEE,KAAK,CAACc;EALH,KAAhB;EAOH;;EACD,MAAM2B,cAAc,GAAGpD,qBAAqB,CAACE,UAAD,CAA5C;;EACA,OAAK,IAAIC,EAAC,GAAG,CAAR,EAAWO,KAAG,GAAGqC,MAAM,CAAC3C,MAA7B,EAAqCD,EAAC,GAAGO,KAAzC,EAA8CP,EAAC,EAA/C,EAAmD;EAC/CiD,IAAAA,cAAc,CAAClD,UAAf,CAA0BiB,KAA1B,CAAgCM,KAAhC,CAAsCtB,EAAtC,IAA2C4C,MAAM,CAAC5C,EAAD,CAAjD;EACH;;EACD,SAAOiD,cAAP;EAEH;;ECjGD,IAAMxK,SAAO,GAAG;EACZqJ,EAAAA,MAAM,EAAE,EADI;EAEZF,EAAAA,MAAM,EAAE,GAFI;EAGZC,EAAAA,cAAc,EAAE,CAHJ;EAIZlJ,EAAAA,QAAQ,EAAE,CAJE;EAKZgK,EAAAA,QAAQ,EAAE,IALE;EAMZD,EAAAA,WAAW,EAAE;EAND,CAAhB;EAUA;;;;MAGMQ;;;;;EACF,eAAY5H,UAAZ,EAAwBlC,OAAxB,EAAiCkD,QAAjC,EAA2C1C,KAA3C,EAAkD;EAAA;;EAC9CR,IAAAA,OAAO,GAAGZ,aAAA,CAAcsG,MAAd,CAAqB,EAArB,EAAyBrG,SAAzB,EAAkCW,OAAlC,EAA2C;EAAEQ,MAAAA,KAAK,EAALA,KAAF;EAAS0B,MAAAA,UAAU,EAAVA;EAAT,KAA3C,CAAV;EACA;;EACA,UAAKuD,YAAL,CAAkBzF,OAAlB;;EAH8C,mBAIcA,OAJd;EAAA,QAItCwI,MAJsC,YAItCA,MAJsC;EAAA,QAI9BE,MAJ8B,YAI9BA,MAJ8B;EAAA,QAItBa,QAJsB,YAItBA,QAJsB;EAAA,QAIZD,WAJY,YAIZA,WAJY;EAAA,QAIC/J,QAJD,YAICA,QAJD;EAK9CS,IAAAA,OAAO,CAACwI,MAAR,GAAiBhI,KAAK,CAACkC,iBAAN,CAAwB8F,MAAxB,EAAgCA,MAAhC,EAAwC7F,CAAzD;EACA3C,IAAAA,OAAO,CAAC0I,MAAR,GAAiBlI,KAAK,CAACkC,iBAAN,CAAwBgG,MAAxB,EAAgCA,MAAhC,EAAwC/F,CAAzD,CAN8C;;EAQ9C3C,IAAAA,OAAO,CAAC2I,OAAR,GAAkB,MAAK3I,OAAL,CAAa0I,MAA/B;EACA1I,IAAAA,OAAO,CAAC4I,OAAR,GAAkB,MAAK5I,OAAL,CAAawI,MAA/B;EACA,UAAKuB,EAAL,GAAU/J,OAAO,CAACwI,MAAlB;EACA,QAAMnG,QAAQ,GAAGiG,WAAW,CAACtI,OAAD,CAA5B;;EACA,QAAIuJ,QAAQ,IAAI,CAACrG,QAAQ,CAAC8G,GAA1B,EAA+B;EAC3Bb,MAAAA,gBAAgB,CAAC9G,QAAD,EAAWiH,WAAX,EAAwBC,QAAxB,EAAkC,GAAlC,EAAuCvJ,OAAO,CAACwI,MAAR,GAAiB,CAAxD,CAAhB;EACAtF,MAAAA,QAAQ,CAACI,YAAT,GAAwBF,kBAAxB;EACH;;EACD,UAAKuC,WAAL,CAAiBtD,QAAjB,EAA2Ba,QAA3B;;EACA,QAAMT,CAAC,GAAGjC,KAAK,CAACkC,iBAAN,CAAwBnD,QAAxB,EAAkCA,QAAlC,EAA4CoD,CAAtD;EACA,QAAMC,QAAQ,GAAGpC,KAAK,CAACyJ,mBAAN,CAA0B/H,UAA1B,EAAsCO,CAAtC,CAAjB;;EACA,UAAKzB,WAAL,GAAmB4B,QAAnB,CAA4BsH,IAA5B,CAAiCtH,QAAjC,EAnB8C;EAqB9C;;;EArB8C;EAsBjD;;;IAvBajE;;ECjBlB,YAAc,GAAGwL,MAAjB;EACA,aAAsB,GAAGA,MAAzB;;EAEA,SAASA,MAAT,CAAgBC,IAAhB,EAAsBC,WAAtB,EAAmCC,GAAnC,EAAwC;EAEpCA,EAAAA,GAAG,GAAGA,GAAG,IAAI,CAAb;EAEA,MAAIC,QAAQ,GAAGF,WAAW,IAAIA,WAAW,CAACxD,MAA1C;EAAA,MACI2D,QAAQ,GAAGD,QAAQ,GAAGF,WAAW,CAAC,CAAD,CAAX,GAAiBC,GAApB,GAA0BF,IAAI,CAACvD,MADtD;EAAA,MAEI4D,SAAS,GAAGC,UAAU,CAACN,IAAD,EAAO,CAAP,EAAUI,QAAV,EAAoBF,GAApB,EAAyB,IAAzB,CAF1B;EAAA,MAGIK,SAAS,GAAG,EAHhB;EAKA,MAAI,CAACF,SAAD,IAAcA,SAAS,CAACG,IAAV,KAAmBH,SAAS,CAACI,IAA/C,EAAqD,OAAOF,SAAP;EAErD,MAAIG,IAAJ,EAAUC,IAAV,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA4BtI,CAA5B,EAA+B8G,CAA/B,EAAkCyB,OAAlC;EAEA,MAAIX,QAAJ,EAAcE,SAAS,GAAGU,cAAc,CAACf,IAAD,EAAOC,WAAP,EAAoBI,SAApB,EAA+BH,GAA/B,CAA1B,CAbsB;;EAgBpC,MAAIF,IAAI,CAACvD,MAAL,GAAc,KAAKyD,GAAvB,EAA4B;EACxBQ,IAAAA,IAAI,GAAGE,IAAI,GAAGZ,IAAI,CAAC,CAAD,CAAlB;EACAW,IAAAA,IAAI,GAAGE,IAAI,GAAGb,IAAI,CAAC,CAAD,CAAlB;;EAEA,SAAK,IAAIxD,CAAC,GAAG0D,GAAb,EAAkB1D,CAAC,GAAG4D,QAAtB,EAAgC5D,CAAC,IAAI0D,GAArC,EAA0C;EACtC3H,MAAAA,CAAC,GAAGyH,IAAI,CAACxD,CAAD,CAAR;EACA6C,MAAAA,CAAC,GAAGW,IAAI,CAACxD,CAAC,GAAG,CAAL,CAAR;EACA,UAAIjE,CAAC,GAAGmI,IAAR,EAAcA,IAAI,GAAGnI,CAAP;EACd,UAAI8G,CAAC,GAAGsB,IAAR,EAAcA,IAAI,GAAGtB,CAAP;EACd,UAAI9G,CAAC,GAAGqI,IAAR,EAAcA,IAAI,GAAGrI,CAAP;EACd,UAAI8G,CAAC,GAAGwB,IAAR,EAAcA,IAAI,GAAGxB,CAAP;EACjB,KAXuB;;;EAcxByB,IAAAA,OAAO,GAAGpC,IAAI,CAACsC,GAAL,CAASJ,IAAI,GAAGF,IAAhB,EAAsBG,IAAI,GAAGF,IAA7B,CAAV;EACAG,IAAAA,OAAO,GAAGA,OAAO,KAAK,CAAZ,GAAgB,IAAIA,OAApB,GAA8B,CAAxC;EACH;;EAEDG,EAAAA,YAAY,CAACZ,SAAD,EAAYE,SAAZ,EAAuBL,GAAvB,EAA4BQ,IAA5B,EAAkCC,IAAlC,EAAwCG,OAAxC,CAAZ;EAEA,SAAOP,SAAP;EACH;;;EAGD,SAASD,UAAT,CAAoBN,IAApB,EAA0BkB,KAA1B,EAAiCC,GAAjC,EAAsCjB,GAAtC,EAA2CkB,SAA3C,EAAsD;EAClD,MAAI5E,CAAJ,EAAO6E,IAAP;;EAEA,MAAID,SAAS,KAAME,UAAU,CAACtB,IAAD,EAAOkB,KAAP,EAAcC,GAAd,EAAmBjB,GAAnB,CAAV,GAAoC,CAAvD,EAA2D;EACvD,SAAK1D,CAAC,GAAG0E,KAAT,EAAgB1E,CAAC,GAAG2E,GAApB,EAAyB3E,CAAC,IAAI0D,GAA9B,EAAmCmB,IAAI,GAAGE,UAAU,CAAC/E,CAAD,EAAIwD,IAAI,CAACxD,CAAD,CAAR,EAAawD,IAAI,CAACxD,CAAC,GAAG,CAAL,CAAjB,EAA0B6E,IAA1B,CAAjB;EACtC,GAFD,MAEO;EACH,SAAK7E,CAAC,GAAG2E,GAAG,GAAGjB,GAAf,EAAoB1D,CAAC,IAAI0E,KAAzB,EAAgC1E,CAAC,IAAI0D,GAArC,EAA0CmB,IAAI,GAAGE,UAAU,CAAC/E,CAAD,EAAIwD,IAAI,CAACxD,CAAD,CAAR,EAAawD,IAAI,CAACxD,CAAC,GAAG,CAAL,CAAjB,EAA0B6E,IAA1B,CAAjB;EAC7C;;EAED,MAAIA,IAAI,IAAIG,MAAM,CAACH,IAAD,EAAOA,IAAI,CAACb,IAAZ,CAAlB,EAAqC;EACjCiB,IAAAA,UAAU,CAACJ,IAAD,CAAV;EACAA,IAAAA,IAAI,GAAGA,IAAI,CAACb,IAAZ;EACH;;EAED,SAAOa,IAAP;EACH;;;EAGD,SAASK,YAAT,CAAsBR,KAAtB,EAA6BC,GAA7B,EAAkC;EAC9B,MAAI,CAACD,KAAL,EAAY,OAAOA,KAAP;EACZ,MAAI,CAACC,GAAL,EAAUA,GAAG,GAAGD,KAAN;EAEV,MAAIS,CAAC,GAAGT,KAAR;EAAA,MACIU,KADJ;;EAEA,KAAG;EACCA,IAAAA,KAAK,GAAG,KAAR;;EAEA,QAAI,CAACD,CAAC,CAACE,OAAH,KAAeL,MAAM,CAACG,CAAD,EAAIA,CAAC,CAACnB,IAAN,CAAN,IAAqBsB,IAAI,CAACH,CAAC,CAAClB,IAAH,EAASkB,CAAT,EAAYA,CAAC,CAACnB,IAAd,CAAJ,KAA4B,CAAhE,CAAJ,EAAwE;EACpEiB,MAAAA,UAAU,CAACE,CAAD,CAAV;EACAA,MAAAA,CAAC,GAAGR,GAAG,GAAGQ,CAAC,CAAClB,IAAZ;EACA,UAAIkB,CAAC,KAAKA,CAAC,CAACnB,IAAZ,EAAkB;EAClBoB,MAAAA,KAAK,GAAG,IAAR;EAEH,KAND,MAMO;EACHD,MAAAA,CAAC,GAAGA,CAAC,CAACnB,IAAN;EACH;EACJ,GAZD,QAYSoB,KAAK,IAAID,CAAC,KAAKR,GAZxB;;EAcA,SAAOA,GAAP;EACH;;;EAGD,SAASF,YAAT,CAAsBc,GAAtB,EAA2BxB,SAA3B,EAAsCL,GAAtC,EAA2CQ,IAA3C,EAAiDC,IAAjD,EAAuDG,OAAvD,EAAgEkB,IAAhE,EAAsE;EAClE,MAAI,CAACD,GAAL,EAAU,OADwD;;EAIlE,MAAI,CAACC,IAAD,IAASlB,OAAb,EAAsBmB,UAAU,CAACF,GAAD,EAAMrB,IAAN,EAAYC,IAAZ,EAAkBG,OAAlB,CAAV;EAEtB,MAAIoB,IAAI,GAAGH,GAAX;EAAA,MACItB,IADJ;EAAA,MACUD,IADV,CANkE;;EAUlE,SAAOuB,GAAG,CAACtB,IAAJ,KAAasB,GAAG,CAACvB,IAAxB,EAA8B;EAC1BC,IAAAA,IAAI,GAAGsB,GAAG,CAACtB,IAAX;EACAD,IAAAA,IAAI,GAAGuB,GAAG,CAACvB,IAAX;;EAEA,QAAIM,OAAO,GAAGqB,WAAW,CAACJ,GAAD,EAAMrB,IAAN,EAAYC,IAAZ,EAAkBG,OAAlB,CAAd,GAA2CsB,KAAK,CAACL,GAAD,CAA3D,EAAkE;;EAE9DxB,MAAAA,SAAS,CAAC7D,IAAV,CAAe+D,IAAI,CAACjE,CAAL,GAAS0D,GAAxB;EACAK,MAAAA,SAAS,CAAC7D,IAAV,CAAeqF,GAAG,CAACvF,CAAJ,GAAQ0D,GAAvB;EACAK,MAAAA,SAAS,CAAC7D,IAAV,CAAe8D,IAAI,CAAChE,CAAL,GAAS0D,GAAxB;EAEAuB,MAAAA,UAAU,CAACM,GAAD,CAAV,CAN8D;;EAS9DA,MAAAA,GAAG,GAAGvB,IAAI,CAACA,IAAX;EACA0B,MAAAA,IAAI,GAAG1B,IAAI,CAACA,IAAZ;EAEA;EACH;;EAEDuB,IAAAA,GAAG,GAAGvB,IAAN,CAnB0B;;EAsB1B,QAAIuB,GAAG,KAAKG,IAAZ,EAAkB;;EAEd,UAAI,CAACF,IAAL,EAAW;EACPf,QAAAA,YAAY,CAACS,YAAY,CAACK,GAAD,CAAb,EAAoBxB,SAApB,EAA+BL,GAA/B,EAAoCQ,IAApC,EAA0CC,IAA1C,EAAgDG,OAAhD,EAAyD,CAAzD,CAAZ,CADO;EAIV,OAJD,MAIO,IAAIkB,IAAI,KAAK,CAAb,EAAgB;EACnBD,QAAAA,GAAG,GAAGM,sBAAsB,CAACX,YAAY,CAACK,GAAD,CAAb,EAAoBxB,SAApB,EAA+BL,GAA/B,CAA5B;EACAe,QAAAA,YAAY,CAACc,GAAD,EAAMxB,SAAN,EAAiBL,GAAjB,EAAsBQ,IAAtB,EAA4BC,IAA5B,EAAkCG,OAAlC,EAA2C,CAA3C,CAAZ,CAFmB;EAKtB,OALM,MAKA,IAAIkB,IAAI,KAAK,CAAb,EAAgB;EACnBM,QAAAA,WAAW,CAACP,GAAD,EAAMxB,SAAN,EAAiBL,GAAjB,EAAsBQ,IAAtB,EAA4BC,IAA5B,EAAkCG,OAAlC,CAAX;EACH;;EAED;EACH;EACJ;EACJ;;;EAGD,SAASsB,KAAT,CAAeL,GAAf,EAAoB;EAChB,MAAIQ,CAAC,GAAGR,GAAG,CAACtB,IAAZ;EAAA,MACIlB,CAAC,GAAGwC,GADR;EAAA,MAEIS,CAAC,GAAGT,GAAG,CAACvB,IAFZ;EAIA,MAAIsB,IAAI,CAACS,CAAD,EAAIhD,CAAJ,EAAOiD,CAAP,CAAJ,IAAiB,CAArB,EAAwB,OAAO,KAAP,CALR;;;EAQhB,MAAIb,CAAC,GAAGI,GAAG,CAACvB,IAAJ,CAASA,IAAjB;;EAEA,SAAOmB,CAAC,KAAKI,GAAG,CAACtB,IAAjB,EAAuB;EACnB,QAAIgC,eAAe,CAACF,CAAC,CAAChK,CAAH,EAAMgK,CAAC,CAAClD,CAAR,EAAWE,CAAC,CAAChH,CAAb,EAAgBgH,CAAC,CAACF,CAAlB,EAAqBmD,CAAC,CAACjK,CAAvB,EAA0BiK,CAAC,CAACnD,CAA5B,EAA+BsC,CAAC,CAACpJ,CAAjC,EAAoCoJ,CAAC,CAACtC,CAAtC,CAAf,IACAyC,IAAI,CAACH,CAAC,CAAClB,IAAH,EAASkB,CAAT,EAAYA,CAAC,CAACnB,IAAd,CAAJ,IAA2B,CAD/B,EACkC,OAAO,KAAP;EAClCmB,IAAAA,CAAC,GAAGA,CAAC,CAACnB,IAAN;EACH;;EAED,SAAO,IAAP;EACH;;EAED,SAAS2B,WAAT,CAAqBJ,GAArB,EAA0BrB,IAA1B,EAAgCC,IAAhC,EAAsCG,OAAtC,EAA+C;EAC3C,MAAIyB,CAAC,GAAGR,GAAG,CAACtB,IAAZ;EAAA,MACIlB,CAAC,GAAGwC,GADR;EAAA,MAEIS,CAAC,GAAGT,GAAG,CAACvB,IAFZ;EAIA,MAAIsB,IAAI,CAACS,CAAD,EAAIhD,CAAJ,EAAOiD,CAAP,CAAJ,IAAiB,CAArB,EAAwB,OAAO,KAAP,CALmB;;;EAQ3C,MAAIE,KAAK,GAAGH,CAAC,CAAChK,CAAF,GAAMgH,CAAC,CAAChH,CAAR,GAAagK,CAAC,CAAChK,CAAF,GAAMiK,CAAC,CAACjK,CAAR,GAAYgK,CAAC,CAAChK,CAAd,GAAkBiK,CAAC,CAACjK,CAAjC,GAAuCgH,CAAC,CAAChH,CAAF,GAAMiK,CAAC,CAACjK,CAAR,GAAYgH,CAAC,CAAChH,CAAd,GAAkBiK,CAAC,CAACjK,CAAvE;EAAA,MACIoK,KAAK,GAAGJ,CAAC,CAAClD,CAAF,GAAME,CAAC,CAACF,CAAR,GAAakD,CAAC,CAAClD,CAAF,GAAMmD,CAAC,CAACnD,CAAR,GAAYkD,CAAC,CAAClD,CAAd,GAAkBmD,CAAC,CAACnD,CAAjC,GAAuCE,CAAC,CAACF,CAAF,GAAMmD,CAAC,CAACnD,CAAR,GAAYE,CAAC,CAACF,CAAd,GAAkBmD,CAAC,CAACnD,CADvE;EAAA,MAEIuD,KAAK,GAAGL,CAAC,CAAChK,CAAF,GAAMgH,CAAC,CAAChH,CAAR,GAAagK,CAAC,CAAChK,CAAF,GAAMiK,CAAC,CAACjK,CAAR,GAAYgK,CAAC,CAAChK,CAAd,GAAkBiK,CAAC,CAACjK,CAAjC,GAAuCgH,CAAC,CAAChH,CAAF,GAAMiK,CAAC,CAACjK,CAAR,GAAYgH,CAAC,CAAChH,CAAd,GAAkBiK,CAAC,CAACjK,CAFvE;EAAA,MAGIsK,KAAK,GAAGN,CAAC,CAAClD,CAAF,GAAME,CAAC,CAACF,CAAR,GAAakD,CAAC,CAAClD,CAAF,GAAMmD,CAAC,CAACnD,CAAR,GAAYkD,CAAC,CAAClD,CAAd,GAAkBmD,CAAC,CAACnD,CAAjC,GAAuCE,CAAC,CAACF,CAAF,GAAMmD,CAAC,CAACnD,CAAR,GAAYE,CAAC,CAACF,CAAd,GAAkBmD,CAAC,CAACnD,CAHvE,CAR2C;;EAc3C,MAAIyD,IAAI,GAAGC,MAAM,CAACL,KAAD,EAAQC,KAAR,EAAejC,IAAf,EAAqBC,IAArB,EAA2BG,OAA3B,CAAjB;EAAA,MACIkC,IAAI,GAAGD,MAAM,CAACH,KAAD,EAAQC,KAAR,EAAenC,IAAf,EAAqBC,IAArB,EAA2BG,OAA3B,CADjB;EAGA,MAAIa,CAAC,GAAGI,GAAG,CAACkB,KAAZ;EAAA,MACIC,CAAC,GAAGnB,GAAG,CAACoB,KADZ,CAjB2C;;EAqB3C,SAAOxB,CAAC,IAAIA,CAAC,CAACtJ,CAAF,IAAOyK,IAAZ,IAAoBI,CAApB,IAAyBA,CAAC,CAAC7K,CAAF,IAAO2K,IAAvC,EAA6C;EACzC,QAAIrB,CAAC,KAAKI,GAAG,CAACtB,IAAV,IAAkBkB,CAAC,KAAKI,GAAG,CAACvB,IAA5B,IACAiC,eAAe,CAACF,CAAC,CAAChK,CAAH,EAAMgK,CAAC,CAAClD,CAAR,EAAWE,CAAC,CAAChH,CAAb,EAAgBgH,CAAC,CAACF,CAAlB,EAAqBmD,CAAC,CAACjK,CAAvB,EAA0BiK,CAAC,CAACnD,CAA5B,EAA+BsC,CAAC,CAACpJ,CAAjC,EAAoCoJ,CAAC,CAACtC,CAAtC,CADf,IAEAyC,IAAI,CAACH,CAAC,CAAClB,IAAH,EAASkB,CAAT,EAAYA,CAAC,CAACnB,IAAd,CAAJ,IAA2B,CAF/B,EAEkC,OAAO,KAAP;EAClCmB,IAAAA,CAAC,GAAGA,CAAC,CAACsB,KAAN;EAEA,QAAIC,CAAC,KAAKnB,GAAG,CAACtB,IAAV,IAAkByC,CAAC,KAAKnB,GAAG,CAACvB,IAA5B,IACAiC,eAAe,CAACF,CAAC,CAAChK,CAAH,EAAMgK,CAAC,CAAClD,CAAR,EAAWE,CAAC,CAAChH,CAAb,EAAgBgH,CAAC,CAACF,CAAlB,EAAqBmD,CAAC,CAACjK,CAAvB,EAA0BiK,CAAC,CAACnD,CAA5B,EAA+B6D,CAAC,CAAC3K,CAAjC,EAAoC2K,CAAC,CAAC7D,CAAtC,CADf,IAEAyC,IAAI,CAACoB,CAAC,CAACzC,IAAH,EAASyC,CAAT,EAAYA,CAAC,CAAC1C,IAAd,CAAJ,IAA2B,CAF/B,EAEkC,OAAO,KAAP;EAClC0C,IAAAA,CAAC,GAAGA,CAAC,CAACC,KAAN;EACH,GA/B0C;;;EAkC3C,SAAOxB,CAAC,IAAIA,CAAC,CAACtJ,CAAF,IAAOyK,IAAnB,EAAyB;EACrB,QAAInB,CAAC,KAAKI,GAAG,CAACtB,IAAV,IAAkBkB,CAAC,KAAKI,GAAG,CAACvB,IAA5B,IACAiC,eAAe,CAACF,CAAC,CAAChK,CAAH,EAAMgK,CAAC,CAAClD,CAAR,EAAWE,CAAC,CAAChH,CAAb,EAAgBgH,CAAC,CAACF,CAAlB,EAAqBmD,CAAC,CAACjK,CAAvB,EAA0BiK,CAAC,CAACnD,CAA5B,EAA+BsC,CAAC,CAACpJ,CAAjC,EAAoCoJ,CAAC,CAACtC,CAAtC,CADf,IAEAyC,IAAI,CAACH,CAAC,CAAClB,IAAH,EAASkB,CAAT,EAAYA,CAAC,CAACnB,IAAd,CAAJ,IAA2B,CAF/B,EAEkC,OAAO,KAAP;EAClCmB,IAAAA,CAAC,GAAGA,CAAC,CAACsB,KAAN;EACH,GAvC0C;;;EA0C3C,SAAOC,CAAC,IAAIA,CAAC,CAAC7K,CAAF,IAAO2K,IAAnB,EAAyB;EACrB,QAAIE,CAAC,KAAKnB,GAAG,CAACtB,IAAV,IAAkByC,CAAC,KAAKnB,GAAG,CAACvB,IAA5B,IACAiC,eAAe,CAACF,CAAC,CAAChK,CAAH,EAAMgK,CAAC,CAAClD,CAAR,EAAWE,CAAC,CAAChH,CAAb,EAAgBgH,CAAC,CAACF,CAAlB,EAAqBmD,CAAC,CAACjK,CAAvB,EAA0BiK,CAAC,CAACnD,CAA5B,EAA+B6D,CAAC,CAAC3K,CAAjC,EAAoC2K,CAAC,CAAC7D,CAAtC,CADf,IAEAyC,IAAI,CAACoB,CAAC,CAACzC,IAAH,EAASyC,CAAT,EAAYA,CAAC,CAAC1C,IAAd,CAAJ,IAA2B,CAF/B,EAEkC,OAAO,KAAP;EAClC0C,IAAAA,CAAC,GAAGA,CAAC,CAACC,KAAN;EACH;;EAED,SAAO,IAAP;EACH;;;EAGD,SAASd,sBAAT,CAAgCnB,KAAhC,EAAuCX,SAAvC,EAAkDL,GAAlD,EAAuD;EACnD,MAAIyB,CAAC,GAAGT,KAAR;;EACA,KAAG;EACC,QAAIqB,CAAC,GAAGZ,CAAC,CAAClB,IAAV;EAAA,QACIlB,CAAC,GAAGoC,CAAC,CAACnB,IAAF,CAAOA,IADf;;EAGA,QAAI,CAACgB,MAAM,CAACe,CAAD,EAAIhD,CAAJ,CAAP,IAAiB6D,UAAU,CAACb,CAAD,EAAIZ,CAAJ,EAAOA,CAAC,CAACnB,IAAT,EAAejB,CAAf,CAA3B,IAAgD8D,aAAa,CAACd,CAAD,EAAIhD,CAAJ,CAA7D,IAAuE8D,aAAa,CAAC9D,CAAD,EAAIgD,CAAJ,CAAxF,EAAgG;EAE5FhC,MAAAA,SAAS,CAAC7D,IAAV,CAAe6F,CAAC,CAAC/F,CAAF,GAAM0D,GAArB;EACAK,MAAAA,SAAS,CAAC7D,IAAV,CAAeiF,CAAC,CAACnF,CAAF,GAAM0D,GAArB;EACAK,MAAAA,SAAS,CAAC7D,IAAV,CAAe6C,CAAC,CAAC/C,CAAF,GAAM0D,GAArB,EAJ4F;;EAO5FuB,MAAAA,UAAU,CAACE,CAAD,CAAV;EACAF,MAAAA,UAAU,CAACE,CAAC,CAACnB,IAAH,CAAV;EAEAmB,MAAAA,CAAC,GAAGT,KAAK,GAAG3B,CAAZ;EACH;;EACDoC,IAAAA,CAAC,GAAGA,CAAC,CAACnB,IAAN;EACH,GAjBD,QAiBSmB,CAAC,KAAKT,KAjBf;;EAmBA,SAAOQ,YAAY,CAACC,CAAD,CAAnB;EACH;;;EAGD,SAASW,WAAT,CAAqBpB,KAArB,EAA4BX,SAA5B,EAAuCL,GAAvC,EAA4CQ,IAA5C,EAAkDC,IAAlD,EAAwDG,OAAxD,EAAiE;;EAE7D,MAAIyB,CAAC,GAAGrB,KAAR;;EACA,KAAG;EACC,QAAI3B,CAAC,GAAGgD,CAAC,CAAC/B,IAAF,CAAOA,IAAf;;EACA,WAAOjB,CAAC,KAAKgD,CAAC,CAAC9B,IAAf,EAAqB;EACjB,UAAI8B,CAAC,CAAC/F,CAAF,KAAQ+C,CAAC,CAAC/C,CAAV,IAAe8G,eAAe,CAACf,CAAD,EAAIhD,CAAJ,CAAlC,EAA0C;;EAEtC,YAAIiD,CAAC,GAAGe,YAAY,CAAChB,CAAD,EAAIhD,CAAJ,CAApB,CAFsC;;EAKtCgD,QAAAA,CAAC,GAAGb,YAAY,CAACa,CAAD,EAAIA,CAAC,CAAC/B,IAAN,CAAhB;EACAgC,QAAAA,CAAC,GAAGd,YAAY,CAACc,CAAD,EAAIA,CAAC,CAAChC,IAAN,CAAhB,CANsC;;EAStCS,QAAAA,YAAY,CAACsB,CAAD,EAAIhC,SAAJ,EAAeL,GAAf,EAAoBQ,IAApB,EAA0BC,IAA1B,EAAgCG,OAAhC,CAAZ;EACAG,QAAAA,YAAY,CAACuB,CAAD,EAAIjC,SAAJ,EAAeL,GAAf,EAAoBQ,IAApB,EAA0BC,IAA1B,EAAgCG,OAAhC,CAAZ;EACA;EACH;;EACDvB,MAAAA,CAAC,GAAGA,CAAC,CAACiB,IAAN;EACH;;EACD+B,IAAAA,CAAC,GAAGA,CAAC,CAAC/B,IAAN;EACH,GAnBD,QAmBS+B,CAAC,KAAKrB,KAnBf;EAoBH;;;EAGD,SAASH,cAAT,CAAwBf,IAAxB,EAA8BC,WAA9B,EAA2CI,SAA3C,EAAsDH,GAAtD,EAA2D;EACvD,MAAIsD,KAAK,GAAG,EAAZ;EAAA,MACIhH,CADJ;EAAA,MACOO,GADP;EAAA,MACYmE,KADZ;EAAA,MACmBC,GADnB;EAAA,MACwBsC,IADxB;;EAGA,OAAKjH,CAAC,GAAG,CAAJ,EAAOO,GAAG,GAAGkD,WAAW,CAACxD,MAA9B,EAAsCD,CAAC,GAAGO,GAA1C,EAA+CP,CAAC,EAAhD,EAAoD;EAChD0E,IAAAA,KAAK,GAAGjB,WAAW,CAACzD,CAAD,CAAX,GAAiB0D,GAAzB;EACAiB,IAAAA,GAAG,GAAG3E,CAAC,GAAGO,GAAG,GAAG,CAAV,GAAckD,WAAW,CAACzD,CAAC,GAAG,CAAL,CAAX,GAAqB0D,GAAnC,GAAyCF,IAAI,CAACvD,MAApD;EACAgH,IAAAA,IAAI,GAAGnD,UAAU,CAACN,IAAD,EAAOkB,KAAP,EAAcC,GAAd,EAAmBjB,GAAnB,EAAwB,KAAxB,CAAjB;EACA,QAAIuD,IAAI,KAAKA,IAAI,CAACjD,IAAlB,EAAwBiD,IAAI,CAAC5B,OAAL,GAAe,IAAf;EACxB2B,IAAAA,KAAK,CAAC9G,IAAN,CAAWgH,WAAW,CAACD,IAAD,CAAtB;EACH;;EAEDD,EAAAA,KAAK,CAACG,IAAN,CAAWC,QAAX,EAZuD;;EAevD,OAAKpH,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGgH,KAAK,CAAC/G,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;EAC/BqH,IAAAA,aAAa,CAACL,KAAK,CAAChH,CAAD,CAAN,EAAW6D,SAAX,CAAb;EACAA,IAAAA,SAAS,GAAGqB,YAAY,CAACrB,SAAD,EAAYA,SAAS,CAACG,IAAtB,CAAxB;EACH;;EAED,SAAOH,SAAP;EACH;;EAED,SAASuD,QAAT,CAAkBrB,CAAlB,EAAqBhD,CAArB,EAAwB;EACpB,SAAOgD,CAAC,CAAChK,CAAF,GAAMgH,CAAC,CAAChH,CAAf;EACH;;;EAGD,SAASsL,aAAT,CAAuBC,IAAvB,EAA6BzD,SAA7B,EAAwC;EACpCA,EAAAA,SAAS,GAAG0D,cAAc,CAACD,IAAD,EAAOzD,SAAP,CAA1B;;EACA,MAAIA,SAAJ,EAAe;EACX,QAAId,CAAC,GAAGgE,YAAY,CAAClD,SAAD,EAAYyD,IAAZ,CAApB;EACApC,IAAAA,YAAY,CAACnC,CAAD,EAAIA,CAAC,CAACiB,IAAN,CAAZ;EACH;EACJ;;;EAGD,SAASuD,cAAT,CAAwBD,IAAxB,EAA8BzD,SAA9B,EAAyC;EACrC,MAAIsB,CAAC,GAAGtB,SAAR;EAAA,MACI2D,EAAE,GAAGF,IAAI,CAACvL,CADd;EAAA,MAEI0L,EAAE,GAAGH,IAAI,CAACzE,CAFd;EAAA,MAGI6E,EAAE,GAAG,CAACC,QAHV;EAAA,MAIIC,CAJJ,CADqC;;;EASrC,KAAG;EACC,QAAIH,EAAE,IAAItC,CAAC,CAACtC,CAAR,IAAa4E,EAAE,IAAItC,CAAC,CAACnB,IAAF,CAAOnB,CAA1B,IAA+BsC,CAAC,CAACnB,IAAF,CAAOnB,CAAP,KAAasC,CAAC,CAACtC,CAAlD,EAAqD;EACjD,UAAI9G,CAAC,GAAGoJ,CAAC,CAACpJ,CAAF,GAAM,CAAC0L,EAAE,GAAGtC,CAAC,CAACtC,CAAR,KAAcsC,CAAC,CAACnB,IAAF,CAAOjI,CAAP,GAAWoJ,CAAC,CAACpJ,CAA3B,KAAiCoJ,CAAC,CAACnB,IAAF,CAAOnB,CAAP,GAAWsC,CAAC,CAACtC,CAA9C,CAAd;;EACA,UAAI9G,CAAC,IAAIyL,EAAL,IAAWzL,CAAC,GAAG2L,EAAnB,EAAuB;EACnBA,QAAAA,EAAE,GAAG3L,CAAL;;EACA,YAAIA,CAAC,KAAKyL,EAAV,EAAc;EACV,cAAIC,EAAE,KAAKtC,CAAC,CAACtC,CAAb,EAAgB,OAAOsC,CAAP;EAChB,cAAIsC,EAAE,KAAKtC,CAAC,CAACnB,IAAF,CAAOnB,CAAlB,EAAqB,OAAOsC,CAAC,CAACnB,IAAT;EACxB;;EACD4D,QAAAA,CAAC,GAAGzC,CAAC,CAACpJ,CAAF,GAAMoJ,CAAC,CAACnB,IAAF,CAAOjI,CAAb,GAAiBoJ,CAAjB,GAAqBA,CAAC,CAACnB,IAA3B;EACH;EACJ;;EACDmB,IAAAA,CAAC,GAAGA,CAAC,CAACnB,IAAN;EACH,GAbD,QAaSmB,CAAC,KAAKtB,SAbf;;EAeA,MAAI,CAAC+D,CAAL,EAAQ,OAAO,IAAP;EAER,MAAIJ,EAAE,KAAKE,EAAX,EAAe,OAAOE,CAAP,CA1BsB;;;;;EAgCrC,MAAIlC,IAAI,GAAGkC,CAAX;EAAA,MACIC,EAAE,GAAGD,CAAC,CAAC7L,CADX;EAAA,MAEI+L,EAAE,GAAGF,CAAC,CAAC/E,CAFX;EAAA,MAGIkF,MAAM,GAAGJ,QAHb;EAAA,MAIIK,GAJJ;EAMA7C,EAAAA,CAAC,GAAGyC,CAAJ;;EAEA,KAAG;EACC,QAAIJ,EAAE,IAAIrC,CAAC,CAACpJ,CAAR,IAAaoJ,CAAC,CAACpJ,CAAF,IAAO8L,EAApB,IAA0BL,EAAE,KAAKrC,CAAC,CAACpJ,CAAnC,IACIkK,eAAe,CAACwB,EAAE,GAAGK,EAAL,GAAUN,EAAV,GAAeE,EAAhB,EAAoBD,EAApB,EAAwBI,EAAxB,EAA4BC,EAA5B,EAAgCL,EAAE,GAAGK,EAAL,GAAUJ,EAAV,GAAeF,EAA/C,EAAmDC,EAAnD,EAAuDtC,CAAC,CAACpJ,CAAzD,EAA4DoJ,CAAC,CAACtC,CAA9D,CADvB,EACyF;EAErFmF,MAAAA,GAAG,GAAG9F,IAAI,CAAC+F,GAAL,CAASR,EAAE,GAAGtC,CAAC,CAACtC,CAAhB,KAAsB2E,EAAE,GAAGrC,CAAC,CAACpJ,CAA7B,CAAN,CAFqF;;EAIrF,UAAI8K,aAAa,CAAC1B,CAAD,EAAImC,IAAJ,CAAb,KACCU,GAAG,GAAGD,MAAN,IAAiBC,GAAG,KAAKD,MAAR,KAAmB5C,CAAC,CAACpJ,CAAF,GAAM6L,CAAC,CAAC7L,CAAR,IAAcoJ,CAAC,CAACpJ,CAAF,KAAQ6L,CAAC,CAAC7L,CAAV,IAAemM,oBAAoB,CAACN,CAAD,EAAIzC,CAAJ,CAApE,CADlB,CAAJ,EACsG;EAClGyC,QAAAA,CAAC,GAAGzC,CAAJ;EACA4C,QAAAA,MAAM,GAAGC,GAAT;EACH;EACJ;;EAED7C,IAAAA,CAAC,GAAGA,CAAC,CAACnB,IAAN;EACH,GAdD,QAcSmB,CAAC,KAAKO,IAdf;;EAgBA,SAAOkC,CAAP;EACH;;;EAGD,SAASM,oBAAT,CAA8BN,CAA9B,EAAiCzC,CAAjC,EAAoC;EAChC,SAAOG,IAAI,CAACsC,CAAC,CAAC3D,IAAH,EAAS2D,CAAT,EAAYzC,CAAC,CAAClB,IAAd,CAAJ,GAA0B,CAA1B,IAA+BqB,IAAI,CAACH,CAAC,CAACnB,IAAH,EAAS4D,CAAT,EAAYA,CAAC,CAAC5D,IAAd,CAAJ,GAA0B,CAAhE;EACH;;;EAGD,SAASyB,UAAT,CAAoBf,KAApB,EAA2BR,IAA3B,EAAiCC,IAAjC,EAAuCG,OAAvC,EAAgD;EAC5C,MAAIa,CAAC,GAAGT,KAAR;;EACA,KAAG;EACC,QAAIS,CAAC,CAACtJ,CAAF,KAAQ,IAAZ,EAAkBsJ,CAAC,CAACtJ,CAAF,GAAM0K,MAAM,CAACpB,CAAC,CAACpJ,CAAH,EAAMoJ,CAAC,CAACtC,CAAR,EAAWqB,IAAX,EAAiBC,IAAjB,EAAuBG,OAAvB,CAAZ;EAClBa,IAAAA,CAAC,CAACsB,KAAF,GAAUtB,CAAC,CAAClB,IAAZ;EACAkB,IAAAA,CAAC,CAACwB,KAAF,GAAUxB,CAAC,CAACnB,IAAZ;EACAmB,IAAAA,CAAC,GAAGA,CAAC,CAACnB,IAAN;EACH,GALD,QAKSmB,CAAC,KAAKT,KALf;;EAOAS,EAAAA,CAAC,CAACsB,KAAF,CAAQE,KAAR,GAAgB,IAAhB;EACAxB,EAAAA,CAAC,CAACsB,KAAF,GAAU,IAAV;EAEA0B,EAAAA,UAAU,CAAChD,CAAD,CAAV;EACH;;;;EAID,SAASgD,UAAT,CAAoBlB,IAApB,EAA0B;EACtB,MAAIjH,CAAJ;EAAA,MAAOmF,CAAP;EAAA,MAAUiD,CAAV;EAAA,MAAaC,CAAb;EAAA,MAAgBC,IAAhB;EAAA,MAAsBC,SAAtB;EAAA,MAAiCC,KAAjC;EAAA,MAAwCC,KAAxC;EAAA,MACIC,MAAM,GAAG,CADb;;EAGA,KAAG;EACCvD,IAAAA,CAAC,GAAG8B,IAAJ;EACAA,IAAAA,IAAI,GAAG,IAAP;EACAqB,IAAAA,IAAI,GAAG,IAAP;EACAC,IAAAA,SAAS,GAAG,CAAZ;;EAEA,WAAOpD,CAAP,EAAU;EACNoD,MAAAA,SAAS;EACTH,MAAAA,CAAC,GAAGjD,CAAJ;EACAqD,MAAAA,KAAK,GAAG,CAAR;;EACA,WAAKxI,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG0I,MAAhB,EAAwB1I,CAAC,EAAzB,EAA6B;EACzBwI,QAAAA,KAAK;EACLJ,QAAAA,CAAC,GAAGA,CAAC,CAACzB,KAAN;EACA,YAAI,CAACyB,CAAL,EAAQ;EACX;;EACDK,MAAAA,KAAK,GAAGC,MAAR;;EAEA,aAAOF,KAAK,GAAG,CAAR,IAAcC,KAAK,GAAG,CAAR,IAAaL,CAAlC,EAAsC;EAElC,YAAII,KAAK,KAAK,CAAV,KAAgBC,KAAK,KAAK,CAAV,IAAe,CAACL,CAAhB,IAAqBjD,CAAC,CAACtJ,CAAF,IAAOuM,CAAC,CAACvM,CAA9C,CAAJ,EAAsD;EAClDwM,UAAAA,CAAC,GAAGlD,CAAJ;EACAA,UAAAA,CAAC,GAAGA,CAAC,CAACwB,KAAN;EACA6B,UAAAA,KAAK;EACR,SAJD,MAIO;EACHH,UAAAA,CAAC,GAAGD,CAAJ;EACAA,UAAAA,CAAC,GAAGA,CAAC,CAACzB,KAAN;EACA8B,UAAAA,KAAK;EACR;;EAED,YAAIH,IAAJ,EAAUA,IAAI,CAAC3B,KAAL,GAAa0B,CAAb,CAAV,KACKpB,IAAI,GAAGoB,CAAP;EAELA,QAAAA,CAAC,CAAC5B,KAAF,GAAU6B,IAAV;EACAA,QAAAA,IAAI,GAAGD,CAAP;EACH;;EAEDlD,MAAAA,CAAC,GAAGiD,CAAJ;EACH;;EAEDE,IAAAA,IAAI,CAAC3B,KAAL,GAAa,IAAb;EACA+B,IAAAA,MAAM,IAAI,CAAV;EAEH,GA1CD,QA0CSH,SAAS,GAAG,CA1CrB;;EA4CA,SAAOtB,IAAP;EACH;;;EAGD,SAASV,MAAT,CAAgBxK,CAAhB,EAAmB8G,CAAnB,EAAsBqB,IAAtB,EAA4BC,IAA5B,EAAkCG,OAAlC,EAA2C;;EAEvCvI,EAAAA,CAAC,GAAG,SAASA,CAAC,GAAGmI,IAAb,IAAqBI,OAAzB;EACAzB,EAAAA,CAAC,GAAG,SAASA,CAAC,GAAGsB,IAAb,IAAqBG,OAAzB;EAEAvI,EAAAA,CAAC,GAAG,CAACA,CAAC,GAAIA,CAAC,IAAI,CAAX,IAAiB,UAArB;EACAA,EAAAA,CAAC,GAAG,CAACA,CAAC,GAAIA,CAAC,IAAI,CAAX,IAAiB,UAArB;EACAA,EAAAA,CAAC,GAAG,CAACA,CAAC,GAAIA,CAAC,IAAI,CAAX,IAAiB,UAArB;EACAA,EAAAA,CAAC,GAAG,CAACA,CAAC,GAAIA,CAAC,IAAI,CAAX,IAAiB,UAArB;EAEA8G,EAAAA,CAAC,GAAG,CAACA,CAAC,GAAIA,CAAC,IAAI,CAAX,IAAiB,UAArB;EACAA,EAAAA,CAAC,GAAG,CAACA,CAAC,GAAIA,CAAC,IAAI,CAAX,IAAiB,UAArB;EACAA,EAAAA,CAAC,GAAG,CAACA,CAAC,GAAIA,CAAC,IAAI,CAAX,IAAiB,UAArB;EACAA,EAAAA,CAAC,GAAG,CAACA,CAAC,GAAIA,CAAC,IAAI,CAAX,IAAiB,UAArB;EAEA,SAAO9G,CAAC,GAAI8G,CAAC,IAAI,CAAjB;EACH;;;EAGD,SAASqE,WAAT,CAAqBxC,KAArB,EAA4B;EACxB,MAAIS,CAAC,GAAGT,KAAR;EAAA,MACIiE,QAAQ,GAAGjE,KADf;;EAEA,KAAG;EACC,QAAIS,CAAC,CAACpJ,CAAF,GAAM4M,QAAQ,CAAC5M,CAAf,IAAqBoJ,CAAC,CAACpJ,CAAF,KAAQ4M,QAAQ,CAAC5M,CAAjB,IAAsBoJ,CAAC,CAACtC,CAAF,GAAM8F,QAAQ,CAAC9F,CAA9D,EAAkE8F,QAAQ,GAAGxD,CAAX;EAClEA,IAAAA,CAAC,GAAGA,CAAC,CAACnB,IAAN;EACH,GAHD,QAGSmB,CAAC,KAAKT,KAHf;;EAKA,SAAOiE,QAAP;EACH;;;EAGD,SAAS1C,eAAT,CAAyB2C,EAAzB,EAA6BC,EAA7B,EAAiCC,EAAjC,EAAqCC,EAArC,EAAyCC,EAAzC,EAA6CC,EAA7C,EAAiDC,EAAjD,EAAqDC,EAArD,EAAyD;EACrD,SAAO,CAACH,EAAE,GAAGE,EAAN,KAAaL,EAAE,GAAGM,EAAlB,IAAwB,CAACP,EAAE,GAAGM,EAAN,KAAaD,EAAE,GAAGE,EAAlB,CAAxB,IAAiD,CAAjD,IACA,CAACP,EAAE,GAAGM,EAAN,KAAaH,EAAE,GAAGI,EAAlB,IAAwB,CAACL,EAAE,GAAGI,EAAN,KAAaL,EAAE,GAAGM,EAAlB,CAAxB,IAAiD,CADjD,IAEA,CAACL,EAAE,GAAGI,EAAN,KAAaD,EAAE,GAAGE,EAAlB,IAAwB,CAACH,EAAE,GAAGE,EAAN,KAAaH,EAAE,GAAGI,EAAlB,CAAxB,IAAiD,CAFxD;EAGH;;;EAGD,SAASrC,eAAT,CAAyBf,CAAzB,EAA4BhD,CAA5B,EAA+B;EAC3B,SAAOgD,CAAC,CAAC/B,IAAF,CAAOhE,CAAP,KAAa+C,CAAC,CAAC/C,CAAf,IAAoB+F,CAAC,CAAC9B,IAAF,CAAOjE,CAAP,KAAa+C,CAAC,CAAC/C,CAAnC,IAAwC,CAACoJ,iBAAiB,CAACrD,CAAD,EAAIhD,CAAJ,CAA1D;EACC8D,EAAAA,aAAa,CAACd,CAAD,EAAIhD,CAAJ,CAAb,IAAuB8D,aAAa,CAAC9D,CAAD,EAAIgD,CAAJ,CAApC,IAA8CsD,YAAY,CAACtD,CAAD,EAAIhD,CAAJ,CAA1D;EACCuC,EAAAA,IAAI,CAACS,CAAC,CAAC9B,IAAH,EAAS8B,CAAT,EAAYhD,CAAC,CAACkB,IAAd,CAAJ,IAA2BqB,IAAI,CAACS,CAAD,EAAIhD,CAAC,CAACkB,IAAN,EAAYlB,CAAZ,CADhC;EAEAiC,EAAAA,MAAM,CAACe,CAAD,EAAIhD,CAAJ,CAAN,IAAgBuC,IAAI,CAACS,CAAC,CAAC9B,IAAH,EAAS8B,CAAT,EAAYA,CAAC,CAAC/B,IAAd,CAAJ,GAA0B,CAA1C,IAA+CsB,IAAI,CAACvC,CAAC,CAACkB,IAAH,EAASlB,CAAT,EAAYA,CAAC,CAACiB,IAAd,CAAJ,GAA0B,CAH1E,CAAP,CAD2B;EAK9B;;;EAGD,SAASsB,IAAT,CAAcH,CAAd,EAAiBiD,CAAjB,EAAoBtF,CAApB,EAAuB;EACnB,SAAO,CAACsF,CAAC,CAACvF,CAAF,GAAMsC,CAAC,CAACtC,CAAT,KAAeC,CAAC,CAAC/G,CAAF,GAAMqM,CAAC,CAACrM,CAAvB,IAA4B,CAACqM,CAAC,CAACrM,CAAF,GAAMoJ,CAAC,CAACpJ,CAAT,KAAe+G,CAAC,CAACD,CAAF,GAAMuF,CAAC,CAACvF,CAAvB,CAAnC;EACH;;;EAGD,SAASmC,MAAT,CAAgBsE,EAAhB,EAAoBC,EAApB,EAAwB;EACpB,SAAOD,EAAE,CAACvN,CAAH,KAASwN,EAAE,CAACxN,CAAZ,IAAiBuN,EAAE,CAACzG,CAAH,KAAS0G,EAAE,CAAC1G,CAApC;EACH;;;EAGD,SAAS+D,UAAT,CAAoB0C,EAApB,EAAwBE,EAAxB,EAA4BD,EAA5B,EAAgCE,EAAhC,EAAoC;EAChC,MAAIC,EAAE,GAAGC,IAAI,CAACrE,IAAI,CAACgE,EAAD,EAAKE,EAAL,EAASD,EAAT,CAAL,CAAb;EACA,MAAIK,EAAE,GAAGD,IAAI,CAACrE,IAAI,CAACgE,EAAD,EAAKE,EAAL,EAASC,EAAT,CAAL,CAAb;EACA,MAAII,EAAE,GAAGF,IAAI,CAACrE,IAAI,CAACiE,EAAD,EAAKE,EAAL,EAASH,EAAT,CAAL,CAAb;EACA,MAAIQ,EAAE,GAAGH,IAAI,CAACrE,IAAI,CAACiE,EAAD,EAAKE,EAAL,EAASD,EAAT,CAAL,CAAb;EAEA,MAAIE,EAAE,KAAKE,EAAP,IAAaC,EAAE,KAAKC,EAAxB,EAA4B,OAAO,IAAP,CANI;;EAQhC,MAAIJ,EAAE,KAAK,CAAP,IAAYK,SAAS,CAACT,EAAD,EAAKC,EAAL,EAASC,EAAT,CAAzB,EAAuC,OAAO,IAAP,CARP;;EAShC,MAAII,EAAE,KAAK,CAAP,IAAYG,SAAS,CAACT,EAAD,EAAKG,EAAL,EAASD,EAAT,CAAzB,EAAuC,OAAO,IAAP,CATP;;EAUhC,MAAIK,EAAE,KAAK,CAAP,IAAYE,SAAS,CAACR,EAAD,EAAKD,EAAL,EAASG,EAAT,CAAzB,EAAuC,OAAO,IAAP,CAVP;;EAWhC,MAAIK,EAAE,KAAK,CAAP,IAAYC,SAAS,CAACR,EAAD,EAAKC,EAAL,EAASC,EAAT,CAAzB,EAAuC,OAAO,IAAP,CAXP;;EAahC,SAAO,KAAP;EACH;;;EAGD,SAASM,SAAT,CAAmB5E,CAAnB,EAAsBiD,CAAtB,EAAyBtF,CAAzB,EAA4B;EACxB,SAAOsF,CAAC,CAACrM,CAAF,IAAOmG,IAAI,CAACsC,GAAL,CAASW,CAAC,CAACpJ,CAAX,EAAc+G,CAAC,CAAC/G,CAAhB,CAAP,IAA6BqM,CAAC,CAACrM,CAAF,IAAOmG,IAAI,CAAC8H,GAAL,CAAS7E,CAAC,CAACpJ,CAAX,EAAc+G,CAAC,CAAC/G,CAAhB,CAApC,IAA0DqM,CAAC,CAACvF,CAAF,IAAOX,IAAI,CAACsC,GAAL,CAASW,CAAC,CAACtC,CAAX,EAAcC,CAAC,CAACD,CAAhB,CAAjE,IAAuFuF,CAAC,CAACvF,CAAF,IAAOX,IAAI,CAAC8H,GAAL,CAAS7E,CAAC,CAACtC,CAAX,EAAcC,CAAC,CAACD,CAAhB,CAArG;EACH;;EAED,SAAS8G,IAAT,CAAcM,GAAd,EAAmB;EACf,SAAOA,GAAG,GAAG,CAAN,GAAU,CAAV,GAAcA,GAAG,GAAG,CAAN,GAAU,CAAC,CAAX,GAAe,CAApC;EACH;;;EAGD,SAASb,iBAAT,CAA2BrD,CAA3B,EAA8BhD,CAA9B,EAAiC;EAC7B,MAAIoC,CAAC,GAAGY,CAAR;;EACA,KAAG;EACC,QAAIZ,CAAC,CAACnF,CAAF,KAAQ+F,CAAC,CAAC/F,CAAV,IAAemF,CAAC,CAACnB,IAAF,CAAOhE,CAAP,KAAa+F,CAAC,CAAC/F,CAA9B,IAAmCmF,CAAC,CAACnF,CAAF,KAAQ+C,CAAC,CAAC/C,CAA7C,IAAkDmF,CAAC,CAACnB,IAAF,CAAOhE,CAAP,KAAa+C,CAAC,CAAC/C,CAAjE,IACI4G,UAAU,CAACzB,CAAD,EAAIA,CAAC,CAACnB,IAAN,EAAY+B,CAAZ,EAAehD,CAAf,CADlB,EACqC,OAAO,IAAP;EACrCoC,IAAAA,CAAC,GAAGA,CAAC,CAACnB,IAAN;EACH,GAJD,QAISmB,CAAC,KAAKY,CAJf;;EAMA,SAAO,KAAP;EACH;;;EAGD,SAASc,aAAT,CAAuBd,CAAvB,EAA0BhD,CAA1B,EAA6B;EACzB,SAAOuC,IAAI,CAACS,CAAC,CAAC9B,IAAH,EAAS8B,CAAT,EAAYA,CAAC,CAAC/B,IAAd,CAAJ,GAA0B,CAA1B,GACHsB,IAAI,CAACS,CAAD,EAAIhD,CAAJ,EAAOgD,CAAC,CAAC/B,IAAT,CAAJ,IAAsB,CAAtB,IAA2BsB,IAAI,CAACS,CAAD,EAAIA,CAAC,CAAC9B,IAAN,EAAYlB,CAAZ,CAAJ,IAAsB,CAD9C,GAEHuC,IAAI,CAACS,CAAD,EAAIhD,CAAJ,EAAOgD,CAAC,CAAC9B,IAAT,CAAJ,GAAqB,CAArB,IAA0BqB,IAAI,CAACS,CAAD,EAAIA,CAAC,CAAC/B,IAAN,EAAYjB,CAAZ,CAAJ,GAAqB,CAFnD;EAGH;;;EAGD,SAASsG,YAAT,CAAsBtD,CAAtB,EAAyBhD,CAAzB,EAA4B;EACxB,MAAIoC,CAAC,GAAGY,CAAR;EAAA,MACImE,MAAM,GAAG,KADb;EAAA,MAEIhB,EAAE,GAAG,CAACnD,CAAC,CAAChK,CAAF,GAAMgH,CAAC,CAAChH,CAAT,IAAc,CAFvB;EAAA,MAGIoN,EAAE,GAAG,CAACpD,CAAC,CAAClD,CAAF,GAAME,CAAC,CAACF,CAAT,IAAc,CAHvB;;EAIA,KAAG;EACC,QAAMsC,CAAC,CAACtC,CAAF,GAAMsG,EAAP,KAAgBhE,CAAC,CAACnB,IAAF,CAAOnB,CAAP,GAAWsG,EAA5B,IAAoChE,CAAC,CAACnB,IAAF,CAAOnB,CAAP,KAAasC,CAAC,CAACtC,CAAnD,IACKqG,EAAE,GAAG,CAAC/D,CAAC,CAACnB,IAAF,CAAOjI,CAAP,GAAWoJ,CAAC,CAACpJ,CAAd,KAAoBoN,EAAE,GAAGhE,CAAC,CAACtC,CAA3B,KAAiCsC,CAAC,CAACnB,IAAF,CAAOnB,CAAP,GAAWsC,CAAC,CAACtC,CAA9C,IAAmDsC,CAAC,CAACpJ,CADnE,EAEImO,MAAM,GAAG,CAACA,MAAV;EACJ/E,IAAAA,CAAC,GAAGA,CAAC,CAACnB,IAAN;EACH,GALD,QAKSmB,CAAC,KAAKY,CALf;;EAOA,SAAOmE,MAAP;EACH;;;;EAID,SAASnD,YAAT,CAAsBhB,CAAtB,EAAyBhD,CAAzB,EAA4B;EACxB,MAAIoH,EAAE,GAAG,IAAIC,IAAJ,CAASrE,CAAC,CAAC/F,CAAX,EAAc+F,CAAC,CAAChK,CAAhB,EAAmBgK,CAAC,CAAClD,CAArB,CAAT;EAAA,MACIwH,EAAE,GAAG,IAAID,IAAJ,CAASrH,CAAC,CAAC/C,CAAX,EAAc+C,CAAC,CAAChH,CAAhB,EAAmBgH,CAAC,CAACF,CAArB,CADT;EAAA,MAEIyH,EAAE,GAAGvE,CAAC,CAAC/B,IAFX;EAAA,MAGIuG,EAAE,GAAGxH,CAAC,CAACkB,IAHX;EAKA8B,EAAAA,CAAC,CAAC/B,IAAF,GAASjB,CAAT;EACAA,EAAAA,CAAC,CAACkB,IAAF,GAAS8B,CAAT;EAEAoE,EAAAA,EAAE,CAACnG,IAAH,GAAUsG,EAAV;EACAA,EAAAA,EAAE,CAACrG,IAAH,GAAUkG,EAAV;EAEAE,EAAAA,EAAE,CAACrG,IAAH,GAAUmG,EAAV;EACAA,EAAAA,EAAE,CAAClG,IAAH,GAAUoG,EAAV;EAEAE,EAAAA,EAAE,CAACvG,IAAH,GAAUqG,EAAV;EACAA,EAAAA,EAAE,CAACpG,IAAH,GAAUsG,EAAV;EAEA,SAAOF,EAAP;EACH;;;EAGD,SAAStF,UAAT,CAAoB/E,CAApB,EAAuBjE,CAAvB,EAA0B8G,CAA1B,EAA6BgC,IAA7B,EAAmC;EAC/B,MAAIM,CAAC,GAAG,IAAIiF,IAAJ,CAASpK,CAAT,EAAYjE,CAAZ,EAAe8G,CAAf,CAAR;;EAEA,MAAI,CAACgC,IAAL,EAAW;EACPM,IAAAA,CAAC,CAAClB,IAAF,GAASkB,CAAT;EACAA,IAAAA,CAAC,CAACnB,IAAF,GAASmB,CAAT;EAEH,GAJD,MAIO;EACHA,IAAAA,CAAC,CAACnB,IAAF,GAASa,IAAI,CAACb,IAAd;EACAmB,IAAAA,CAAC,CAAClB,IAAF,GAASY,IAAT;EACAA,IAAAA,IAAI,CAACb,IAAL,CAAUC,IAAV,GAAiBkB,CAAjB;EACAN,IAAAA,IAAI,CAACb,IAAL,GAAYmB,CAAZ;EACH;;EACD,SAAOA,CAAP;EACH;;EAED,SAASF,UAAT,CAAoBE,CAApB,EAAuB;EACnBA,EAAAA,CAAC,CAACnB,IAAF,CAAOC,IAAP,GAAckB,CAAC,CAAClB,IAAhB;EACAkB,EAAAA,CAAC,CAAClB,IAAF,CAAOD,IAAP,GAAcmB,CAAC,CAACnB,IAAhB;EAEA,MAAImB,CAAC,CAACsB,KAAN,EAAatB,CAAC,CAACsB,KAAF,CAAQE,KAAR,GAAgBxB,CAAC,CAACwB,KAAlB;EACb,MAAIxB,CAAC,CAACwB,KAAN,EAAaxB,CAAC,CAACwB,KAAF,CAAQF,KAAR,GAAgBtB,CAAC,CAACsB,KAAlB;EAChB;;EAED,SAAS2D,IAAT,CAAcpK,CAAd,EAAiBjE,CAAjB,EAAoB8G,CAApB,EAAuB;;EAEnB,OAAK7C,CAAL,GAASA,CAAT,CAFmB;;EAKnB,OAAKjE,CAAL,GAASA,CAAT;EACA,OAAK8G,CAAL,GAASA,CAAT,CANmB;;EASnB,OAAKoB,IAAL,GAAY,IAAZ;EACA,OAAKD,IAAL,GAAY,IAAZ,CAVmB;;EAanB,OAAKnI,CAAL,GAAS,IAAT,CAbmB;;EAgBnB,OAAK4K,KAAL,GAAa,IAAb;EACA,OAAKE,KAAL,GAAa,IAAb,CAjBmB;;EAoBnB,OAAKtB,OAAL,GAAe,KAAf;EACH;;;;EAID9B,MAAM,CAACiH,SAAP,GAAmB,UAAUhH,IAAV,EAAgBC,WAAhB,EAA6BC,GAA7B,EAAkCK,SAAlC,EAA6C;EAC5D,MAAIJ,QAAQ,GAAGF,WAAW,IAAIA,WAAW,CAACxD,MAA1C;EACA,MAAI2D,QAAQ,GAAGD,QAAQ,GAAGF,WAAW,CAAC,CAAD,CAAX,GAAiBC,GAApB,GAA0BF,IAAI,CAACvD,MAAtD;EAEA,MAAIwK,WAAW,GAAGvI,IAAI,CAAC+F,GAAL,CAASnD,UAAU,CAACtB,IAAD,EAAO,CAAP,EAAUI,QAAV,EAAoBF,GAApB,CAAnB,CAAlB;;EACA,MAAIC,QAAJ,EAAc;EACV,SAAK,IAAI3D,CAAC,GAAG,CAAR,EAAWO,GAAG,GAAGkD,WAAW,CAACxD,MAAlC,EAA0CD,CAAC,GAAGO,GAA9C,EAAmDP,CAAC,EAApD,EAAwD;EACpD,UAAI0E,KAAK,GAAGjB,WAAW,CAACzD,CAAD,CAAX,GAAiB0D,GAA7B;EACA,UAAIiB,GAAG,GAAG3E,CAAC,GAAGO,GAAG,GAAG,CAAV,GAAckD,WAAW,CAACzD,CAAC,GAAG,CAAL,CAAX,GAAqB0D,GAAnC,GAAyCF,IAAI,CAACvD,MAAxD;EACAwK,MAAAA,WAAW,IAAIvI,IAAI,CAAC+F,GAAL,CAASnD,UAAU,CAACtB,IAAD,EAAOkB,KAAP,EAAcC,GAAd,EAAmBjB,GAAnB,CAAnB,CAAf;EACH;EACJ;;EAED,MAAIgH,aAAa,GAAG,CAApB;;EACA,OAAK1K,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG+D,SAAS,CAAC9D,MAA1B,EAAkCD,CAAC,IAAI,CAAvC,EAA0C;EACtC,QAAI+F,CAAC,GAAGhC,SAAS,CAAC/D,CAAD,CAAT,GAAe0D,GAAvB;EACA,QAAIX,CAAC,GAAGgB,SAAS,CAAC/D,CAAC,GAAG,CAAL,CAAT,GAAmB0D,GAA3B;EACA,QAAIsC,CAAC,GAAGjC,SAAS,CAAC/D,CAAC,GAAG,CAAL,CAAT,GAAmB0D,GAA3B;EACAgH,IAAAA,aAAa,IAAIxI,IAAI,CAAC+F,GAAL,CACb,CAACzE,IAAI,CAACuC,CAAD,CAAJ,GAAUvC,IAAI,CAACwC,CAAD,CAAf,KAAuBxC,IAAI,CAACT,CAAC,GAAG,CAAL,CAAJ,GAAcS,IAAI,CAACuC,CAAC,GAAG,CAAL,CAAzC,IACA,CAACvC,IAAI,CAACuC,CAAD,CAAJ,GAAUvC,IAAI,CAACT,CAAD,CAAf,KAAuBS,IAAI,CAACwC,CAAC,GAAG,CAAL,CAAJ,GAAcxC,IAAI,CAACuC,CAAC,GAAG,CAAL,CAAzC,CAFa,CAAjB;EAGH;;EAED,SAAO0E,WAAW,KAAK,CAAhB,IAAqBC,aAAa,KAAK,CAAvC,GAA2C,CAA3C,GACHxI,IAAI,CAAC+F,GAAL,CAAS,CAACyC,aAAa,GAAGD,WAAjB,IAAgCA,WAAzC,CADJ;EAEH,CAzBD;;EA2BA,SAAS3F,UAAT,CAAoBtB,IAApB,EAA0BkB,KAA1B,EAAiCC,GAAjC,EAAsCjB,GAAtC,EAA2C;EACvC,MAAIiH,GAAG,GAAG,CAAV;;EACA,OAAK,IAAI3K,CAAC,GAAG0E,KAAR,EAAejE,CAAC,GAAGkE,GAAG,GAAGjB,GAA9B,EAAmC1D,CAAC,GAAG2E,GAAvC,EAA4C3E,CAAC,IAAI0D,GAAjD,EAAsD;EAClDiH,IAAAA,GAAG,IAAI,CAACnH,IAAI,CAAC/C,CAAD,CAAJ,GAAU+C,IAAI,CAACxD,CAAD,CAAf,KAAuBwD,IAAI,CAACxD,CAAC,GAAG,CAAL,CAAJ,GAAcwD,IAAI,CAAC/C,CAAC,GAAG,CAAL,CAAzC,CAAP;EACAA,IAAAA,CAAC,GAAGT,CAAJ;EACH;;EACD,SAAO2K,GAAP;EACH;;;EAGDpH,MAAM,CAACqH,OAAP,GAAiB,UAAUpH,IAAV,EAAgB;EAC7B,MAAIE,GAAG,GAAGF,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,EAAWvD,MAArB;EAAA,MACI4K,MAAM,GAAG;EAACC,IAAAA,QAAQ,EAAE,EAAX;EAAeC,IAAAA,KAAK,EAAE,EAAtB;EAA0BC,IAAAA,UAAU,EAAEtH;EAAtC,GADb;EAAA,MAEIuH,SAAS,GAAG,CAFhB;;EAIA,OAAK,IAAIjL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwD,IAAI,CAACvD,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;EAClC,SAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+C,IAAI,CAACxD,CAAD,CAAJ,CAAQC,MAA5B,EAAoCQ,CAAC,EAArC,EAAyC;EACrC,WAAK,IAAIyK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGxH,GAApB,EAAyBwH,CAAC,EAA1B,EAA8BL,MAAM,CAACC,QAAP,CAAgB5K,IAAhB,CAAqBsD,IAAI,CAACxD,CAAD,CAAJ,CAAQS,CAAR,EAAWyK,CAAX,CAArB;EACjC;;EACD,QAAIlL,CAAC,GAAG,CAAR,EAAW;EACPiL,MAAAA,SAAS,IAAIzH,IAAI,CAACxD,CAAC,GAAG,CAAL,CAAJ,CAAYC,MAAzB;EACA4K,MAAAA,MAAM,CAACE,KAAP,CAAa7K,IAAb,CAAkB+K,SAAlB;EACH;EACJ;;EACD,SAAOJ,MAAP;EACH,CAfD;;;ECppBA;;;;;EAMA;EACA;EAEA;EACA,SAASM,SAAT,CAAmB7B,EAAnB,EAAuBC,EAAvB,EAA2B;EAEvB,MAAI6B,EAAE,GAAG9B,EAAE,CAAC,CAAD,CAAF,GAAQC,EAAE,CAAC,CAAD,CAAnB;EAAA,MACI8B,EAAE,GAAG/B,EAAE,CAAC,CAAD,CAAF,GAAQC,EAAE,CAAC,CAAD,CADnB;EAGA,SAAO6B,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAtB;EACH;;;EAGD,SAASC,YAAT,CAAsBnG,CAAtB,EAAyBmE,EAAzB,EAA6BC,EAA7B,EAAiC;EAE7B,MAAIxN,CAAC,GAAGuN,EAAE,CAAC,CAAD,CAAV;EAAA,MACIzG,CAAC,GAAGyG,EAAE,CAAC,CAAD,CADV;EAAA,MAEI8B,EAAE,GAAG7B,EAAE,CAAC,CAAD,CAAF,GAAQxN,CAFjB;EAAA,MAGIsP,EAAE,GAAG9B,EAAE,CAAC,CAAD,CAAF,GAAQ1G,CAHjB;;EAKA,MAAIuI,EAAE,KAAK,CAAP,IAAYC,EAAE,KAAK,CAAvB,EAA0B;EAEtB,QAAIE,CAAC,GAAG,CAAC,CAACpG,CAAC,CAAC,CAAD,CAAD,GAAOpJ,CAAR,IAAaqP,EAAb,GAAkB,CAACjG,CAAC,CAAC,CAAD,CAAD,GAAOtC,CAAR,IAAawI,EAAhC,KAAuCD,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAtD,CAAR;;EAEA,QAAIE,CAAC,GAAG,CAAR,EAAW;EACPxP,MAAAA,CAAC,GAAGwN,EAAE,CAAC,CAAD,CAAN;EACA1G,MAAAA,CAAC,GAAG0G,EAAE,CAAC,CAAD,CAAN;EAEH,KAJD,MAIO,IAAIgC,CAAC,GAAG,CAAR,EAAW;EACdxP,MAAAA,CAAC,IAAIqP,EAAE,GAAGG,CAAV;EACA1I,MAAAA,CAAC,IAAIwI,EAAE,GAAGE,CAAV;EACH;EACJ;;EAEDH,EAAAA,EAAE,GAAGjG,CAAC,CAAC,CAAD,CAAD,GAAOpJ,CAAZ;EACAsP,EAAAA,EAAE,GAAGlG,CAAC,CAAC,CAAD,CAAD,GAAOtC,CAAZ;EAEA,SAAOuI,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAtB;EACH;EAGD;;;EACA,SAASG,kBAAT,CAA4BC,MAA5B,EAAoCC,WAApC,EAAiD;EAE7C,MAAIC,SAAS,GAAGF,MAAM,CAAC,CAAD,CAAtB;EAAA,MACIG,SAAS,GAAG,CAACD,SAAD,CADhB;EAAA,MAEIE,KAFJ;;EAIA,OAAK,IAAI7L,CAAC,GAAG,CAAR,EAAWO,GAAG,GAAGkL,MAAM,CAACxL,MAA7B,EAAqCD,CAAC,GAAGO,GAAzC,EAA8CP,CAAC,EAA/C,EAAmD;EAC/C6L,IAAAA,KAAK,GAAGJ,MAAM,CAACzL,CAAD,CAAd;;EAEA,QAAImL,SAAS,CAACU,KAAD,EAAQF,SAAR,CAAT,GAA8BD,WAAlC,EAA+C;EAC3CE,MAAAA,SAAS,CAAC1L,IAAV,CAAe2L,KAAf;EACAF,MAAAA,SAAS,GAAGE,KAAZ;EACH;EACJ;;EAED,MAAIF,SAAS,KAAKE,KAAlB,EAAyBD,SAAS,CAAC1L,IAAV,CAAe2L,KAAf;EAEzB,SAAOD,SAAP;EACH;;EAED,SAASE,cAAT,CAAwBL,MAAxB,EAAgCM,KAAhC,EAAuClH,IAAvC,EAA6C6G,WAA7C,EAA0DM,UAA1D,EAAsE;EAClE,MAAIC,SAAS,GAAGP,WAAhB;EAAA,MACIlL,KADJ;;EAGA,OAAK,IAAIR,CAAC,GAAG+L,KAAK,GAAG,CAArB,EAAwB/L,CAAC,GAAG6E,IAA5B,EAAkC7E,CAAC,EAAnC,EAAuC;EACnC,QAAIkM,MAAM,GAAGZ,YAAY,CAACG,MAAM,CAACzL,CAAD,CAAP,EAAYyL,MAAM,CAACM,KAAD,CAAlB,EAA2BN,MAAM,CAAC5G,IAAD,CAAjC,CAAzB;;EAEA,QAAIqH,MAAM,GAAGD,SAAb,EAAwB;EACpBzL,MAAAA,KAAK,GAAGR,CAAR;EACAiM,MAAAA,SAAS,GAAGC,MAAZ;EACH;EACJ;;EAED,MAAID,SAAS,GAAGP,WAAhB,EAA6B;EACzB,QAAIlL,KAAK,GAAGuL,KAAR,GAAgB,CAApB,EAAuBD,cAAc,CAACL,MAAD,EAASM,KAAT,EAAgBvL,KAAhB,EAAuBkL,WAAvB,EAAoCM,UAApC,CAAd;EACvBA,IAAAA,UAAU,CAAC9L,IAAX,CAAgBuL,MAAM,CAACjL,KAAD,CAAtB;EACA,QAAIqE,IAAI,GAAGrE,KAAP,GAAe,CAAnB,EAAsBsL,cAAc,CAACL,MAAD,EAASjL,KAAT,EAAgBqE,IAAhB,EAAsB6G,WAAtB,EAAmCM,UAAnC,CAAd;EACzB;EACJ;;;EAGD,SAASG,sBAAT,CAAgCV,MAAhC,EAAwCC,WAAxC,EAAqD;EACjD,MAAI7G,IAAI,GAAG4G,MAAM,CAACxL,MAAP,GAAgB,CAA3B;EAEA,MAAI+L,UAAU,GAAG,CAACP,MAAM,CAAC,CAAD,CAAP,CAAjB;EACAK,EAAAA,cAAc,CAACL,MAAD,EAAS,CAAT,EAAY5G,IAAZ,EAAkB6G,WAAlB,EAA+BM,UAA/B,CAAd;EACAA,EAAAA,UAAU,CAAC9L,IAAX,CAAgBuL,MAAM,CAAC5G,IAAD,CAAtB;EAEA,SAAOmH,UAAP;EACH;;;EAGD,SAASI,QAAT,CAAkBX,MAAlB,EAA0BY,SAA1B,EAAqCC,cAArC,EAAqD;EAEjD,MAAIb,MAAM,CAACxL,MAAP,IAAiB,CAArB,EAAwB,OAAOwL,MAAP;EAExB,MAAIC,WAAW,GAAGW,SAAS,KAAK3S,SAAd,GAA0B2S,SAAS,GAAGA,SAAtC,GAAkD,CAApE;EAEAZ,EAAAA,MAAM,GAAGa,cAAc,GAAGb,MAAH,GAAYD,kBAAkB,CAACC,MAAD,EAASC,WAAT,CAArD;EACAD,EAAAA,MAAM,GAAGU,sBAAsB,CAACV,MAAD,EAASC,WAAT,CAA/B;EAEA,SAAOD,MAAP;EACH;;EC9GM,SAASc,GAAT,CAAaC,EAAb,EAAiBC,EAAjB,EAAqB;EACxB,SAAOD,EAAE,CAAC,CAAD,CAAF,GAAQC,EAAE,CAAC,CAAD,CAAV,GAAgBD,EAAE,CAAC,CAAD,CAAF,GAAQC,EAAE,CAAC,CAAD,CAA1B,GAAgCD,EAAE,CAAC,CAAD,CAAF,GAAQC,EAAE,CAAC,CAAD,CAAjD;EACH;AACD,EAAO,SAASC,KAAT,CAAeF,EAAf,EAAmBC,EAAnB,EAAuB;EAC1B,SAAOD,EAAE,CAAC,CAAD,CAAF,GAAQC,EAAE,CAAC,CAAD,CAAV,GAAgBD,EAAE,CAAC,CAAD,CAAF,GAAQC,EAAE,CAAC,CAAD,CAAjC;EACH;AAED,EAAO,SAASE,SAAT,CAAmBC,GAAnB,EAAwBnK,CAAxB,EAA2B;EAC9B,MAAM1G,CAAC,GAAG0G,CAAC,CAAC,CAAD,CAAX;EACA,MAAMI,CAAC,GAAGJ,CAAC,CAAC,CAAD,CAAX;EACA,MAAM5G,CAAC,GAAG4G,CAAC,CAAC,CAAD,CAAX;EACA,MAAMyI,CAAC,GAAGhJ,IAAI,CAAC2K,IAAL,CAAU9Q,CAAC,GAAGA,CAAJ,GAAQ8G,CAAC,GAAGA,CAAZ,GAAgBhH,CAAC,GAAGA,CAA9B,CAAV;EACA+Q,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS7Q,CAAC,GAAGmP,CAAb;EACA0B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS/J,CAAC,GAAGqI,CAAb;EACA0B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS/Q,CAAC,GAAGqP,CAAb;EACA,SAAO0B,GAAP;EACH;AAED,EAAO,SAASE,WAAT,CAAqBF,GAArB,EAA0BnK,CAA1B,EAA6B;EAChC,MAAM1G,CAAC,GAAG0G,CAAC,CAAC,CAAD,CAAX;EACA,MAAMI,CAAC,GAAGJ,CAAC,CAAC,CAAD,CAAX;EACA,MAAMyI,CAAC,GAAGhJ,IAAI,CAAC2K,IAAL,CAAU9Q,CAAC,GAAGA,CAAJ,GAAQ8G,CAAC,GAAGA,CAAtB,CAAV;EACA+J,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS7Q,CAAC,GAAGmP,CAAb;EACA0B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS/J,CAAC,GAAGqI,CAAb;EACA,SAAO0B,GAAP;EACH;AAED,EAAO,SAAS1O,KAAT,CAAe0O,GAAf,EAAoBnK,CAApB,EAAuBsK,CAAvB,EAA0B;EAC7BH,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASnK,CAAC,CAAC,CAAD,CAAD,GAAOsK,CAAhB;EACAH,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASnK,CAAC,CAAC,CAAD,CAAD,GAAOsK,CAAhB;EACAH,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASnK,CAAC,CAAC,CAAD,CAAD,GAAOsK,CAAhB;EACA,SAAOH,GAAP;EACH;AAED,EAOO,SAASI,WAAT,CAAqBJ,GAArB,EAA0BJ,EAA1B,EAA8BC,EAA9B,EAAkCM,CAAlC,EAAqC;EACxCH,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASJ,EAAE,CAAC,CAAD,CAAF,GAAQC,EAAE,CAAC,CAAD,CAAF,GAAQM,CAAzB;EACAH,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASJ,EAAE,CAAC,CAAD,CAAF,GAAQC,EAAE,CAAC,CAAD,CAAF,GAAQM,CAAzB;EACAH,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASJ,EAAE,CAAC,CAAD,CAAF,GAAQC,EAAE,CAAC,CAAD,CAAF,GAAQM,CAAzB;EACA,SAAOH,GAAP;EACH;AAED,EAOO,SAASK,KAAT,CAAeL,GAAf,EAAoBJ,EAApB,EAAwBC,EAAxB,EAA4B;EAC/BG,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASJ,EAAE,CAAC,CAAD,CAAF,GAAQC,EAAE,CAAC,CAAD,CAAnB;EACAG,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASJ,EAAE,CAAC,CAAD,CAAF,GAAQC,EAAE,CAAC,CAAD,CAAnB;EACA,SAAOG,GAAP;EACH;AAED,EAaO,SAASM,KAAT,CAAeN,GAAf,EAAoBJ,EAApB,EAAwBC,EAAxB,EAA4B;EAC/BG,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASJ,EAAE,CAAC,CAAD,CAAF,GAAQC,EAAE,CAAC,CAAD,CAAnB;EACAG,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASJ,EAAE,CAAC,CAAD,CAAF,GAAQC,EAAE,CAAC,CAAD,CAAnB;EACAG,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASJ,EAAE,CAAC,CAAD,CAAF,GAAQC,EAAE,CAAC,CAAD,CAAnB;EACA,SAAOG,GAAP;EACH;AAED,EAAO,SAASO,WAAT,CAAqBP,GAArB,EAA0BnK,CAA1B,EAA6B;EAChC,MAAM1G,CAAC,GAAG0G,CAAC,CAAC,CAAD,CAAX;EACA,MAAMI,CAAC,GAAGJ,CAAC,CAAC,CAAD,CAAX;EACA,MAAM5G,CAAC,GAAG4G,CAAC,CAAC,CAAD,CAAX;EACA,MAAMyI,CAAC,GAAGhJ,IAAI,CAAC2K,IAAL,CAAU9Q,CAAC,GAAGA,CAAJ,GAAQ8G,CAAC,GAAGA,CAAZ,GAAgBhH,CAAC,GAAGA,CAA9B,CAAV;EACA+Q,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS7Q,CAAC,GAAGmP,CAAb;EACA0B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS/J,CAAC,GAAGqI,CAAb;EACA0B,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS/Q,CAAC,GAAGqP,CAAb;EACA,SAAO0B,GAAP;EACH;AAED,EAAO,SAASQ,OAAT,CAAiBR,GAAjB,EAAsBJ,EAAtB,EAA0BC,EAA1B,EAA8B;EACjC,MAAI7D,EAAE,GAAG4D,EAAE,CAAC,CAAD,CAAX;EAAA,MAAgB3D,EAAE,GAAG2D,EAAE,CAAC,CAAD,CAAvB;EAAA,MAA4Ba,EAAE,GAAGb,EAAE,CAAC,CAAD,CAAnC;EAAA,MACI1D,EAAE,GAAG2D,EAAE,CAAC,CAAD,CADX;EAAA,MACgB1D,EAAE,GAAG0D,EAAE,CAAC,CAAD,CADvB;EAAA,MAC4Ba,EAAE,GAAGb,EAAE,CAAC,CAAD,CADnC;EAGAG,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS/D,EAAE,GAAGyE,EAAL,GAAUD,EAAE,GAAGtE,EAAxB;EACA6D,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASS,EAAE,GAAGvE,EAAL,GAAUF,EAAE,GAAG0E,EAAxB;EACAV,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAShE,EAAE,GAAGG,EAAL,GAAUF,EAAE,GAAGC,EAAxB;EACA,SAAO8D,GAAP;EACH;EAED,IAAMW,GAAG,GAAG,EAAZ;;AAEA,EAAO,SAASC,KAAT,CAAeZ,GAAf,EAAoBlI,KAApB,EAA2BC,GAA3B,EAAgC4G,CAAhC,EAAmC;EACtC;EACA,MAAMkC,IAAI,GAAGlB,GAAG,CAAC7H,KAAD,EAAQC,GAAR,CAAhB;EACA,MAAM+I,KAAK,GAAGxL,IAAI,CAACyL,IAAL,CAAUF,IAAV,IAAkBlC,CAAhC;EAEAyB,EAAAA,WAAW,CAACO,GAAD,EAAM5I,GAAN,EAAWD,KAAX,EAAkB,CAAC+I,IAAnB,CAAX;EACAd,EAAAA,SAAS,CAACY,GAAD,EAAMA,GAAN,CAAT,CANsC;;EAQtCrP,EAAAA,KAAK,CAAC0O,GAAD,EAAMlI,KAAN,EAAaxC,IAAI,CAAC0L,GAAL,CAASF,KAAT,CAAb,CAAL;EACAV,EAAAA,WAAW,CAACJ,GAAD,EAAMA,GAAN,EAAWW,GAAX,EAAgBrL,IAAI,CAAC2L,GAAL,CAASH,KAAT,CAAhB,CAAX;EAEA,SAAOd,GAAP;EACH;AAED,EAkBO,SAAStH,MAAT,CAAcmG,MAAd,EAAsB/G,KAAtB,EAA6BC,GAA7B,EAAkC;EACrC;EACA,MAAM+B,CAAC,GAAG/B,GAAG,GAAGD,KAAhB;;EACA,MAAIgC,CAAC,GAAG,CAAR,EAAW;EACP,WAAO,CAAP;EACH;;EACD,MAAIpB,IAAI,GAAG,CAAX;;EACA,OAAK,IAAItF,CAAC,GAAG,CAAC2E,GAAG,GAAG,CAAP,IAAY,CAApB,EAAuBlE,CAAC,GAAGiE,KAAK,GAAG,CAAxC,EAA2CjE,CAAC,GAAGkE,GAAG,GAAG,CAArD,GAAyD;EACrD,QAAMmJ,EAAE,GAAGrC,MAAM,CAACzL,CAAD,CAAjB;EACA,QAAM+N,EAAE,GAAGtC,MAAM,CAACzL,CAAC,GAAG,CAAL,CAAjB;EACA,QAAMgO,EAAE,GAAGvC,MAAM,CAAChL,CAAD,CAAjB;EACA,QAAMwN,EAAE,GAAGxC,MAAM,CAAChL,CAAC,GAAG,CAAL,CAAjB;EACAT,IAAAA,CAAC,GAAGS,CAAJ;EACAA,IAAAA,CAAC,IAAI,CAAL;EACA6E,IAAAA,IAAI,IAAIwI,EAAE,GAAGG,EAAL,GAAUD,EAAE,GAAGD,EAAvB;EACH;;EAED,SAAOzI,IAAP;EACH;;EC1JD;AACA,EAUO,SAAS4I,WAAT,CAAqBpD,QAArB,EAA+BC,KAA/B,EAAsCC,UAAtC,EAAoD;EAAA,MAAdA,UAAc;EAAdA,IAAAA,UAAc,GAAH,CAAG;EAAA;;EACvD,SAAOzH,QAAM,CAACuH,QAAD,EAAWC,KAAX,EAAkBC,UAAlB,CAAb;EACH;AAAA,EAMD,IAAMwB,EAAE,GAAG,EAAX;EACA,IAAMC,EAAE,GAAG,EAAX;EACA,IAAMhK,CAAC,GAAG,EAAV;;EAEA,SAAS0L,kBAAT,CACIrD,QADJ,EACc8B,GADd,EACmBlI,KADnB,EAC0BC,GAD1B,EAC+ByJ,QAD/B,EACyC7M,MADzC,EACiD8M,UADjD,EAC6DC,KAD7D,EAEE;EACE,MAAMC,eAAe,GAAGF,UAAU,IAAI,IAAtC;EACA,MAAIG,MAAM,GAAGJ,QAAb;EACA,MAAIK,UAAU,GAAG,IAAjB;;EACA,MAAIF,eAAJ,EAAqB;EACjBE,IAAAA,UAAU,GAAG,IAAI5N,WAAJ,CAAgB8D,GAAG,GAAGD,KAAtB,CAAb;EACH;;EACD,OAAK,IAAI1E,CAAC,GAAG0E,KAAb,EAAoB1E,CAAC,GAAG2E,GAAxB,EAA6B3E,CAAC,EAA9B,EAAkC;EAC9B,QAAM0O,OAAO,GAAG1O,CAAC,KAAK2E,GAAG,GAAG,CAAZ,GAAgBD,KAAhB,GAAwB1E,CAAC,GAAG,CAA5C;EACA,QAAM2O,OAAO,GAAG3O,CAAC,KAAK0E,KAAN,GAAcC,GAAG,GAAG,CAApB,GAAwB3E,CAAC,GAAG,CAA5C;EACA,QAAMgO,EAAE,GAAGlD,QAAQ,CAAC6D,OAAO,GAAG,CAAX,CAAnB;EACA,QAAMV,EAAE,GAAGnD,QAAQ,CAAC6D,OAAO,GAAG,CAAV,GAAc,CAAf,CAAnB;EACA,QAAMC,EAAE,GAAG9D,QAAQ,CAAC9K,CAAC,GAAG,CAAL,CAAnB;EACA,QAAM6O,EAAE,GAAG/D,QAAQ,CAAC9K,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAnB;EACA,QAAM8O,EAAE,GAAGhE,QAAQ,CAAC4D,OAAO,GAAG,CAAX,CAAnB;EACA,QAAMK,EAAE,GAAGjE,QAAQ,CAAC4D,OAAO,GAAG,CAAV,GAAc,CAAf,CAAnB;EAEAlC,IAAAA,EAAE,CAAC,CAAD,CAAF,GAAQoC,EAAE,GAAGZ,EAAb;EACAxB,IAAAA,EAAE,CAAC,CAAD,CAAF,GAAQqC,EAAE,GAAGZ,EAAb;EACAxB,IAAAA,EAAE,CAAC,CAAD,CAAF,GAAQqC,EAAE,GAAGF,EAAb;EACAnC,IAAAA,EAAE,CAAC,CAAD,CAAF,GAAQsC,EAAE,GAAGF,EAAb;EAEA/B,IAAAA,WAAW,CAACN,EAAD,EAAKA,EAAL,CAAX;EACAM,IAAAA,WAAW,CAACL,EAAD,EAAKA,EAAL,CAAX;EAEA8B,IAAAA,eAAe,KAAKE,UAAU,CAACzO,CAAD,CAAV,GAAgBwO,MAArB,CAAf;;EACA,QAAI,CAACF,KAAD,IAAUtO,CAAC,KAAK0E,KAApB,EAA2B;EACvBjC,MAAAA,CAAC,CAAC,CAAD,CAAD,GAAOgK,EAAE,CAAC,CAAD,CAAT;EACAhK,MAAAA,CAAC,CAAC,CAAD,CAAD,GAAO,CAACgK,EAAE,CAAC,CAAD,CAAV;EACAK,MAAAA,WAAW,CAACrK,CAAD,EAAIA,CAAJ,CAAX;EACAmK,MAAAA,GAAG,CAAC4B,MAAM,GAAG,CAAV,CAAH,GAAkBI,EAAE,GAAGnM,CAAC,CAAC,CAAD,CAAD,GAAOlB,MAA9B;EACAqL,MAAAA,GAAG,CAAC4B,MAAM,GAAG,CAAT,GAAa,CAAd,CAAH,GAAsBK,EAAE,GAAGpM,CAAC,CAAC,CAAD,CAAD,GAAOlB,MAAlC;EACAiN,MAAAA,MAAM;EACT,KAPD,MAQK,IAAI,CAACF,KAAD,IAAUtO,CAAC,KAAK2E,GAAG,GAAG,CAA1B,EAA6B;EAC9BlC,MAAAA,CAAC,CAAC,CAAD,CAAD,GAAO+J,EAAE,CAAC,CAAD,CAAT;EACA/J,MAAAA,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC+J,EAAE,CAAC,CAAD,CAAV;EACAM,MAAAA,WAAW,CAACrK,CAAD,EAAIA,CAAJ,CAAX;EACAmK,MAAAA,GAAG,CAAC4B,MAAM,GAAG,CAAV,CAAH,GAAkBI,EAAE,GAAGnM,CAAC,CAAC,CAAD,CAAD,GAAOlB,MAA9B;EACAqL,MAAAA,GAAG,CAAC4B,MAAM,GAAG,CAAT,GAAa,CAAd,CAAH,GAAsBK,EAAE,GAAGpM,CAAC,CAAC,CAAD,CAAD,GAAOlB,MAAlC;EACAiN,MAAAA,MAAM;EACT,KAPI,MAQA;EACD;EACAvB,MAAAA,KAAK,CAACxK,CAAD,EAAIgK,EAAJ,EAAQD,EAAR,CAAL;EACA,UAAMwC,GAAG,GAAGvM,CAAC,CAAC,CAAD,CAAb;EACAA,MAAAA,CAAC,CAAC,CAAD,CAAD,GAAO,CAACA,CAAC,CAAC,CAAD,CAAT;EACAA,MAAAA,CAAC,CAAC,CAAD,CAAD,GAAOuM,GAAP;EAEAlC,MAAAA,WAAW,CAACrK,CAAD,EAAIA,CAAJ,CAAX;EAEA,UAAMwM,IAAI,GAAGvC,KAAK,CAACjK,CAAD,EAAIgK,EAAJ,CAAlB;EACA,UAAMyC,IAAI,GAAGhN,IAAI,CAAC2K,IAAL,CAAU,IAAIoC,IAAI,GAAGA,IAArB,CAAb,CAVC;;EAYD,UAAME,KAAK,GAAG5N,MAAM,GAAGW,IAAI,CAAC8H,GAAL,CAAS,EAAT,EAAa,IAAIkF,IAAjB,CAAvB;EAEA,UAAME,OAAO,GAAG7N,MAAM,GAAG0N,IAAT,GAAgB,CAAhC;;EAEA,UAAIV,eAAe,IAAK,IAAIW,IAAL,GAAab,UAAhC,IAA8Ce,OAAlD,EAA2D;EACvD,YAAMvH,EAAE,GAAG+G,EAAE,GAAGnM,CAAC,CAAC,CAAD,CAAD,GAAOlB,MAAvB;EACA,YAAMuG,EAAE,GAAG+G,EAAE,GAAGpM,CAAC,CAAC,CAAD,CAAD,GAAOlB,MAAvB;EACA,YAAM8N,KAAK,GAAGnN,IAAI,CAACyL,IAAL,CAAUuB,IAAV,IAAkB,CAAhC;EACA,YAAMI,IAAI,GAAGpN,IAAI,CAAC8F,GAAL,CAASqH,KAAT,IAAkBnN,IAAI,CAAC+F,GAAL,CAAS1G,MAAT,CAA/B;EACAqL,QAAAA,GAAG,CAAC4B,MAAM,GAAG,CAAV,CAAH,GAAkB3G,EAAE,GAAGpF,CAAC,CAAC,CAAD,CAAD,GAAO6M,IAA9B;EACA1C,QAAAA,GAAG,CAAC4B,MAAM,GAAG,CAAT,GAAa,CAAd,CAAH,GAAsB1G,EAAE,GAAGrF,CAAC,CAAC,CAAD,CAAD,GAAO6M,IAAlC;EACAd,QAAAA,MAAM;EACN5B,QAAAA,GAAG,CAAC4B,MAAM,GAAG,CAAV,CAAH,GAAkB3G,EAAE,GAAGpF,CAAC,CAAC,CAAD,CAAD,GAAO6M,IAA9B;EACA1C,QAAAA,GAAG,CAAC4B,MAAM,GAAG,CAAT,GAAa,CAAd,CAAH,GAAsB1G,EAAE,GAAGrF,CAAC,CAAC,CAAD,CAAD,GAAO6M,IAAlC;EACAd,QAAAA,MAAM;EACT,OAXD,MAYK;EACD5B,QAAAA,GAAG,CAAC4B,MAAM,GAAG,CAAV,CAAH,GAAkBI,EAAE,GAAGnM,CAAC,CAAC,CAAD,CAAD,GAAO0M,KAA9B;EACAvC,QAAAA,GAAG,CAAC4B,MAAM,GAAG,CAAT,GAAa,CAAd,CAAH,GAAsBK,EAAE,GAAGpM,CAAC,CAAC,CAAD,CAAD,GAAO0M,KAAlC;EACAX,QAAAA,MAAM;EACT;EACJ;EACJ;;EAED,SAAOC,UAAP;EACH;;AAED,EAAO,SAASc,aAAT,CAAuBzE,QAAvB,EAAiCC,KAAjC,EAAwCxJ,MAAxC,EAAgD8M,UAAhD,EAA4DC,KAA5D,EAAmE;EACtE,MAAMkB,cAAc,GAAGnB,UAAU,IAAI,IAAd,GAAqB,EAArB,GAA0B,IAAIpN,YAAJ,CAAiB6J,QAAQ,CAAC7K,MAA1B,CAAjD;EACA,MAAMwP,YAAY,GAAI1E,KAAK,IAAIA,KAAK,CAAC9K,MAAhB,GAA0B8K,KAAK,CAAC,CAAD,CAA/B,GAAqCD,QAAQ,CAAC7K,MAAT,GAAkB,CAA5E;EAEAkO,EAAAA,kBAAkB,CACdrD,QADc,EACJ0E,cADI,EACY,CADZ,EACeC,YADf,EAC6B,CAD7B,EACgClO,MADhC,EACwC8M,UADxC,EACoDC,KADpD,EAC2D,KAD3D,CAAlB;;EAIA,MAAIvD,KAAJ,EAAW;EACP,SAAK,IAAI/K,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+K,KAAK,CAAC9K,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;EACnC,UAAM0E,KAAK,GAAGqG,KAAK,CAAC/K,CAAD,CAAnB;EACA,UAAM2E,GAAG,GAAGoG,KAAK,CAAC/K,CAAC,GAAG,CAAL,CAAL,IAAgB8K,QAAQ,CAAC7K,MAAT,GAAkB,CAA9C;EACAkO,MAAAA,kBAAkB,CACdrD,QADc,EACJ0E,cADI,EACY9K,KADZ,EACmBC,GADnB,EAEd0J,UAAU,IAAI,IAAd,GAAqBmB,cAAc,CAACvP,MAAf,GAAwB,CAA7C,GAAiDyE,KAFnC,EAGdnD,MAHc,EAGN8M,UAHM,EAGMC,KAHN,CAAlB;EAKH;EACJ;;EAED,SAAOkB,cAAP;EACH;;EAED,SAASE,aAAT,CAAuBjE,MAAvB,EAA+BkE,MAA/B,EAAuCjL,KAAvC,EAA8CC,GAA9C,EAAmD;EAC/C,OAAK,IAAI3E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkC,IAAI,CAAC0N,KAAL,CAAW,CAACjL,GAAG,GAAGD,KAAP,IAAgB,CAA3B,CAApB,EAAmD1E,CAAC,EAApD,EAAwD;EACpD,SAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkP,MAApB,EAA4BlP,CAAC,EAA7B,EAAiC;EAC7B,UAAMsF,CAAC,GAAG,CAAC/F,CAAC,GAAG0E,KAAL,IAAciL,MAAd,GAAuBlP,CAAjC;EACA,UAAMsC,CAAC,GAAG,CAAC4B,GAAG,GAAG3E,CAAN,GAAU,CAAX,IAAgB2P,MAAhB,GAAyBlP,CAAnC;EACA,UAAMuO,GAAG,GAAGvD,MAAM,CAAC1F,CAAD,CAAlB;EACA0F,MAAAA,MAAM,CAAC1F,CAAD,CAAN,GAAY0F,MAAM,CAAC1I,CAAD,CAAlB;EACA0I,MAAAA,MAAM,CAAC1I,CAAD,CAAN,GAAYiM,GAAZ;EACH;EACJ;;EAED,SAAOvD,MAAP;EACH;;EAED,SAASoE,kBAAT,CAA4B/E,QAA5B,EAAsCC,KAAtC,EAA6C;EACzC,MAAI+E,kBAAkB,GAAGhF,QAAQ,CAAC7K,MAAT,GAAkB,CAA3C;EACA,MAAIyE,KAAK,GAAG,CAAZ;EACA,MAAIC,GAAG,GAAGoG,KAAK,IAAIA,KAAK,CAAC9K,MAAf,GAAwB8K,KAAK,CAAC,CAAD,CAA7B,GAAmC+E,kBAA7C;;EACA,MAAIxK,MAAI,CAACwF,QAAD,EAAWpG,KAAX,EAAkBC,GAAlB,CAAJ,GAA6B,CAAjC,EAAoC;EAChC+K,IAAAA,aAAa,CAAC5E,QAAD,EAAW,CAAX,EAAcpG,KAAd,EAAqBC,GAArB,CAAb;EACH;;EACD,OAAK,IAAIoL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAAChF,KAAK,GAAGA,KAAK,CAAC9K,MAAT,GAAkB,CAAxB,IAA6B,CAAjD,EAAoD8P,CAAC,EAArD,EAAyD;EACrDrL,IAAAA,KAAK,GAAGqG,KAAK,CAACgF,CAAC,GAAG,CAAL,CAAb;EACApL,IAAAA,GAAG,GAAGoG,KAAK,CAACgF,CAAD,CAAL,IAAYD,kBAAlB;;EACA,QAAIxK,MAAI,CAACwF,QAAD,EAAWpG,KAAX,EAAkBC,GAAlB,CAAJ,GAA6B,CAAjC,EAAoC;EAChC+K,MAAAA,aAAa,CAAC5E,QAAD,EAAW,CAAX,EAAcpG,KAAd,EAAqBC,GAArB,CAAb;EACH;EACJ;EACJ;;EAED,SAASqL,aAAT,CAAuBC,IAAvB,EAA6B;EAEzBA,EAAAA,IAAI,CAACC,KAAL,GAAaD,IAAI,CAACC,KAAL,IAAc,CAA3B;EACAD,EAAAA,IAAI,CAACE,SAAL,GAAiBF,IAAI,CAACE,SAAL,IAAkB,CAAnC;EACAF,EAAAA,IAAI,CAACG,aAAL,GAAqBH,IAAI,CAACG,aAAL,IAAsB,IAAtB,GAA6B,CAA7B,GAAiCH,IAAI,CAACG,aAA3D;EACAH,EAAAA,IAAI,CAACI,UAAL,GAAkBJ,IAAI,CAACI,UAAL,IAAmB,KAArC;EACAJ,EAAAA,IAAI,CAACK,WAAL,GAAmBL,IAAI,CAACK,WAAL,IAAoB,KAAvC;EACAL,EAAAA,IAAI,CAAC7D,QAAL,GAAgB6D,IAAI,CAAC7D,QAAL,IAAiB,CAAjC,CAPyB;;EAUzB,MAAI,OAAO6D,IAAI,CAACC,KAAZ,KAAsB,QAA1B,EAAoC;EAChCD,IAAAA,IAAI,CAACE,SAAL,GAAiBjO,IAAI,CAAC8H,GAAL,CAAS,EAAEiG,IAAI,CAACG,aAAL,GAAqB,CAAvB,IAA4B,CAA5B,GAAgCH,IAAI,CAACE,SAA9C,EAAyDF,IAAI,CAACC,KAAL,GAAa,CAAtE,CAAjB;EACH;;EACD,MAAI,EAAED,IAAI,CAACE,SAAL,GAAiB,CAAnB,CAAJ,EAA2B;EACvBF,IAAAA,IAAI,CAACG,aAAL,GAAqB,CAArB;EACH;;EACDH,EAAAA,IAAI,CAACG,aAAL,GAAqBlO,IAAI,CAACqO,KAAL,CAAWN,IAAI,CAACG,aAAhB,CAArB;EAEA,MAAMI,YAAY,GAAGP,IAAI,CAACO,YAA1B;EACAP,EAAAA,IAAI,CAACQ,SAAL,GAAiBR,IAAI,CAACQ,SAAL,IAAkB,CAAC,CAAD,EAAI,CAAJ,CAAnC;EACAR,EAAAA,IAAI,CAAC/R,KAAL,GAAa+R,IAAI,CAAC/R,KAAL,IAAc,CAAC,CAAD,EAAI,CAAJ,CAA3B;;EACA,MAAI+R,IAAI,CAACS,OAAT,EAAkB;EACd,QAAIC,OAAO,GAAGV,IAAI,CAACS,OAAL,CAAa3U,CAAb,IAAkB,IAAlB,GACPyU,YAAY,CAACzU,CAAb,IAAkB,CADX,GAERkU,IAAI,CAACS,OAAL,CAAa3U,CAFnB;EAGA,QAAI6U,OAAO,GAAGX,IAAI,CAACS,OAAL,CAAa7N,CAAb,IAAkB,IAAlB,GACP2N,YAAY,CAAC3N,CAAb,IAAkB,CADX,GAERoN,IAAI,CAACS,OAAL,CAAa7N,CAFnB;EAGA,QAAIgO,WAAW,GAAGZ,IAAI,CAACS,OAAL,CAAaI,KAA/B;EACA,QAAIC,YAAY,GAAGd,IAAI,CAACS,OAAL,CAAa9O,MAAhC;;EACA,QAAIiP,WAAW,IAAI,IAAnB,EAAyB;EACrB,UAAIE,YAAY,IAAI,IAApB,EAA0B;EACtBF,QAAAA,WAAW,GAAGE,YAAY,GAAGP,YAAY,CAAC5O,MAA5B,GAAqC4O,YAAY,CAACM,KAAhE;EACH,OAFD,MAGK;EACDD,QAAAA,WAAW,GAAGL,YAAY,CAACM,KAA3B;EACAC,QAAAA,YAAY,GAAGP,YAAY,CAAC5O,MAA5B;EACH;EACJ,KARD,MASK,IAAImP,YAAY,IAAI,IAApB,EAA0B;EAC3BA,MAAAA,YAAY,GAAGF,WAAW,GAAGL,YAAY,CAACM,KAA3B,GAAmCN,YAAY,CAAC5O,MAA/D;EACH;;EACDqO,IAAAA,IAAI,CAAC/R,KAAL,GAAa,CACT2S,WAAW,GAAGL,YAAY,CAACM,KADlB,EAETC,YAAY,GAAGP,YAAY,CAAC5O,MAFnB,CAAb;EAIAqO,IAAAA,IAAI,CAACQ,SAAL,GAAiB,CACb,CAACE,OAAO,GAAGH,YAAY,CAACzU,CAAxB,IAA6BkU,IAAI,CAAC/R,KAAL,CAAW,CAAX,CADhB,EAEb,CAAC0S,OAAO,GAAGJ,YAAY,CAAC3N,CAAxB,IAA6BoN,IAAI,CAAC/R,KAAL,CAAW,CAAX,CAFhB,CAAjB;EAIH;EACJ;;EAED,SAAS8S,cAAT,CAAwB1Q,OAAxB,EAAiCtE,QAAjC,EAA2C;EAEvC,WAASiV,KAAT,CAAe9L,CAAf,EAAkBY,CAAlB,EAAqBhD,CAArB,EAAwBiD,CAAxB,EAA2B;EACvBb,IAAAA,CAAC,CAAC,CAAD,CAAD,GAAOY,CAAP;EAAUZ,IAAAA,CAAC,CAAC,CAAD,CAAD,GAAOpC,CAAP;EAAUoC,IAAAA,CAAC,CAAC,CAAD,CAAD,GAAOa,CAAP;EACvB;;EAED,MAAMsD,EAAE,GAAG,EAAX;EACA,MAAMC,EAAE,GAAG,EAAX;EACA,MAAM2H,EAAE,GAAG,EAAX;EAEA,MAAMC,GAAG,GAAG,EAAZ;EACA,MAAMC,GAAG,GAAG,EAAZ;EAEA,MAAM1K,CAAC,GAAG,EAAV;EAEA,MAAMnG,GAAG,GAAGD,OAAO,CAACL,MAApB;EACA,MAAMoR,OAAO,GAAG,IAAIpQ,YAAJ,CAAiBjF,QAAQ,CAACiE,MAA1B,CAAhB;;EACA,OAAK,IAAIqR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG/Q,GAApB,GAA0B;EACtB,QAAMgR,EAAE,GAAGjR,OAAO,CAACgR,CAAC,EAAF,CAAP,GAAe,CAA1B;EACA,QAAME,EAAE,GAAGlR,OAAO,CAACgR,CAAC,EAAF,CAAP,GAAe,CAA1B;EACA,QAAMG,EAAE,GAAGnR,OAAO,CAACgR,CAAC,EAAF,CAAP,GAAe,CAA1B;EAEAL,IAAAA,KAAK,CAAC3H,EAAD,EAAKtN,QAAQ,CAACuV,EAAD,CAAb,EAAmBvV,QAAQ,CAACuV,EAAE,GAAG,CAAN,CAA3B,EAAqCvV,QAAQ,CAACuV,EAAE,GAAG,CAAN,CAA7C,CAAL;EACAN,IAAAA,KAAK,CAAC1H,EAAD,EAAKvN,QAAQ,CAACwV,EAAD,CAAb,EAAmBxV,QAAQ,CAACwV,EAAE,GAAG,CAAN,CAA3B,EAAqCxV,QAAQ,CAACwV,EAAE,GAAG,CAAN,CAA7C,CAAL;EACAP,IAAAA,KAAK,CAACC,EAAD,EAAKlV,QAAQ,CAACyV,EAAD,CAAb,EAAmBzV,QAAQ,CAACyV,EAAE,GAAG,CAAN,CAA3B,EAAqCzV,QAAQ,CAACyV,EAAE,GAAG,CAAN,CAA7C,CAAL;EAEAvE,IAAAA,KAAK,CAACiE,GAAD,EAAM7H,EAAN,EAAUC,EAAV,CAAL;EACA2D,IAAAA,KAAK,CAACkE,GAAD,EAAM7H,EAAN,EAAU2H,EAAV,CAAL;EACA9D,IAAAA,OAAO,CAAC1G,CAAD,EAAIyK,GAAJ,EAASC,GAAT,CAAP,CAXsB;;EAatB,SAAK,IAAIpR,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG,CAApB,EAAuBA,EAAC,EAAxB,EAA4B;EACxBqR,MAAAA,OAAO,CAACE,EAAE,GAAGvR,EAAN,CAAP,GAAkBqR,OAAO,CAACE,EAAE,GAAGvR,EAAN,CAAP,GAAkB0G,CAAC,CAAC1G,EAAD,CAArC;EACAqR,MAAAA,OAAO,CAACG,EAAE,GAAGxR,EAAN,CAAP,GAAkBqR,OAAO,CAACG,EAAE,GAAGxR,EAAN,CAAP,GAAkB0G,CAAC,CAAC1G,EAAD,CAArC;EACAqR,MAAAA,OAAO,CAACI,EAAE,GAAGzR,EAAN,CAAP,GAAkBqR,OAAO,CAACI,EAAE,GAAGzR,EAAN,CAAP,GAAkB0G,CAAC,CAAC1G,EAAD,CAArC;EACH;EACJ;;EAED,OAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqR,OAAO,CAACpR,MAA5B,GAAqC;EACjCgR,IAAAA,KAAK,CAACvK,CAAD,EAAI2K,OAAO,CAACrR,CAAD,CAAX,EAAgBqR,OAAO,CAACrR,CAAC,GAAC,CAAH,CAAvB,EAA8BqR,OAAO,CAACrR,CAAC,GAAC,CAAH,CAArC,CAAL;EACAmN,IAAAA,WAAW,CAACzG,CAAD,EAAIA,CAAJ,CAAX;EACA2K,IAAAA,OAAO,CAACrR,CAAC,EAAF,CAAP,GAAe0G,CAAC,CAAC,CAAD,CAAhB;EACA2K,IAAAA,OAAO,CAACrR,CAAC,EAAF,CAAP,GAAe0G,CAAC,CAAC,CAAD,CAAhB;EACA2K,IAAAA,OAAO,CAACrR,CAAC,EAAF,CAAP,GAAe0G,CAAC,CAAC,CAAD,CAAhB;EACH;;EAED,SAAO2K,OAAP;EACH;EAED;;;EACA,IAAMK,cAAc,GAAG,CACnB,CAAC,CAAD,EAAI,CAAJ,CADmB,EACX,CAAC,CAAD,EAAI,CAAJ,CADW,EACH,CAAC,CAAD,EAAI,CAAJ,CADG,EAEnB,CAAC,CAAD,EAAI,CAAJ,CAFmB,EAEX,CAAC,CAAD,EAAI,CAAJ,CAFW,EAEH,CAAC,CAAD,EAAI,CAAJ,CAFG,CAAvB;;EAMA,SAASC,cAAT,CACI/E,GADJ,QAC+ClI,KAD/C,EACsDC,GADtD,EAEIiN,OAFJ,EAEa3B,IAFb,EAGE;EAAA,MAFQnF,QAER,QAFQA,QAER;EAAA,MAFkB+G,WAElB,QAFkBA,WAElB;EAAA,MAF+B3B,KAE/B,QAF+BA,KAE/B;EAAA,MAFsC4B,IAEtC,QAFsCA,IAEtC;EACE,MAAMC,eAAe,GAAGpN,GAAG,GAAGD,KAA9B;EACA,MAAMsN,SAAS,GAAG/B,IAAI,CAACI,UAAL,GAAkB,CAAlB,GAAsB,CAAxC;EACA,MAAM4B,oBAAoB,GAAGF,eAAe,GAAGC,SAA/C;EAEA,MAAME,UAAU,GAAGjC,IAAI,CAACK,WAAL,GAAmB,CAAnB,GAAuB,CAA1C;EACA,MAAMH,SAAS,GAAGjO,IAAI,CAAC8H,GAAL,CAASkG,KAAK,GAAG,CAAjB,EAAoBD,IAAI,CAACE,SAAzB,CAAlB;EACA,MAAMC,aAAa,GAAGH,IAAI,CAACG,aAA3B;EACA,MAAM+B,YAAY,GAAGP,OAAO,CAACQ,MAA7B;EACA,MAAMC,IAAI,GAAGnQ,IAAI,CAACsC,GAAL,CAASsN,IAAI,CAAChB,KAAd,EAAqBgB,IAAI,CAAClQ,MAA1B,CAAb,CATF;;EAYE,MAAIuO,SAAS,GAAG,CAAhB,EAAmB;EAEf,QAAMmC,EAAE,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAX;EACA,QAAM9F,EAAE,GAAG,EAAX;EACA,QAAMC,GAAE,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,CAAR,CAAX;EACA,QAAMhK,GAAC,GAAG,EAAV;EAEA,QAAI8P,SAAS,GAAG,CAAhB;EACA,QAAIC,IAAI,GAAG,IAAIvR,YAAJ,CAAiB8Q,eAAjB,CAAX;;EACA,SAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;EACxB,UAAM5W,CAAC,GAAI4W,CAAC,KAAK,CAAN,GAAWvC,KAAK,GAAGC,SAAnB,GAAgCA,SAA3C;;EACA,WAAK,IAAIpD,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIqD,aAAa,GAAG8B,UAArC,EAAiDnF,CAAC,EAAlD,EAAsD;EAClD,YAAI2F,IAAI,GAAG,CAAX;EACA,YAAIC,KAAK,SAAT;EACA,YAAIC,KAAK,SAAT;;EACA,aAAK,IAAI5S,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+R,eAApB,EAAqC/R,CAAC,EAAtC,EAA0C;EAEtC,eAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuR,SAApB,EAA+BvR,CAAC,EAAhC,EAAoC;EAChC;EACA,gBAAIoS,GAAG,GAAG,CAAC,CAAC7S,CAAC,GAAGS,CAAL,IAAUsR,eAAV,GAA4BrN,KAA7B,IAAsC,CAAhD;EACA8H,YAAAA,EAAE,CAAC,CAAD,CAAF,GAAQ1B,QAAQ,CAAC+H,GAAD,CAAR,GAAgBhB,WAAW,CAACgB,GAAD,CAAnC;EACArG,YAAAA,EAAE,CAAC,CAAD,CAAF,GAAQ1B,QAAQ,CAAC+H,GAAG,GAAG,CAAP,CAAR,GAAoBhB,WAAW,CAACgB,GAAG,GAAG,CAAP,CAAvC;EACArG,YAAAA,EAAE,CAAC,CAAD,CAAF,GAAQ,CAAR;EACA,gBAAMsG,CAAC,GAAG5Q,IAAI,CAAC2K,IAAL,CAAUL,EAAE,CAAC,CAAD,CAAF,GAAQA,EAAE,CAAC,CAAD,CAAV,GAAgBA,EAAE,CAAC,CAAD,CAAF,GAAQA,EAAE,CAAC,CAAD,CAApC,CAAV;EACAA,YAAAA,EAAE,CAAC,CAAD,CAAF,IAASsG,CAAT;EACAtG,YAAAA,EAAE,CAAC,CAAD,CAAF,IAASsG,CAAT;EAEA,gBAAMvH,CAAC,GAAG,CAACrJ,IAAI,CAAC0N,KAAL,CAAW7C,CAAC,GAAGmF,UAAf,IAA8BnF,CAAC,GAAGmF,UAAnC,IAAkD9B,aAA5D;EACAqC,YAAAA,CAAC,KAAK,CAAN,GAAUjF,KAAK,CAAC/K,GAAD,EAAI6P,EAAJ,EAAQ9F,EAAR,EAAYjB,CAAZ,CAAf,GACMiC,KAAK,CAAC/K,GAAD,EAAI+J,EAAJ,EAAQC,GAAR,EAAYlB,CAAZ,CADX;EAGA,gBAAMwH,EAAE,GAAGN,CAAC,KAAK,CAAN,GAAWlH,CAAX,GAAe,IAAIA,CAA9B;EACA,gBAAMxF,CAAC,GAAGoK,SAAS,GAAGjO,IAAI,CAAC2L,GAAL,CAASkF,EAAE,GAAG7Q,IAAI,CAACC,EAAV,GAAe,CAAxB,CAAtB;EACA,gBAAMY,CAAC,GAAG+P,CAAC,GAAG5Q,IAAI,CAAC0L,GAAL,CAASmF,EAAE,GAAG7Q,IAAI,CAACC,EAAV,GAAe,CAAxB,CAAd,CAhBgC;;EAmBhC,gBAAMW,CAAC,GAAGqN,SAAS,GAAG2C,CAAZ,GAAgB5Q,IAAI,CAAC2K,IAAL,CAAU9G,CAAC,GAAGA,CAAJ,GAAQhD,CAAC,GAAGA,CAAtB,CAA1B;EAEA,gBAAMhH,CAAC,GAAG0G,GAAC,CAAC,CAAD,CAAD,GAAOK,CAAP,GAAW+O,WAAW,CAACgB,GAAD,CAAhC;EACA,gBAAMhQ,CAAC,GAAGJ,GAAC,CAAC,CAAD,CAAD,GAAOK,CAAP,GAAW+O,WAAW,CAACgB,GAAG,GAAG,CAAP,CAAhC;EACA,gBAAMG,EAAE,GAAGvQ,GAAC,CAAC,CAAD,CAAD,GAAOK,CAAP,GAAWjH,CAAtB;EACA+Q,YAAAA,GAAG,CAAC5Q,QAAJ,CAAa4V,OAAO,CAACQ,MAAR,GAAiB,CAA9B,IAAmCrW,CAAnC;EACA6Q,YAAAA,GAAG,CAAC5Q,QAAJ,CAAa4V,OAAO,CAACQ,MAAR,GAAiB,CAAjB,GAAqB,CAAlC,IAAuCvP,CAAvC;EACA+J,YAAAA,GAAG,CAAC5Q,QAAJ,CAAa4V,OAAO,CAACQ,MAAR,GAAiB,CAAjB,GAAqB,CAAlC,IAAuCY,EAAvC,CA1BgC;;EA6BhC,gBAAIhT,CAAC,GAAG,CAAJ,IAASS,CAAC,GAAG,CAAjB,EAAoB;EAChBiS,cAAAA,IAAI,IAAIxQ,IAAI,CAAC2K,IAAL,CAAU,CAAC8F,KAAK,GAAG5W,CAAT,KAAe4W,KAAK,GAAG5W,CAAvB,IAA4B,CAAC6W,KAAK,GAAG/P,CAAT,KAAe+P,KAAK,GAAG/P,CAAvB,CAAtC,CAAR;EACH;;EACD,gBAAIkK,CAAC,GAAG,CAAJ,IAAS0F,CAAC,GAAG,CAAjB,EAAoB;EAChB,kBAAIzD,GAAG,GAAG,CAAC4C,OAAO,CAACQ,MAAR,GAAiBH,oBAAlB,IAA0C,CAApD;EACA,kBAAIgB,MAAM,GAAGrG,GAAG,CAAC5Q,QAAJ,CAAagT,GAAb,CAAb;EACA,kBAAIkE,MAAM,GAAGtG,GAAG,CAAC5Q,QAAJ,CAAagT,GAAG,GAAG,CAAnB,CAAb;EACA,kBAAImE,MAAM,GAAGvG,GAAG,CAAC5Q,QAAJ,CAAagT,GAAG,GAAG,CAAnB,CAAb;EAEAwD,cAAAA,IAAI,CAACxS,CAAD,CAAJ,IAAWkC,IAAI,CAAC2K,IAAL,CACP,CAACoG,MAAM,GAAGlX,CAAV,KAAgBkX,MAAM,GAAGlX,CAAzB,IACE,CAACmX,MAAM,GAAGrQ,CAAV,KAAgBqQ,MAAM,GAAGrQ,CAAzB,CADF,GAEE,CAACsQ,MAAM,GAAGH,EAAV,KAAiBG,MAAM,GAAGH,EAA1B,CAHK,CAAX;EAKH;;EACDpG,YAAAA,GAAG,CAAC7L,EAAJ,CAAO6Q,OAAO,CAACQ,MAAR,GAAiB,CAAxB,IAA6BM,IAAI,GAAGL,IAApC;EACAzF,YAAAA,GAAG,CAAC7L,EAAJ,CAAO6Q,OAAO,CAACQ,MAAR,GAAiB,CAAjB,GAAqB,CAA5B,IAAiCI,IAAI,CAACxS,CAAD,CAAJ,GAAUqS,IAA3C;EAEAM,YAAAA,KAAK,GAAG5W,CAAR;EACA6W,YAAAA,KAAK,GAAG/P,CAAR;EACA+O,YAAAA,OAAO,CAACQ,MAAR;EACH;;EAED,cAAKF,UAAU,GAAG,CAAb,IAAmBnF,CAAC,GAAGmF,UAAxB,IAAyCA,UAAU,KAAK,CAAf,IAAoBnF,CAAC,IAAI,CAAtE,EAA0E;EACtE,iBAAK,IAAIuE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;EACxB,kBAAM1J,CAAC,GAAG,CAAC8J,cAAc,CAACJ,CAAD,CAAd,CAAkB,CAAlB,IAAuBtR,CAAC,GAAGgS,SAA5B,IAAyCC,oBAAnD;EACA,kBAAMvL,CAAC,GAAGgL,cAAc,CAACJ,CAAD,CAAd,CAAkB,CAAlB,IAAuBiB,SAAjC;EACA3F,cAAAA,GAAG,CAACtM,OAAJ,CAAYsR,OAAO,CAACpR,KAAR,EAAZ,IAA+B,CAACkG,CAAC,GAAG,CAAL,IAAUuL,oBAAV,GAAiCrK,CAAjC,GAAqCuK,YAApE;EACH;EACJ;EACJ;;EAEDI,QAAAA,SAAS;EACZ;EACJ;EACJ,GAjFD,MAkFK;EACD,SAAK,IAAIE,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG,CAApB,EAAuBA,EAAC,EAAxB,EAA4B;EACxB,UAAM5W,EAAC,GAAG4W,EAAC,KAAK,CAAN,GAAUvC,KAAK,GAAGC,SAAlB,GAA8BA,SAAxC;;EACA,UAAIuC,KAAI,GAAG,CAAX;;EACA,UAAIC,MAAK,SAAT;;EACA,UAAIC,MAAK,SAAT;;EACA,WAAK,IAAI5S,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG+R,eAApB,EAAqC/R,GAAC,EAAtC,EAA0C;EACtC,aAAK,IAAI4H,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGoK,SAApB,EAA+BpK,EAAC,EAAhC,EAAoC;EAChC,cAAMiL,IAAG,GAAG,CAAC,CAAC7S,GAAC,GAAG4H,EAAL,IAAUmK,eAAV,GAA4BrN,KAA7B,IAAsC,CAAlD;;EACA,cAAM3I,EAAC,GAAG+O,QAAQ,CAAC+H,IAAD,CAAlB;EACA,cAAMhQ,EAAC,GAAGiI,QAAQ,CAAC+H,IAAG,GAAG,CAAP,CAAlB;EACAjG,UAAAA,GAAG,CAAC5Q,QAAJ,CAAa4V,OAAO,CAACQ,MAAR,GAAiB,CAA9B,IAAmCrW,EAAnC;EACA6Q,UAAAA,GAAG,CAAC5Q,QAAJ,CAAa4V,OAAO,CAACQ,MAAR,GAAiB,CAAjB,GAAqB,CAAlC,IAAuCvP,EAAvC;EACA+J,UAAAA,GAAG,CAAC5Q,QAAJ,CAAa4V,OAAO,CAACQ,MAAR,GAAiB,CAAjB,GAAqB,CAAlC,IAAuCvW,EAAvC;;EACA,cAAImE,GAAC,GAAG,CAAJ,IAAS4H,EAAC,GAAG,CAAjB,EAAoB;EAChB8K,YAAAA,KAAI,IAAIxQ,IAAI,CAAC2K,IAAL,CAAU,CAAC8F,MAAK,GAAG5W,EAAT,KAAe4W,MAAK,GAAG5W,EAAvB,IAA4B,CAAC6W,MAAK,GAAG/P,EAAT,KAAe+P,MAAK,GAAG/P,EAAvB,CAAtC,CAAR;EACH;;EACD+J,UAAAA,GAAG,CAAC7L,EAAJ,CAAO6Q,OAAO,CAACQ,MAAR,GAAiB,CAAxB,IAA6BM,KAAI,GAAGL,IAApC;EACAzF,UAAAA,GAAG,CAAC7L,EAAJ,CAAO6Q,OAAO,CAACQ,MAAR,GAAiB,CAAjB,GAAqB,CAA5B,IAAiCvW,EAAC,GAAGwW,IAArC;EACAM,UAAAA,MAAK,GAAG5W,EAAR;EACA6W,UAAAA,MAAK,GAAG/P,EAAR;EAEA+O,UAAAA,OAAO,CAACQ,MAAR;EACH;EACJ;EACJ;EACJ,GAxHH;;;EA0HE,MAAMgB,cAAc,GAAGjD,SAAS,GAAG,CAAZ,GAAiBC,aAAa,GAAG8B,UAAhB,GAA6B,CAA9C,GAAmD,CAA1E;;EACA,OAAK,IAAIlS,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG+R,eAApB,EAAqC/R,GAAC,EAAtC,EAA0C;EACtC,SAAK,IAAIsR,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG,CAApB,EAAuBA,EAAC,EAAxB,EAA4B;EACxB,UAAM1J,GAAC,GAAG,CAAC8J,cAAc,CAACJ,EAAD,CAAd,CAAkB,CAAlB,IAAuBtR,GAAC,GAAGgS,SAA5B,IAAyCC,oBAAnD;;EACA,UAAMvL,EAAC,GAAGgL,cAAc,CAACJ,EAAD,CAAd,CAAkB,CAAlB,IAAuB8B,cAAjC;;EACAxG,MAAAA,GAAG,CAACtM,OAAJ,CAAYsR,OAAO,CAACpR,KAAR,EAAZ,IAA+B,CAACkG,EAAC,GAAG,CAAL,IAAUuL,oBAAV,GAAiCrK,GAAjC,GAAqCuK,YAApE;EACH;EACJ;EACJ;;EAED,SAASkB,eAAT,QAAwEzG,GAAxE,EAA6EgF,OAA7E,EAAsF3B,IAAtF,EAA4F;EAAA,MAAlE3P,OAAkE,SAAlEA,OAAkE;EAAA,MAAzDwK,QAAyD,SAAzDA,QAAyD;EAAA,MAA/C+G,WAA+C,SAA/CA,WAA+C;EAAA,MAAlCC,IAAkC,SAAlCA,IAAkC;EAAA,MAA5B5B,KAA4B,SAA5BA,KAA4B;;EACxF,MAAIpF,QAAQ,CAAC7K,MAAT,IAAmB,CAAvB,EAA0B;EACtB;EACH;;EAED,MAAMkS,YAAY,GAAGP,OAAO,CAACQ,MAA7B,CALwF;;EAOxF,MAAMkB,UAAU,GAAGhT,OAAO,CAACL,MAA3B;;EACA,OAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsT,UAApB,EAAgCtT,CAAC,EAAjC,EAAqC;EACjC4M,IAAAA,GAAG,CAACtM,OAAJ,CAAYsR,OAAO,CAACpR,KAAR,EAAZ,IAA+B2R,YAAY,GAAG7R,OAAO,CAACN,CAAD,CAArD;EACH;;EACD,MAAMqS,IAAI,GAAGnQ,IAAI,CAACsC,GAAL,CAASsN,IAAI,CAAChB,KAAd,EAAqBgB,IAAI,CAAClQ,MAA1B,CAAb,CAXwF;;EAaxF,OAAK,IAAI6Q,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIxC,IAAI,CAACsD,aAAL,GAAqB,CAArB,GAAyB,CAA7B,CAAjB,EAAkDd,CAAC,EAAnD,EAAuD;EACnD,SAAK,IAAIzS,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG6R,WAAW,CAAC5R,MAAhC,EAAwCD,GAAC,IAAI,CAA7C,EAAgD;EAC5C,UAAMjE,CAAC,GAAG8V,WAAW,CAAC7R,GAAD,CAArB;EACA,UAAM6C,CAAC,GAAGgP,WAAW,CAAC7R,GAAC,GAAG,CAAL,CAArB;EACA4M,MAAAA,GAAG,CAAC5Q,QAAJ,CAAa4V,OAAO,CAACQ,MAAR,GAAiB,CAA9B,IAAmCrW,CAAnC;EACA6Q,MAAAA,GAAG,CAAC5Q,QAAJ,CAAa4V,OAAO,CAACQ,MAAR,GAAiB,CAAjB,GAAqB,CAAlC,IAAuCvP,CAAvC;EACA+J,MAAAA,GAAG,CAAC5Q,QAAJ,CAAa4V,OAAO,CAACQ,MAAR,GAAiB,CAAjB,GAAqB,CAAlC,IAAuC,CAAC,IAAIK,CAAL,IAAUvC,KAAjD;EAEAtD,MAAAA,GAAG,CAAC7L,EAAJ,CAAO6Q,OAAO,CAACQ,MAAR,GAAiB,CAAxB,IAA6B,CAACrW,CAAC,GAAG+V,IAAI,CAAC/V,CAAV,IAAesW,IAA5C;EACAzF,MAAAA,GAAG,CAAC7L,EAAJ,CAAO6Q,OAAO,CAACQ,MAAR,GAAiB,CAAjB,GAAqB,CAA5B,IAAiC,CAACvP,CAAC,GAAGiP,IAAI,CAACjP,CAAV,IAAewP,IAAhD;EACAT,MAAAA,OAAO,CAACQ,MAAR;EACH;EACJ,GAzBuF;;;EA2BxF,MAAI,CAACnC,IAAI,CAACsD,aAAV,EAAyB;EACrB,QAAMC,WAAW,GAAG1I,QAAQ,CAAC7K,MAAT,GAAkB,CAAtC;;EACA,SAAK,IAAID,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGsT,UAApB,EAAgCtT,GAAC,IAAI,CAArC,EAAwC;EACpC,WAAK,IAAIyS,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,CAApB,EAAuBA,GAAC,EAAxB,EAA4B;EACxB7F,QAAAA,GAAG,CAACtM,OAAJ,CAAYsR,OAAO,CAACpR,KAAR,EAAZ,IAA+B2R,YAAY,GAAGqB,WAAf,GAA6BlT,OAAO,CAACN,GAAC,GAAG,CAAJ,GAAQyS,GAAT,CAAnE;EACH;EACJ;EACJ;EACJ;;EAGD,SAASgB,+BAAT,CAAyCC,YAAzC,EAAuDzD,IAAvD,EAA6D;EACzD,MAAI0D,UAAU,GAAG,CAAjB;EACA,MAAIH,WAAW,GAAG,CAAlB;;EAEA,OAAK,IAAIrO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuO,YAAY,CAACzT,MAAjC,EAAyCkF,CAAC,EAA1C,EAA8C;EAAA,0BACAuO,YAAY,CAACvO,CAAD,CADZ;EAAA,QACnC7E,OADmC,mBACnCA,OADmC;EAAA,QAC1BwK,QAD0B,mBAC1BA,QAD0B;EAAA,QAChBC,KADgB,mBAChBA,KADgB;EAAA,QACTmF,KADS,mBACTA,KADS;EAE1C,QAAMJ,kBAAkB,GAAGhF,QAAQ,CAAC7K,MAAT,GAAkB,CAA7C;EACA,QAAMkQ,SAAS,GAAGjO,IAAI,CAAC8H,GAAL,CAASkG,KAAK,GAAG,CAAjB,EAAoBD,IAAI,CAACE,SAAzB,CAAlB;EACA,QAAMC,aAAa,GAAG,EAAED,SAAS,GAAG,CAAd,IAAmB,CAAnB,GAAuBF,IAAI,CAACG,aAAlD;EAEAuD,IAAAA,UAAU,IAAIrT,OAAO,CAACL,MAAR,IAAkBgQ,IAAI,CAACsD,aAAL,GAAqB,CAArB,GAAyB,CAA3C,CAAd;EACAC,IAAAA,WAAW,IAAI1D,kBAAkB,IAAIG,IAAI,CAACsD,aAAL,GAAqB,CAArB,GAAyB,CAA7B,CAAjC;EACA,QAAMhB,SAAS,GAAG,IAAInC,aAAa,GAAG,CAAtC;EAEA,QAAI1L,KAAK,GAAG,CAAZ;EACA,QAAIC,GAAG,GAAG,CAAV;;EACA,SAAK,IAAIoL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAAChF,KAAK,GAAGA,KAAK,CAAC9K,MAAT,GAAkB,CAAxB,IAA6B,CAAjD,EAAoD8P,CAAC,EAArD,EAAyD;EACrD,UAAIA,CAAC,KAAK,CAAV,EAAa;EACTpL,QAAAA,GAAG,GAAGoG,KAAK,IAAIA,KAAK,CAAC9K,MAAf,GAAwB8K,KAAK,CAAC,CAAD,CAA7B,GAAmC+E,kBAAzC;EACH,OAFD,MAGK;EACDpL,QAAAA,KAAK,GAAGqG,KAAK,CAACgF,CAAC,GAAG,CAAL,CAAb;EACApL,QAAAA,GAAG,GAAGoG,KAAK,CAACgF,CAAD,CAAL,IAAYD,kBAAlB;EACH;;EAED6D,MAAAA,UAAU,IAAI,CAAChP,GAAG,GAAGD,KAAP,IAAgB,CAAhB,IAAqB6N,SAAS,GAAG,CAAjC,CAAd;EAEA,UAAMqB,mBAAmB,GAAG,CAACjP,GAAG,GAAGD,KAAP,KAAiBuL,IAAI,CAACI,UAAL,GAAkB,CAAlB,GAAsB,CAAvC,CAA5B;EACAmD,MAAAA,WAAW,IAAII,mBAAmB,GAAGrB,SAAtB;EAAA,SAER,CAACtC,IAAI,CAACK,WAAN,GAAoBF,aAAa,GAAGwD,mBAAhB,GAAsC,CAA1D,GAA8D,CAFtD,CAAf;EAGH;EACJ;;EAED,MAAMpQ,IAAI,GAAG;EACTxH,IAAAA,QAAQ,EAAE,IAAIiF,YAAJ,CAAiBuS,WAAW,GAAG,CAA/B,CADD;EAETlT,IAAAA,OAAO,EAAE,KAAKkT,WAAW,GAAG,MAAd,GAAuB3S,WAAvB,GAAqCgT,WAA1C,EAAuDF,UAAvD,CAFA;EAGT5S,IAAAA,EAAE,EAAE,IAAIE,YAAJ,CAAiBuS,WAAW,GAAG,CAA/B;EAHK,GAAb;EAMA,MAAM5B,OAAO,GAAG;EACZQ,IAAAA,MAAM,EAAE,CADI;EACD5R,IAAAA,KAAK,EAAE;EADN,GAAhB;;EAIA,OAAK,IAAI0K,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwI,YAAY,CAACzT,MAAjC,EAAyCiL,CAAC,EAA1C,EAA8C;EAC1CmI,IAAAA,eAAe,CAACK,YAAY,CAACxI,CAAD,CAAb,EAAkB1H,IAAlB,EAAwBoO,OAAxB,EAAiC3B,IAAjC,CAAf;EACH;;EAED,OAAK,IAAI/E,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGwI,YAAY,CAACzT,MAAjC,EAAyCiL,EAAC,EAA1C,EAA8C;EAAA,2BAChBwI,YAAY,CAACxI,EAAD,CADI;EAAA,QACnCH,KADmC,oBACnCA,KADmC;EAAA,QAC5BD,QAD4B,oBAC5BA,QAD4B;EAE1C,QAAMgJ,cAAc,GAAGhJ,QAAQ,CAAC7K,MAAT,GAAkB,CAAzC;EAEA,QAAIyE,MAAK,GAAG,CAAZ;;EACA,QAAIC,IAAG,GAAIoG,KAAK,IAAIA,KAAK,CAAC9K,MAAhB,GAA0B8K,KAAK,CAAC,CAAD,CAA/B,GAAqC+I,cAA/C,CAL0C;;;EAO1CnC,IAAAA,cAAc,CAACnO,IAAD,EAAOkQ,YAAY,CAACxI,EAAD,CAAnB,EAAwBxG,MAAxB,EAA+BC,IAA/B,EAAoCiN,OAApC,EAA6C3B,IAA7C,CAAd,CAP0C;;EAS1C,QAAIlF,KAAJ,EAAW;EACP,WAAK,IAAIgF,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGhF,KAAK,CAAC9K,MAA1B,EAAkC8P,EAAC,EAAnC,EAAuC;EACnCrL,QAAAA,MAAK,GAAGqG,KAAK,CAACgF,EAAD,CAAb;EACApL,QAAAA,IAAG,GAAGoG,KAAK,CAACgF,EAAC,GAAG,CAAL,CAAL,IAAgB+D,cAAtB;EACAnC,QAAAA,cAAc,CAACnO,IAAD,EAAOkQ,YAAY,CAACxI,EAAD,CAAnB,EAAwBxG,MAAxB,EAA+BC,IAA/B,EAAoCiN,OAApC,EAA6C3B,IAA7C,CAAd;EACH;EACJ;EACJ,GAhEwD;;;EAmEzD,OAAK,IAAIjQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwD,IAAI,CAACzC,EAAL,CAAQd,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;EACrC,QAAM+T,GAAG,GAAGvQ,IAAI,CAACzC,EAAL,CAAQf,CAAR,CAAZ;;EACA,QAAI+T,GAAG,GAAG,CAAN,IAAW7R,IAAI,CAACqO,KAAL,CAAWwD,GAAX,MAAoBA,GAAnC,EAAwC;EACpCvQ,MAAAA,IAAI,CAACzC,EAAL,CAAQf,CAAR,IAAa,CAAb;EACH,KAFD,MAGK;EACDwD,MAAAA,IAAI,CAACzC,EAAL,CAAQf,CAAR,IAAa+T,GAAG,GAAG,CAAnB;EACH;EACJ;;EAEDvQ,EAAAA,IAAI,CAAC1C,MAAL,GAAckQ,cAAc,CAACxN,IAAI,CAAClD,OAAN,EAAekD,IAAI,CAACxH,QAApB,CAA5B,CA7EyD;;EA+EzDwH,EAAAA,IAAI,CAACgN,YAAL,GAAoBkD,YAAY,CAAC,CAAD,CAAZ,IAAmBA,YAAY,CAAC,CAAD,CAAZ,CAAgB5B,IAAvD;EAEA,SAAOtO,IAAP;EACH;;EAED,SAASwQ,oCAAT,CAA8CC,QAA9C,EAAwDC,WAAxD,EAAqEjE,IAArE,EAA2E;EACvE,MAAMkE,SAAS,GAAGlE,IAAI,CAACkE,SAAvB;EACA,MAAMC,UAAU,GAAGH,QAAQ,CAAChU,MAA5B;EACA,MAAMwL,MAAM,GAAG,IAAIxK,YAAJ,CAAiBmT,UAAU,GAAG,CAA9B,CAAf;EACA,MAAM3D,SAAS,GAAGR,IAAI,CAACQ,SAAL,IAAkB,CAAC,CAAD,EAAI,CAAJ,CAApC;EACA,MAAMvS,QAAK,GAAG+R,IAAI,CAAC/R,KAAL,IAAc,CAAC,CAAD,EAAI,CAAJ,CAA5B;;EACA,OAAK,IAAI8B,CAAC,GAAG,CAAR,EAAWyS,CAAC,GAAG,CAApB,EAAuBzS,CAAC,GAAGoU,UAA3B,EAAuCpU,CAAC,EAAxC,EAA4C;EACxCyL,IAAAA,MAAM,CAACgH,CAAC,EAAF,CAAN,GAAcwB,QAAQ,CAACjU,CAAD,CAAR,CAAY,CAAZ,IAAiB9B,QAAK,CAAC,CAAD,CAAtB,GAA4BuS,SAAS,CAAC,CAAD,CAAnD;EACAhF,IAAAA,MAAM,CAACgH,CAAC,EAAF,CAAN,GAAcwB,QAAQ,CAACjU,CAAD,CAAR,CAAY,CAAZ,IAAiB9B,QAAK,CAAC,CAAD,CAAtB,GAA4BuS,SAAS,CAAC,CAAD,CAAnD;EACH;;EAED,MAAInL,MAAI,CAACmG,MAAD,EAAS,CAAT,EAAY2I,UAAZ,CAAJ,GAA8B,CAAlC,EAAqC;EACjC1E,IAAAA,aAAa,CAACjE,MAAD,EAAS,CAAT,EAAY,CAAZ,EAAe2I,UAAf,CAAb;EACH;;EAED,MAAMC,YAAY,GAAG,EAArB;EACA,MAAMC,aAAa,GAAG,EAAtB;EACA,MAAMjG,UAAU,GAAG4B,IAAI,CAAC5B,UAAxB;EACA,MAAMkG,iBAAiB,GAAGpG,kBAAkB,CACxC1C,MADwC,EAChC6I,aADgC,EACjB,CADiB,EACdF,UADc,EACF,CADE,EACC,CAACD,SAAD,GAAa,CADd,EACiB9F,UADjB,EAC6B,KAD7B,CAA5C;EAGAqB,EAAAA,aAAa,CAACjE,MAAD,EAAS,CAAT,EAAY,CAAZ,EAAe2I,UAAf,CAAb;EACA,MAAMI,gBAAgB,GAAGrG,kBAAkB,CACvC1C,MADuC,EAC/B4I,YAD+B,EACjB,CADiB,EACdD,UADc,EACF,CADE,EACC,CAACD,SAAD,GAAa,CADd,EACiB9F,UADjB,EAC6B,KAD7B,CAA3C;EAIA,MAAMyB,kBAAkB,GAAG,CAACuE,YAAY,CAACpU,MAAb,GAAsBqU,aAAa,CAACrU,MAArC,IAA+C,CAA1E;EACA,MAAMwU,eAAe,GAAG,IAAIxT,YAAJ,CAAiB6O,kBAAkB,GAAG,CAAtC,CAAxB;EAEA,MAAIvO,MAAM,GAAG,CAAb;EACA,MAAMmT,iBAAiB,GAAGJ,aAAa,CAACrU,MAAd,GAAuB,CAAjD;;EACA,OAAK,IAAID,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGsU,aAAa,CAACrU,MAAlC,EAA0CD,GAAC,EAA3C,EAA+C;EAC3CyU,IAAAA,eAAe,CAAClT,MAAM,EAAP,CAAf,GAA4B+S,aAAa,CAACtU,GAAD,CAAzC;EACH;;EACD,OAAK,IAAIA,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGqU,YAAY,CAACpU,MAAjC,EAAyCD,GAAC,EAA1C,EAA8C;EAC1CyU,IAAAA,eAAe,CAAClT,MAAM,EAAP,CAAf,GAA4B8S,YAAY,CAACrU,GAAD,CAAxC;EACH,GApCsE;;;EAuCvE,MAAMM,OAAO,GAAG,KAAKwP,kBAAkB,GAAG,MAArB,GAA8BjP,WAA9B,GAA4CgT,WAAjD,EACZ,CAAC,CAACO,UAAU,GAAG,CAAd,IAAmB,CAAnB,IAAwBtE,kBAAkB,GAAGsE,UAAU,GAAG,CAA1D,CAAD,IAAiE,CADrD,CAAhB;EAGA,MAAIO,GAAG,GAAG,CAAV;;EACA,OAAK,IAAI3U,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGoU,UAAU,GAAG,CAAjC,EAAoCpU,GAAC,EAArC,EAAyC;EACrC,QAAMwR,EAAE,GAAGxR,GAAC,GAAG,CAAf;EACAM,IAAAA,OAAO,CAACqU,GAAG,EAAJ,CAAP,GAAiBD,iBAAiB,GAAG,CAApB,GAAwBH,iBAAiB,CAACvU,GAAD,CAA1D;EACAM,IAAAA,OAAO,CAACqU,GAAG,EAAJ,CAAP,GAAiBD,iBAAiB,GAAG,CAApB,GAAwBH,iBAAiB,CAACvU,GAAD,CAAzC,GAA+C,CAAhE;EACAM,IAAAA,OAAO,CAACqU,GAAG,EAAJ,CAAP,GAAiBH,gBAAgB,CAACxU,GAAD,CAAhB,GAAsB,CAAtB,GAA0B0U,iBAA3C;EAEApU,IAAAA,OAAO,CAACqU,GAAG,EAAJ,CAAP,GAAiBD,iBAAiB,GAAG,CAApB,GAAwBH,iBAAiB,CAACvU,GAAD,CAA1D;EACAM,IAAAA,OAAO,CAACqU,GAAG,EAAJ,CAAP,GAAiBH,gBAAgB,CAACxU,GAAD,CAAhB,GAAsB,CAAtB,GAA0B0U,iBAA3C;EACApU,IAAAA,OAAO,CAACqU,GAAG,EAAJ,CAAP,GAAiBH,gBAAgB,CAACxU,GAAD,CAAhB,GAAsB0U,iBAAvC;;EAEA,QAAIF,gBAAgB,CAAChD,EAAD,CAAhB,GAAuBgD,gBAAgB,CAACxU,GAAD,CAAvC,KAA+C,CAAnD,EAAsD;EAClDM,MAAAA,OAAO,CAACqU,GAAG,EAAJ,CAAP,GAAiBH,gBAAgB,CAACxU,GAAD,CAAhB,GAAsB,CAAtB,GAA0B0U,iBAA3C;EACApU,MAAAA,OAAO,CAACqU,GAAG,EAAJ,CAAP,GAAiBH,gBAAgB,CAACxU,GAAD,CAAhB,GAAsB,CAAtB,GAA0B0U,iBAA3C;EACApU,MAAAA,OAAO,CAACqU,GAAG,EAAJ,CAAP,GAAiBD,iBAAiB,GAAGH,iBAAiB,CAAC/C,EAAD,CAArC,GAA4C,CAA7D;EACH,KAJD,MAKK,IAAI+C,iBAAiB,CAAC/C,EAAD,CAAjB,GAAwB+C,iBAAiB,CAACvU,GAAD,CAAzC,KAAiD,CAArD,EAAwD;EACzDM,MAAAA,OAAO,CAACqU,GAAG,EAAJ,CAAP,GAAiBH,gBAAgB,CAAChD,EAAD,CAAhB,GAAuBkD,iBAAxC;EACApU,MAAAA,OAAO,CAACqU,GAAG,EAAJ,CAAP,GAAiBD,iBAAiB,GAAG,CAApB,IAAyBH,iBAAiB,CAACvU,GAAD,CAAjB,GAAuB,CAAhD,CAAjB;EACAM,MAAAA,OAAO,CAACqU,GAAG,EAAJ,CAAP,GAAiBD,iBAAiB,GAAG,CAApB,IAAyBH,iBAAiB,CAACvU,GAAD,CAAjB,GAAuB,CAAhD,CAAjB;EACH;EACJ;;EAED,MAAM6R,WAAW,GAAG5B,IAAI,CAACE,SAAL,GAAiB,CAAjB,GACdZ,aAAa,CAACkF,eAAD,EAAkB,EAAlB,EAAsBxE,IAAI,CAACE,SAA3B,EAAsC,IAAtC,EAA4C,IAA5C,CADC,GACmDsE,eADvE;EAEA,MAAMjE,YAAY,GAAGP,IAAI,CAACO,YAA1B;EACA,SAAO;EACH1F,IAAAA,QAAQ,EAAE2J,eADP;EAEHnU,IAAAA,OAAO,EAAPA,OAFG;EAGHuR,IAAAA,WAAW,EAAXA,WAHG;EAIHC,IAAAA,IAAI,EAAE;EACF/V,MAAAA,CAAC,EAAEyU,YAAY,CAACzU,CAAb,GAAiBmC,QAAK,CAAC,CAAD,CAAtB,GAA4BuS,SAAS,CAAC,CAAD,CADtC;EAEF5N,MAAAA,CAAC,EAAE2N,YAAY,CAAC3N,CAAb,GAAiB3E,QAAK,CAAC,CAAD,CAAtB,GAA4BuS,SAAS,CAAC,CAAD,CAFtC;EAGFK,MAAAA,KAAK,EAAEN,YAAY,CAACM,KAAb,GAAqB5S,QAAK,CAAC,CAAD,CAH/B;EAIF0D,MAAAA,MAAM,EAAE4O,YAAY,CAAC5O,MAAb,GAAsB1D,QAAK,CAAC,CAAD;EAJjC,KAJH;EAUHgS,IAAAA,KAAK,EAAE,OAAOD,IAAI,CAACC,KAAZ,KAAsB,UAAtB,GAAmCD,IAAI,CAACC,KAAL,CAAWgE,WAAX,CAAnC,GAA6DjE,IAAI,CAACC,KAVtE;EAWHnF,IAAAA,KAAK,EAAE;EAXJ,GAAP;EAaH;;EAED,SAAS6J,0BAAT,CAAoCpZ,OAApC,EAA6CqZ,OAA7C,EAAsD;EAClD,MAAMC,UAAU,GAAG,EAAnB;;EACA,OAAK,IAAIrC,CAAC,GAAI,CAAd,EAAiBA,CAAC,GAAGjX,OAAO,CAACyE,MAA7B,EAAqCwS,CAAC,EAAtC,EAA0C;EACtC,QAAMhH,MAAM,GAAGjQ,OAAO,CAACiX,CAAD,CAAtB;EACA,QAAM7G,SAAS,GAAG,EAAlB;EACA,QAAMrL,GAAG,GAAGkL,MAAM,CAACxL,MAAnB;EACA,QAAI+N,EAAE,GAAGvC,MAAM,CAAClL,GAAG,GAAG,CAAP,CAAN,CAAgB,CAAhB,CAAT;EACA,QAAI0N,EAAE,GAAGxC,MAAM,CAAClL,GAAG,GAAG,CAAP,CAAN,CAAgB,CAAhB,CAAT;EACA,QAAI+O,IAAI,GAAG,CAAX;;EACA,SAAK,IAAItP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGO,GAApB,EAAyBP,CAAC,EAA1B,EAA8B;EAC1B,UAAI4O,EAAE,GAAGnD,MAAM,CAACzL,CAAD,CAAN,CAAU,CAAV,CAAT;EACA,UAAI6O,EAAE,GAAGpD,MAAM,CAACzL,CAAD,CAAN,CAAU,CAAV,CAAT;EACA,UAAMoL,EAAE,GAAGwD,EAAE,GAAGZ,EAAhB;EACA,UAAM3C,EAAE,GAAGwD,EAAE,GAAGZ,EAAhB;EACAqB,MAAAA,IAAI,IAAIpN,IAAI,CAAC2K,IAAL,CAAUzB,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAzB,CAAR;;EACA,UAAIiE,IAAI,GAAGuF,OAAX,EAAoB;EAChBjJ,QAAAA,SAAS,CAAC1L,IAAV,CAAeuL,MAAM,CAACzL,CAAD,CAArB;EACAsP,QAAAA,IAAI,GAAG,CAAP;EACH;;EACDtB,MAAAA,EAAE,GAAGY,EAAL;EACAX,MAAAA,EAAE,GAAGY,EAAL;EACH;;EACD,QAAIjD,SAAS,CAAC3L,MAAV,IAAoB,CAAxB,EAA2B;EACvB6U,MAAAA,UAAU,CAAC5U,IAAX,CAAgB0L,SAAhB;EACH;EACJ;;EACD,SAAOkJ,UAAU,CAAC7U,MAAX,GAAoB,CAApB,GAAwB6U,UAAxB,GAAqC,IAA5C;EACH;;EAED,SAASC,eAAT,CAAyBvZ,OAAzB,EAAkC6Q,SAAlC,EAA6C;EACzC,MAAMyI,UAAU,GAAG,EAAnB;;EACA,OAAK,IAAIrC,CAAC,GAAI,CAAd,EAAiBA,CAAC,GAAGjX,OAAO,CAACyE,MAA7B,EAAqCwS,CAAC,EAAtC,EAA0C;EACtC,QAAIhH,MAAM,GAAGjQ,OAAO,CAACiX,CAAD,CAApB;EACAhH,IAAAA,MAAM,GAAGuJ,QAAU,CAACvJ,MAAD,EAASY,SAAT,EAAoB,IAApB,CAAnB;;EACA,QAAIZ,MAAM,CAACxL,MAAP,IAAiB,CAArB,EAAwB;EACpB6U,MAAAA,UAAU,CAAC5U,IAAX,CAAgBuL,MAAhB;EACH;EACJ;;EACD,SAAOqJ,UAAU,CAAC7U,MAAX,GAAoB,CAApB,GAAwB6U,UAAxB,GAAqC,IAA5C;EACH;EACD;;;;;;;;;;;;;;;;;;;AAiBA,EAAO,SAASG,cAAT,CAAwBC,QAAxB,EAAkCjF,IAAlC,EAAwC;EAE3CA,EAAAA,IAAI,GAAG/U,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB8U,IAAlB,CAAP;EAEA,MAAMjG,GAAG,GAAG,CAACrC,QAAD,EAAWA,QAAX,CAAZ;EACA,MAAMnD,GAAG,GAAG,CAAC,CAACmD,QAAF,EAAY,CAACA,QAAb,CAAZ;;EACA,OAAK,IAAI3H,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkV,QAAQ,CAACjV,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;EACtCmV,IAAAA,kBAAkB,CAACD,QAAQ,CAAClV,CAAD,CAAR,CAAY,CAAZ,CAAD,EAAiBgK,GAAjB,EAAsBxF,GAAtB,CAAlB;EACH;;EACDyL,EAAAA,IAAI,CAACO,YAAL,GAAoBP,IAAI,CAACO,YAAL,IAAqB;EACrCzU,IAAAA,CAAC,EAAEiO,GAAG,CAAC,CAAD,CAD+B;EAC1BnH,IAAAA,CAAC,EAAEmH,GAAG,CAAC,CAAD,CADoB;EACf8G,IAAAA,KAAK,EAAEtM,GAAG,CAAC,CAAD,CAAH,GAASwF,GAAG,CAAC,CAAD,CADJ;EACSpI,IAAAA,MAAM,EAAE4C,GAAG,CAAC,CAAD,CAAH,GAASwF,GAAG,CAAC,CAAD;EAD7B,GAAzC;EAIAgG,EAAAA,aAAa,CAACC,IAAD,CAAb;EAEA,MAAMyD,YAAY,GAAG,EAArB;EACA,MAAMjD,SAAS,GAAGR,IAAI,CAACQ,SAAL,IAAkB,CAAC,CAAD,EAAI,CAAJ,CAApC;EACA,MAAMvS,QAAK,GAAG+R,IAAI,CAAC/R,KAAL,IAAc,CAAC,CAAD,EAAI,CAAJ,CAA5B;EACA,MAAMsS,YAAY,GAAGP,IAAI,CAACO,YAA1B;EACA,MAAM4E,cAAc,GAAG;EACnBrZ,IAAAA,CAAC,EAAEyU,YAAY,CAACzU,CAAb,GAAiBmC,QAAK,CAAC,CAAD,CAAtB,GAA4BuS,SAAS,CAAC,CAAD,CADrB;EAEnB5N,IAAAA,CAAC,EAAE2N,YAAY,CAAC3N,CAAb,GAAiB3E,QAAK,CAAC,CAAD,CAAtB,GAA4BuS,SAAS,CAAC,CAAD,CAFrB;EAGnBK,IAAAA,KAAK,EAAEN,YAAY,CAACM,KAAb,GAAqB5S,QAAK,CAAC,CAAD,CAHd;EAInB0D,IAAAA,MAAM,EAAE4O,YAAY,CAAC5O,MAAb,GAAsB1D,QAAK,CAAC,CAAD;EAJhB,GAAvB;EAOA,MAAM2W,OAAO,GAAG3S,IAAI,CAAC8H,GAAL,CACZwG,YAAY,CAACM,KADD,EACQN,YAAY,CAAC5O,MADrB,IAEZ,GAFJ;;EAGA,OAAK,IAAI5B,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGkV,QAAQ,CAACjV,MAA7B,EAAqCD,GAAC,EAAtC,EAA0C;EACtC,QAAI8U,UAAU,GAAGF,0BAA0B,CAACM,QAAQ,CAAClV,GAAD,CAAT,EAAc6U,OAAd,CAA3C;;EACA,QAAI,CAACC,UAAL,EAAiB;EACb;EACH;;EACD,QAAMO,iBAAiB,GAAGpF,IAAI,CAAC7D,QAAL,GAAgBlK,IAAI,CAACsC,GAAL,CAAStG,QAAK,CAAC,CAAD,CAAd,EAAmBA,QAAK,CAAC,CAAD,CAAxB,CAA1C;;EACA,QAAImX,iBAAiB,GAAG,CAAxB,EAA2B;EACvBP,MAAAA,UAAU,GAAGC,eAAe,CAACD,UAAD,EAAaO,iBAAb,CAA5B;EACH;;EACD,QAAI,CAACP,UAAL,EAAiB;EACb;EACH;;EAXqC,0BAaAvR,QAAM,CAACqH,OAAP,CAAekK,UAAf,CAbA;EAAA,QAa/BhK,QAb+B,mBAa/BA,QAb+B;EAAA,QAarBC,KAbqB,mBAarBA,KAbqB;EAAA,QAadC,UAbc,mBAadA,UAbc;;EAetC,SAAK,IAAIyH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG3H,QAAQ,CAAC7K,MAA7B,GAAsC;EAClC6K,MAAAA,QAAQ,CAAC2H,CAAD,CAAR,GAAc3H,QAAQ,CAAC2H,CAAC,EAAF,CAAR,GAAgBvU,QAAK,CAAC,CAAD,CAArB,GAA2BuS,SAAS,CAAC,CAAD,CAAlD;EACA3F,MAAAA,QAAQ,CAAC2H,CAAD,CAAR,GAAc3H,QAAQ,CAAC2H,CAAC,EAAF,CAAR,GAAgBvU,QAAK,CAAC,CAAD,CAArB,GAA2BuS,SAAS,CAAC,CAAD,CAAlD;EACH;;EAEDZ,IAAAA,kBAAkB,CAAC/E,QAAD,EAAWC,KAAX,CAAlB;;EAEA,QAAIC,UAAU,KAAK,CAAnB,EAAsB;EAClB,YAAM,IAAIzS,KAAJ,CAAU,sCAAV,CAAN;EACH;;EACD,QAAMsZ,WAAW,GAAG5B,IAAI,CAACE,SAAL,GAAiB,CAAjB,GACdZ,aAAa,CAACzE,QAAD,EAAWC,KAAX,EAAkBkF,IAAI,CAACE,SAAvB,EAAkC,IAAlC,EAAwC,IAAxC,CADC,GAC+CrF,QADnE;EAEA,QAAMxK,OAAO,GAAG4N,WAAW,CAAC2D,WAAD,EAAc9G,KAAd,EAAqBC,UAArB,CAA3B;EACA0I,IAAAA,YAAY,CAACxT,IAAb,CAAkB;EACdI,MAAAA,OAAO,EAAPA,OADc;EAEdwK,MAAAA,QAAQ,EAARA,QAFc;EAGd+G,MAAAA,WAAW,EAAXA,WAHc;EAId9G,MAAAA,KAAK,EAALA,KAJc;EAKd+G,MAAAA,IAAI,EAAEsD,cALQ;EAMdlF,MAAAA,KAAK,EAAE,OAAOD,IAAI,CAACC,KAAZ,KAAsB,UAAtB,GAAmCD,IAAI,CAACC,KAAL,CAAWlQ,GAAX,CAAnC,GAAmDiQ,IAAI,CAACC;EANjD,KAAlB;EAQH;;EACD,SAAOuD,+BAA+B,CAACC,YAAD,EAAezD,IAAf,CAAtC;EACH;AAAA,EAED;;;;;;;;;;;;;;;;;;;;AAmBA,EAAO,SAASqF,eAAT,CAAyBC,SAAzB,EAAoCtF,IAApC,EAA0C;EAE7CA,EAAAA,IAAI,GAAG/U,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB8U,IAAlB,CAAP;EAEA,MAAMjG,GAAG,GAAG,CAACrC,QAAD,EAAWA,QAAX,CAAZ;EACA,MAAMnD,GAAG,GAAG,CAAC,CAACmD,QAAF,EAAY,CAACA,QAAb,CAAZ;;EACA,OAAK,IAAI3H,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuV,SAAS,CAACtV,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;EACvCmV,IAAAA,kBAAkB,CAACI,SAAS,CAACvV,CAAD,CAAV,EAAegK,GAAf,EAAoBxF,GAApB,CAAlB;EACH;;EACDyL,EAAAA,IAAI,CAACO,YAAL,GAAoBP,IAAI,CAACO,YAAL,IAAqB;EACrCzU,IAAAA,CAAC,EAAEiO,GAAG,CAAC,CAAD,CAD+B;EAC1BnH,IAAAA,CAAC,EAAEmH,GAAG,CAAC,CAAD,CADoB;EACf8G,IAAAA,KAAK,EAAEtM,GAAG,CAAC,CAAD,CAAH,GAASwF,GAAG,CAAC,CAAD,CADJ;EACSpI,IAAAA,MAAM,EAAE4C,GAAG,CAAC,CAAD,CAAH,GAASwF,GAAG,CAAC,CAAD;EAD7B,GAAzC;EAIAgG,EAAAA,aAAa,CAACC,IAAD,CAAb;EACA,MAAM/R,QAAK,GAAG+R,IAAI,CAAC/R,KAAL,IAAc,CAAC,CAAD,EAAI,CAAJ,CAA5B;;EAEA,MAAI+R,IAAI,CAACkE,SAAL,IAAkB,IAAtB,EAA4B;EACxBlE,IAAAA,IAAI,CAACkE,SAAL,GAAiB,CAAjB;EACH;;EACD,MAAIlE,IAAI,CAAC5B,UAAL,IAAmB,IAAvB,EAA6B;EACzB4B,IAAAA,IAAI,CAAC5B,UAAL,GAAkB,CAAlB;EACH;;EACD,MAAMqF,YAAY,GAAG,EAArB,CAtB6C;;EAwB7C,OAAK,IAAI1T,IAAC,GAAG,CAAb,EAAgBA,IAAC,GAAGuV,SAAS,CAACtV,MAA9B,EAAsCD,IAAC,EAAvC,EAA2C;EACvC,QAAIwV,WAAW,GAAGD,SAAS,CAACvV,IAAD,CAA3B;EACA,QAAMqV,iBAAiB,GAAGpF,IAAI,CAAC7D,QAAL,GAAgBlK,IAAI,CAACsC,GAAL,CAAStG,QAAK,CAAC,CAAD,CAAd,EAAmBA,QAAK,CAAC,CAAD,CAAxB,CAA1C;;EACA,QAAImX,iBAAiB,GAAG,CAAxB,EAA2B;EACvBG,MAAAA,WAAW,GAAGR,QAAU,CAACQ,WAAD,EAAcH,iBAAd,EAAiC,IAAjC,CAAxB;EACH;;EACD3B,IAAAA,YAAY,CAACxT,IAAb,CAAkB8T,oCAAoC,CAACwB,WAAD,EAAcxV,IAAd,EAAiBiQ,IAAjB,CAAtD;EACH;;EAED,SAAOwD,+BAA+B,CAACC,YAAD,EAAezD,IAAf,CAAtC;EACH;;EAED,SAASkF,kBAAT,CAA4B1J,MAA5B,EAAoCzB,GAApC,EAAyCxF,GAAzC,EAA8C;EAC1C,OAAK,IAAIxE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyL,MAAM,CAACxL,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;EACpCgK,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS9H,IAAI,CAAC8H,GAAL,CAASyB,MAAM,CAACzL,CAAD,CAAN,CAAU,CAAV,CAAT,EAAuBgK,GAAG,CAAC,CAAD,CAA1B,CAAT;EACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS9H,IAAI,CAAC8H,GAAL,CAASyB,MAAM,CAACzL,CAAD,CAAN,CAAU,CAAV,CAAT,EAAuBgK,GAAG,CAAC,CAAD,CAA1B,CAAT;EACAxF,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAStC,IAAI,CAACsC,GAAL,CAASiH,MAAM,CAACzL,CAAD,CAAN,CAAU,CAAV,CAAT,EAAuBwE,GAAG,CAAC,CAAD,CAA1B,CAAT;EACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAStC,IAAI,CAACsC,GAAL,CAASiH,MAAM,CAACzL,CAAD,CAAN,CAAU,CAAV,CAAT,EAAuBwE,GAAG,CAAC,CAAD,CAA1B,CAAT;EACH;EACJ;;EC3xBD;AACA,EAEA,IAAMiR,KAAK,GAAG,CAAC,OAAD,EAAU,YAAV,EAAwB,YAAxB,EAAsC,iBAAtC,EAAyD,SAAzD,EAAoE,cAApE,CAAd;;EAEA,SAASC,cAAT,CAAwBC,OAAxB,EAAsC;EAAA,MAAdA,OAAc;EAAdA,IAAAA,OAAc,GAAJ,EAAI;EAAA;;EAClC,MAAMla,QAAQ,GAAGka,OAAO,CAACla,QAAR,IAAoB,EAArC;EACA,SAAOA,QAAQ,CAACma,IAAhB;EACH;;AAGD,EAAO,SAASC,SAAT,CAAmBF,OAAnB,EAAiC;EAAA,MAAdA,OAAc;EAAdA,IAAAA,OAAc,GAAJ,EAAI;EAAA;;EACpC,MAAMC,IAAI,GAAGF,cAAc,CAACC,OAAD,CAA3B;;EACA,MAAIC,IAAJ,EAAU;EACN,SAAK,IAAI5V,CAAC,GAAG,CAAR,EAAWO,GAAG,GAAGkV,KAAK,CAACxV,MAA5B,EAAoCD,CAAC,GAAGO,GAAxC,EAA6CP,CAAC,EAA9C,EAAkD;EAC9C,UAAIyV,KAAK,CAACzV,CAAD,CAAL,KAAa4V,IAAjB,EAAuB;EACnB,eAAO,IAAP;EACH;EACJ;EACJ;;EACD,SAAO,KAAP;EACH;AAGD,EAAO,SAASE,gBAAT,CAA0BH,OAA1B,EAAwC;EAAA,MAAdA,OAAc;EAAdA,IAAAA,OAAc,GAAJ,EAAI;EAAA;;EAC3C,MAAMC,IAAI,GAAGF,cAAc,CAACC,OAAD,CAA3B;;EACA,MAAIC,IAAI,KAAKA,IAAI,KAAKH,KAAK,CAAC,CAAD,CAAd,IAAqBG,IAAI,KAAKH,KAAK,CAAC,CAAD,CAAxC,CAAR,EAAsD;EAClD,WAAO,IAAP;EACH;;EACD,SAAO,KAAP;EACH;AAED,EAAO,SAASM,aAAT,CAAuBJ,OAAvB,EAAqC;EAAA,MAAdA,OAAc;EAAdA,IAAAA,OAAc,GAAJ,EAAI;EAAA;;EACxC,MAAMC,IAAI,GAAGF,cAAc,CAACC,OAAD,CAA3B;;EACA,MAAIC,IAAI,KAAKA,IAAI,KAAKH,KAAK,CAAC,CAAD,CAAd,IAAqBG,IAAI,KAAKH,KAAK,CAAC,CAAD,CAAxC,CAAR,EAAsD;EAClD,WAAO,IAAP;EACH;;EACD,SAAO,KAAP;EACH;AAED,EAAO,SAASO,cAAT,CAAwBL,OAAxB,EAAsC;EAAA,MAAdA,OAAc;EAAdA,IAAAA,OAAc,GAAJ,EAAI;EAAA;;EACzC,MAAMC,IAAI,GAAGF,cAAc,CAACC,OAAD,CAA3B;;EACA,MAAIC,IAAI,KAAKA,IAAI,KAAKH,KAAK,CAAC,CAAD,CAAd,IAAqBG,IAAI,KAAKH,KAAK,CAAC,CAAD,CAAxC,CAAR,EAAsD;EAClD,WAAO,IAAP;EACH;;EACD,SAAO,KAAP;EACH;AAED,EAAO,SAASQ,cAAT,CAAwBN,OAAxB,EAAsC;EAAA,MAAdA,OAAc;EAAdA,IAAAA,OAAc,GAAJ,EAAI;EAAA;;EACzC,MAAMC,IAAI,GAAGF,cAAc,CAACC,OAAD,CAA3B;;EACA,MAAIC,IAAJ,EAAU;EACN,QAAIA,IAAI,CAACM,OAAL,CAAa,OAAb,IAAwB,CAAC,CAA7B,EAAgC;EAC5B,aAAO,IAAP;EACH;EACJ;;EACD,SAAO,KAAP;EACH;AAED,EAAO,SAASC,qBAAT,CAA+BR,OAA/B,EAA6C;EAAA,MAAdA,OAAc;EAAdA,IAAAA,OAAc,GAAJ,EAAI;EAAA;;EAChD,MAAMla,QAAQ,GAAGka,OAAO,CAACla,QAAR,IAAoB,EAArC;EACA,SAAOA,QAAQ,CAAC2a,WAAT,IAAwB,EAA/B;EACH;AAGD,EAAO,SAASC,gBAAT,CAA0BV,OAA1B,EAAwC;EAAA,MAAdA,OAAc;EAAdA,IAAAA,OAAc,GAAJ,EAAI;EAAA;;EAC3C,MAAMC,IAAI,GAAGF,cAAc,CAACC,OAAD,CAA3B;;EACA,MAAI,CAACC,IAAL,EAAW;EACP,WAAO,IAAP;EACH;;EACD,MAAMna,QAAQ,GAAGka,OAAO,CAACla,QAAR,IAAoB,EAArC;EACA,MAAM2a,WAAW,GAAG3a,QAAQ,CAAC2a,WAA7B;;EACA,MAAI,CAACA,WAAL,EAAkB;EACd,WAAO,IAAP;EACH;;EACD,MAAME,MAAM,GAAG,EAAf;;EACA,UAAQV,IAAR;EACI,SAAK,OAAL;EAAc;EACVU,QAAAA,MAAM,CAACpW,IAAP,CAAYkW,WAAZ;EACA;EACH;;EACD,SAAK,YAAL;EACA,SAAK,YAAL;EAAmB;EACf,aAAK,IAAIpW,CAAC,GAAG,CAAR,EAAWO,GAAG,GAAG6V,WAAW,CAACnW,MAAlC,EAA0CD,CAAC,GAAGO,GAA9C,EAAmDP,CAAC,EAApD,EAAwD;EACpDsW,UAAAA,MAAM,CAACpW,IAAP,CAAYkW,WAAW,CAACpW,CAAD,CAAvB;EACH;;EACD;EACH;;EACD,SAAK,iBAAL;EACA,SAAK,SAAL;EAAgB;EACZ,aAAK,IAAIA,EAAC,GAAG,CAAR,EAAWO,IAAG,GAAG6V,WAAW,CAACnW,MAAlC,EAA0CD,EAAC,GAAGO,IAA9C,EAAmDP,EAAC,EAApD,EAAwD;EACpD,eAAK,IAAIS,CAAC,GAAG,CAAR,EAAWC,IAAI,GAAG0V,WAAW,CAACpW,EAAD,CAAX,CAAeC,MAAtC,EAA8CQ,CAAC,GAAGC,IAAlD,EAAwDD,CAAC,EAAzD,EAA6D;EACzD6V,YAAAA,MAAM,CAACpW,IAAP,CAAYkW,WAAW,CAACpW,EAAD,CAAX,CAAeS,CAAf,CAAZ;EACH;EACJ;;EACD;EACH;;EACD,SAAK,cAAL;EAAqB;EACjB,aAAK,IAAIT,GAAC,GAAG,CAAR,EAAWO,KAAG,GAAG6V,WAAW,CAACnW,MAAlC,EAA0CD,GAAC,GAAGO,KAA9C,EAAmDP,GAAC,EAApD,EAAwD;EACpD,eAAK,IAAIS,EAAC,GAAG,CAAR,EAAWC,KAAI,GAAG0V,WAAW,CAACpW,GAAD,CAAX,CAAeC,MAAtC,EAA8CQ,EAAC,GAAGC,KAAlD,EAAwDD,EAAC,EAAzD,EAA6D;EACzD,iBAAK,IAAImH,CAAC,GAAG,CAAR,EAAW2O,IAAI,GAAGH,WAAW,CAACpW,GAAD,CAAX,CAAeS,EAAf,EAAkBR,MAAzC,EAAiD2H,CAAC,GAAG2O,IAArD,EAA2D3O,CAAC,EAA5D,EAAgE;EAC5D0O,cAAAA,MAAM,CAACpW,IAAP,CAAYkW,WAAW,CAACpW,GAAD,CAAX,CAAeS,EAAf,EAAkBmH,CAAlB,CAAZ;EACH;EACJ;EACJ;;EACD;EACH;EA9BL;;EAgCA,MAAI1D,IAAI,GAAGyD,QAAX;EAAA,MAAqBxD,IAAI,GAAGwD,QAA5B;EAAA,MAAsCvD,IAAI,GAAG,CAACuD,QAA9C;EAAA,MAAwDtD,IAAI,GAAG,CAACsD,QAAhE;;EACA,OAAK,IAAI3H,GAAC,GAAG,CAAR,EAAWO,KAAG,GAAG+V,MAAM,CAACrW,MAA7B,EAAqCD,GAAC,GAAGO,KAAzC,EAA8CP,GAAC,EAA/C,EAAmD;EAC/C,QAAMgG,CAAC,GAAGsQ,MAAM,CAACtW,GAAD,CAAhB;EACA,QAAMjE,CAAC,GAAGiK,CAAC,CAAC,CAAD,CAAX;EAAA,QAAgBnD,CAAC,GAAGmD,CAAC,CAAC,CAAD,CAArB;EAEA9B,IAAAA,IAAI,GAAGhC,IAAI,CAAC8H,GAAL,CAAS9F,IAAT,EAAenI,CAAf,CAAP;EACAoI,IAAAA,IAAI,GAAGjC,IAAI,CAAC8H,GAAL,CAAS7F,IAAT,EAAetB,CAAf,CAAP;EACAuB,IAAAA,IAAI,GAAGlC,IAAI,CAACsC,GAAL,CAASJ,IAAT,EAAerI,CAAf,CAAP;EACAsI,IAAAA,IAAI,GAAGnC,IAAI,CAACsC,GAAL,CAASH,IAAT,EAAexB,CAAf,CAAP;EACH;;EACD,SAAO,IAAIrK,mBAAJ,CAAwB,CAAC0L,IAAI,GAAGE,IAAR,IAAgB,CAAxC,EAA2C,CAACD,IAAI,GAAGE,IAAR,IAAgB,CAA3D,CAAP;EACH;AAID,EAAO,SAASmS,kBAAT,CAA4Bb,OAA5B,EAA0C;EAAA,MAAdA,OAAc;EAAdA,IAAAA,OAAc,GAAJ,EAAI;EAAA;;EAC7C,MAAMC,IAAI,GAAGF,cAAc,CAACC,OAAD,CAA3B;;EACA,MAAI,CAACC,IAAL,EAAW;EACP,WAAO,IAAP;EACH;;EACD,MAAMna,QAAQ,GAAGka,OAAO,CAACla,QAAR,IAAoB,EAArC;EACA,MAAMX,UAAU,GAAG6a,OAAO,CAAC7a,UAAR,IAAsB,EAAzC;EACA,MAAMsb,WAAW,GAAG3a,QAAQ,CAAC2a,WAA7B;;EACA,MAAI,CAACA,WAAL,EAAkB;EACd,WAAO,IAAP;EACH;;EACD,MAAMK,QAAQ,GAAG,EAAjB;EACA,MAAIC,KAAJ;;EACA,UAAQd,IAAR;EACI,SAAK,YAAL;EAAmB;EACfc,QAAAA,KAAK,GAAG,OAAR;EACA;EACH;;EACD,SAAK,iBAAL;EAAwB;EACpBA,QAAAA,KAAK,GAAG,YAAR;EACA;EACH;;EACD,SAAK,cAAL;EAAqB;EACjBA,QAAAA,KAAK,GAAG,SAAR;EACA;EACH;EAZL;;EAcA,MAAIA,KAAJ,EAAW;EACP,SAAK,IAAI1W,CAAC,GAAG,CAAR,EAAWO,GAAG,GAAG6V,WAAW,CAACnW,MAAlC,EAA0CD,CAAC,GAAGO,GAA9C,EAAmDP,CAAC,EAApD,EAAwD;EACpDyW,MAAAA,QAAQ,CAACvW,IAAT,CAAc;EACV0V,QAAAA,IAAI,EAAE,SADI;EAEVna,QAAAA,QAAQ,EAAE;EACNma,UAAAA,IAAI,EAAEc,KADA;EAENN,UAAAA,WAAW,EAAEA,WAAW,CAACpW,CAAD;EAFlB,SAFA;EAMVlF,QAAAA,UAAU,EAAVA;EANU,OAAd;EAQH;EACJ,GAXD,MAWO;EACH2b,IAAAA,QAAQ,CAACvW,IAAT,CAAcyV,OAAd;EACH;;EACD,SAAOc,QAAP;EACH;;EC/JD,IAAME,KAAK,GAAG,GAAd;EAEA;;;;;;AAKA,EAAO,SAASC,eAAT,CAAyBrb,UAAzB,EAAqC3B,KAArC,EAA4Cid,MAA5C,EAAoD;EACvD,MAAMC,SAAS,GAAG,EAAlB;EACA,MAAMC,UAAU,GAAG,EAAnB;;EACA,MAAIC,KAAK,CAACC,OAAN,CAAc1b,UAAd,KAA6BA,UAAU,CAAC,CAAD,CAAV,YAAyBiB,aAA1D,EAAyE;EACrE,SAAK,IAAIwD,CAAC,GAAG,CAAR,EAAWO,GAAG,GAAGhF,UAAU,CAAC0E,MAAjC,EAAyCD,CAAC,GAAGO,GAA7C,EAAkDP,CAAC,EAAnD,EAAuD;EACnD,UAAMyC,CAAC,GAAGlH,UAAU,CAACyE,CAAD,CAApB;EACA8W,MAAAA,SAAS,CAAC5W,IAAV,CAAeuC,CAAC,CAAC1G,CAAjB,EAAoB0G,CAAC,CAACI,CAAtB,EAAyBJ,CAAC,CAAC5G,CAA3B;EACAkb,MAAAA,UAAU,CAAC7W,IAAX,CAAgBuC,CAAhB;EACH;EACJ,GAND,MAMO;EACH,QAAIuU,KAAK,CAACC,OAAN,CAAc1b,UAAd,CAAJ,EAA+B;EAC3BA,MAAAA,UAAU,GAAG,IAAI/C,mBAAJ,CAAwB+C,UAAxB,CAAb;EACH;;EACD,QAAMM,CAAC,GAAG,CAAV,CAJG;;EAMH,QAAIua,WAAJ,EAAiBc,IAAjB;;EACA,QAAIrB,SAAS,CAACta,UAAD,CAAb,EAA2B;EACvB6a,MAAAA,WAAW,GAAGD,qBAAqB,CAAC5a,UAAD,CAAnC;EACA2b,MAAAA,IAAI,GAAGb,gBAAgB,CAAC9a,UAAD,CAAvB;EACH,KAHD,MAGO;EACH6a,MAAAA,WAAW,GAAG7a,UAAU,CAAC4b,cAAX,EAAd;EACAD,MAAAA,IAAI,GAAG3b,UAAU,CAACF,SAAX,EAAP;EACH;;EACD,QAAM+b,QAAQ,GAAGxd,KAAK,CAACyJ,mBAAN,CAA0BwT,MAAM,IAAIK,IAApC,CAAjB;;EACA,SAAK,IAAIlX,EAAC,GAAG,CAAR,EAAWO,IAAG,GAAG6V,WAAW,CAACnW,MAAlC,EAA0CD,EAAC,GAAGO,IAA9C,EAAmDP,EAAC,EAApD,EAAwD;EACpD,UAAI1E,UAAU,GAAG8a,WAAW,CAACpW,EAAD,CAA5B;;EACA,UAAIgX,KAAK,CAACC,OAAN,CAAc3b,UAAd,CAAJ,EAA+B;EAC3BA,QAAAA,UAAU,GAAG,IAAI9C,mBAAJ,CAAwB8C,UAAxB,CAAb;EACH;;EACD,UAAMmH,EAAC,GAAG7I,KAAK,CAACyJ,mBAAN,CAA0B/H,UAA1B,EAAsCO,CAAtC,EAAyCwb,GAAzC,CAA6CD,QAA7C,CAAV;;EACAN,MAAAA,SAAS,CAAC5W,IAAV,CAAeuC,EAAC,CAAC1G,CAAjB,EAAoB0G,EAAC,CAACI,CAAtB,EAAyBJ,EAAC,CAAC5G,CAA3B;EACAkb,MAAAA,UAAU,CAAC7W,IAAX,CAAgBuC,EAAhB;EACH;EACJ;;EACD,SAAO;EACHqU,IAAAA,SAAS,EAAEA,SADR;EAEHC,IAAAA,UAAU,EAAEA;EAFT,GAAP;EAIH;EAID;;;;;;;;AAOA,EAAO,SAASO,sBAAT,CAAgC/b,UAAhC,EAA4C4Y,SAA5C,EAA2DjE,KAA3D,EAAsEtW,KAAtE,EAA6Eid,MAA7E,EAAqF;EAAA,MAAzC1C,SAAyC;EAAzCA,IAAAA,SAAyC,GAA7B,CAA6B;EAAA;;EAAA,MAA1BjE,KAA0B;EAA1BA,IAAAA,KAA0B,GAAlB,CAAkB;EAAA;;EACxF,MAAM4G,SAAS,GAAGF,eAAe,CAACrb,UAAD,EAAa3B,KAAb,EAAoBid,MAApB,CAAf,CAA2CE,UAA7D;EACA,MAAMQ,EAAE,GAAG,EAAX;;EACA,OAAK,IAAIvX,CAAC,GAAG,CAAR,EAAWO,GAAG,GAAGuW,SAAS,CAAC7W,MAAhC,EAAwCD,CAAC,GAAGO,GAA5C,EAAiDP,CAAC,EAAlD,EAAsD;EAClD,QAAMmF,CAAC,GAAG2R,SAAS,CAAC9W,CAAD,CAAnB;EACAuX,IAAAA,EAAE,CAACrX,IAAH,CAAQ,CAACiF,CAAC,CAACpJ,CAAH,EAAMoJ,CAAC,CAACtC,CAAR,CAAR;EACH;;EANuF,yBAWpFyS,eAAe,CAAC,CAACiC,EAAD,CAAD,EAAO;EACtBpD,IAAAA,SAAS,EAATA,SADsB;EAEtBjE,IAAAA,KAAK,EAALA;EAFsB,GAAP,CAXqE;EAAA,MAQpF5P,OARoF,oBAQpFA,OARoF;EAAA,MASpFtE,QAToF,oBASpFA,QAToF;EAAA,MAUpF8E,MAVoF,oBAUpFA,MAVoF;;EAexF,MAAMrF,QAAQ,GAAG,IAAIe,oBAAJ,EAAjB;EACAgD,EAAAA,YAAY,CAAC/D,QAAD,EAAW,UAAX,EAAuB,IAAIe,4BAAJ,CAAiCR,QAAjC,EAA2C,CAA3C,CAAvB,CAAZ;EACAwD,EAAAA,YAAY,CAAC/D,QAAD,EAAW,QAAX,EAAqB,IAAIe,4BAAJ,CAAiCsE,MAAjC,EAAyC,CAAzC,CAArB,CAAZ;EACArF,EAAAA,QAAQ,CAAC0F,QAAT,CAAkB,IAAI3E,2BAAJ,CAAgC8D,OAAhC,EAAyC,CAAzC,CAAlB;EACA,SAAO7E,QAAP;EACH;EAED;;;;;;AAKA,EAAO,SAAS+b,qBAAT,CAA+BC,UAA/B,EAA2C7d,KAA3C,EAAkD8d,WAAlD,EAA+DN,QAA/D,EAAyE;EAC5E,MAAMN,SAAS,GAAG,EAAlB;EAAA,MACIC,UAAU,GAAG,EADjB;EAAA,MACqBY,OAAO,GAAG,EAD/B;;EAEA,OAAK,IAAI3X,CAAC,GAAG,CAAR,EAAWO,GAAG,GAAGkX,UAAU,CAACxX,MAAjC,EAAyCD,CAAC,GAAGO,GAA7C,EAAkDP,CAAC,EAAnD,EAAuD;EACnD,QAAM4X,IAAI,GAAGH,UAAU,CAACzX,CAAD,CAAvB;;EACA,SAAK,IAAIS,CAAC,GAAG,CAAR,EAAWC,IAAI,GAAGkX,IAAI,CAAC3X,MAA5B,EAAoCQ,CAAC,GAAGC,IAAxC,EAA8CD,CAAC,EAA/C,EAAmD;EAC/C,UAAMoX,MAAM,GAAGD,IAAI,CAACnX,CAAD,CAAnB;;EACA,UAAIkX,OAAO,CAAC1X,MAAR,GAAiB,CAArB,EAAwB;EACpB,YAAMP,GAAG,GAAGmY,MAAM,CAACxV,IAAP,CAAYsU,KAAZ,EAAmBrU,QAAnB,EAAZ;EACA,YAAMwV,IAAI,GAAGH,OAAO,CAACA,OAAO,CAAC1X,MAAR,GAAiB,CAAlB,CAAP,CAA4BoC,IAA5B,CAAiCsU,KAAjC,EAAwCrU,QAAxC,EAAb;;EACA,YAAI5C,GAAG,KAAKoY,IAAZ,EAAkB;EACdH,UAAAA,OAAO,CAACzX,IAAR,CAAa2X,MAAb;EACH;EACJ,OAND,MAMO;EACHF,QAAAA,OAAO,CAACzX,IAAR,CAAa2X,MAAb;EACH;EACJ;EACJ;;EACD,MAAMhc,CAAC,GAAG,CAAV;;EACA,OAAK,IAAImE,GAAC,GAAG,CAAR,EAAWO,KAAG,GAAGoX,OAAO,CAAC1X,MAA9B,EAAsCD,GAAC,GAAGO,KAA1C,EAA+CP,GAAC,EAAhD,EAAoD;EAChD,QAAM6X,OAAM,GAAGF,OAAO,CAAC3X,GAAD,CAAtB;EACA,QAAIyC,CAAC,SAAL;;EACA,QAAM/C,IAAG,GAAGmY,OAAM,CAACxV,IAAP,CAAYsU,KAAZ,EAAmBrU,QAAnB,EAAZ;;EACA,QAAIoV,WAAW,IAAIA,WAAW,CAAChY,IAAD,CAA9B,EAAqC;EACjC+C,MAAAA,CAAC,GAAGiV,WAAW,CAAChY,IAAD,CAAf;EACH,KAFD,MAEO;EACH+C,MAAAA,CAAC,GAAG7I,KAAK,CAACyJ,mBAAN,CAA0BwU,OAA1B,EAAkChc,CAAlC,EAAqCwb,GAArC,CAAyCD,QAAzC,CAAJ;EACH;;EACDL,IAAAA,UAAU,CAAC7W,IAAX,CAAgBuC,CAAhB;EACAqU,IAAAA,SAAS,CAAC5W,IAAV,CAAeuC,CAAC,CAAC1G,CAAjB,EAAoB0G,CAAC,CAACI,CAAtB,EAAyBJ,CAAC,CAAC5G,CAA3B;EACH;;EACD,SAAO;EACHib,IAAAA,SAAS,EAAEA,SADR;EAEHC,IAAAA,UAAU,EAAEA,UAFT;EAGHY,IAAAA,OAAO,EAAEA;EAHN,GAAP;EAKH;EAGD;;;;;;;;AAOA,EAAO,SAASI,oBAAT,CAA8Bxc,UAA9B,EAA0C4Y,SAA1C,EAAyDjE,KAAzD,EAAoEtW,KAApE,EAA2Eid,MAA3E,EAAmF;EAAA,MAAzC1C,SAAyC;EAAzCA,IAAAA,SAAyC,GAA7B,CAA6B;EAAA;;EAAA,MAA1BjE,KAA0B;EAA1BA,IAAAA,KAA0B,GAAlB,CAAkB;EAAA;;EACtF,MAAM4G,SAAS,GAAGF,eAAe,CAACrb,UAAD,EAAa3B,KAAb,EAAoBid,MAApB,CAAf,CAA2CE,UAA7D;EACA,MAAMQ,EAAE,GAAG,EAAX;;EACA,OAAK,IAAIvX,CAAC,GAAG,CAAR,EAAWO,GAAG,GAAGuW,SAAS,CAAC7W,MAAhC,EAAwCD,CAAC,GAAGO,GAA5C,EAAiDP,CAAC,EAAlD,EAAsD;EAClD,QAAMmF,CAAC,GAAG2R,SAAS,CAAC9W,CAAD,CAAnB;EACAuX,IAAAA,EAAE,CAACrX,IAAH,CAAQ,CAACiF,CAAC,CAACpJ,CAAH,EAAMoJ,CAAC,CAACtC,CAAR,CAAR;EACH;;EANqF,0BAWlFyS,eAAe,CAAC,CAACiC,EAAD,CAAD,EAAO;EACtBpD,IAAAA,SAAS,EAAEA,SADW;EAEtBjE,IAAAA,KAAK,EAAEA;EAFe,GAAP,CAXmE;EAAA,MAQlF5P,OARkF,qBAQlFA,OARkF;EAAA,MASlFtE,QATkF,qBASlFA,QATkF;EAAA,MAUlF8E,MAVkF,qBAUlFA,MAVkF;;EAetF,SAAO;EACH9E,IAAAA,QAAQ,EAAEA,QADP;EAEH8E,IAAAA,MAAM,EAAEA,MAFL;EAGHR,IAAAA,OAAO,EAAEA;EAHN,GAAP;EAKH;;ECnJD,SAAS0X,UAAT,CAAoBC,EAApB,EAAwB;EACpB,MAAMrV,MAAM,GAAG,EAAf;;EACA,MAAIqV,EAAE,IAAIA,EAAE,CAAChY,MAAb,EAAqB;EACjBgY,IAAAA,EAAE,CAACC,OAAH,CAAW,UAAAlX,KAAK,EAAI;EAChBA,MAAAA,KAAK,GAAIA,KAAK,YAAYxE,WAAjB,GAA+BwE,KAA/B,GAAuC,IAAIxE,WAAJ,CAAgBwE,KAAhB,CAAhD;EACA4B,MAAAA,MAAM,CAAC1C,IAAP,CAAYc,KAAK,CAAC8B,CAAlB,EAAqB9B,KAAK,CAACmX,CAA3B,EAA8BnX,KAAK,CAAC+B,CAApC;EACH,KAHD;EAIH;;EACD,SAAOH,MAAP;EACH;;EAED,IAAMnK,SAAO,GAAG;EACZE,EAAAA,QAAQ,EAAE,CADE;EAEZiK,EAAAA,MAAM,EAAE;EAFI,CAAhB;EAKA;;;;MAGMwV;;;;;EACF,gBAAY7c,UAAZ,EAAwBnC,OAAxB,EAAiCkD,QAAjC,EAA2C1C,KAA3C,EAAkD;EAAA;;EAC9CR,IAAAA,OAAO,GAAGZ,aAAA,CAAcsG,MAAd,CAAqB,EAArB,EAAyBrG,SAAzB,EAAkCW,OAAlC,EAA2C;EAAEQ,MAAAA,KAAK,EAALA,KAAF;EAAS2B,MAAAA,UAAU,EAAVA;EAAT,KAA3C,CAAV;EACA;;EACA,UAAKsD,YAAL,CAAkBzF,OAAlB;;EACA,QAAM0d,SAAS,GAAGF,eAAe,CAACrb,UAAD,EAAa3B,KAAb,CAAf,CAAmCkd,SAArD;EACA,QAAMrb,QAAQ,GAAG,IAAIe,oBAAJ,EAAjB;EACAgD,IAAAA,YAAY,CAAC/D,QAAD,EAAW,UAAX,EAAuB,IAAIe,4BAAJ,CAAiCsa,SAAjC,EAA4C,CAA5C,CAAvB,CAAZ;EACA,QAAMlU,MAAM,GAAGoV,UAAU,CAAC5e,OAAO,CAACwJ,MAAT,CAAzB;;EACA,QAAIA,MAAM,IAAIA,MAAM,CAAC3C,MAArB,EAA6B;EACzBT,MAAAA,YAAY,CAAC/D,QAAD,EAAW,OAAX,EAAoB,IAAIe,4BAAJ,CAAiCoG,MAAjC,EAAyC,CAAzC,CAApB,CAAZ;EACAtG,MAAAA,QAAQ,CAACI,YAAT,GAAwBF,kBAAxB;EACH;;EACD,UAAK0C,WAAL,CAAiBzD,QAAjB,EAA2Ba,QAA3B;;EAZ8C,mBAczBlD,OAdyB;EAAA,QActCT,QAdsC,YActCA,QAdsC;EAe9C,QAAMke,MAAM,GAAIhB,SAAS,CAACta,UAAD,CAAT,GAAwB8a,gBAAgB,CAAC9a,UAAD,CAAxC,GAAuDA,UAAU,CAACF,SAAX,EAAvE;EACA,QAAMQ,CAAC,GAAGjC,KAAK,CAACkC,iBAAN,CAAwBnD,QAAxB,EAAkCA,QAAlC,EAA4CoD,CAAtD;EACA,QAAM0G,CAAC,GAAG7I,KAAK,CAACyJ,mBAAN,CAA0BwT,MAA1B,EAAkChb,CAAlC,CAAV;;EACA,UAAKzB,WAAL,GAAmB4B,QAAnB,CAA4BsH,IAA5B,CAAiCb,CAAjC;;EAlB8C;EAmBjD;;;IApBc1K;;ECrBnB,IAAMU,SAAO,GAAG;EACZqY,EAAAA,KAAK,EAAE,CADK;EAEZlP,EAAAA,MAAM,EAAE,CAFI;EAGZjJ,EAAAA,QAAQ,EAAE;EAHE,CAAhB;EAOA;;;;MAGM0f;;;;;EACF,uBAAY9c,UAAZ,EAAwBnC,OAAxB,EAAiCkD,QAAjC,EAA2C1C,KAA3C,EAAkD;EAAA;;EAC9CR,IAAAA,OAAO,GAAGZ,aAAA,CAAcsG,MAAd,CAAqB,EAArB,EAAyBrG,SAAzB,EAAkCW,OAAlC,EAA2C;EAAEQ,MAAAA,KAAK,EAALA,KAAF;EAAS2B,MAAAA,UAAU,EAAVA;EAAT,KAA3C,CAAV;EACA;;EACA,UAAKsD,YAAL,CAAkBzF,OAAlB;;EAH8C,mBAKpBA,OALoB;EAAA,QAKtCwI,MALsC,YAKtCA,MALsC;EAAA,QAK9BkP,KAL8B,YAK9BA,KAL8B;EAM9C1X,IAAAA,OAAO,CAACwI,MAAR,GAAiBhI,KAAK,CAACkC,iBAAN,CAAwB8F,MAAxB,EAAgCA,MAAhC,EAAwC7F,CAAzD;EACA3C,IAAAA,OAAO,CAAC0X,KAAR,GAAgBlX,KAAK,CAACkC,iBAAN,CAAwBgV,KAAxB,EAA+BA,KAA/B,EAAsC/U,CAAtD;EACA,QAAMN,QAAQ,GAAG6b,sBAAsB,CAAC/b,UAAD,EAAanC,OAAO,CAAC0X,KAArB,EAA4B1X,OAAO,CAACwI,MAApC,EAA4ChI,KAA5C,CAAvC;;EACA,UAAKmF,WAAL,CAAiBtD,QAAjB,EAA2Ba,QAA3B;;EAT8C,oBAWzBlD,OAXyB;EAAA,QAWtCT,QAXsC,aAWtCA,QAXsC;EAY9C,QAAMke,MAAM,GAAIhB,SAAS,CAACta,UAAD,CAAT,GAAwB8a,gBAAgB,CAAC9a,UAAD,CAAxC,GAAuDA,UAAU,CAACF,SAAX,EAAvE;EACA,QAAMQ,CAAC,GAAGjC,KAAK,CAACkC,iBAAN,CAAwBnD,QAAxB,EAAkCA,QAAlC,EAA4CoD,CAAtD;EACA,QAAM0G,CAAC,GAAG7I,KAAK,CAACyJ,mBAAN,CAA0BwT,MAA1B,EAAkChb,CAAlC,CAAV;;EACA,UAAKzB,WAAL,GAAmB4B,QAAnB,CAA4BsH,IAA5B,CAAiCb,CAAjC;;EAf8C;EAgBjD;;;IAjBqB1K;;ECV1B;;;;EAIA;;;;;EAKA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;;;;;;AAMA,EAAO,SAASugB,kBAAT,CAA4B9c,OAA5B,EAAqCoG,MAArC,EAA6ChI,KAA7C,EAAoDid,MAApD,EAA4D;EAAA,8BACrB0B,wBAAwB,CAAC/c,OAAD,EAAUoG,MAAV,EAAkBhI,KAAlB,EAAyBid,MAAzB,CADH;EAAA,MACvD7a,QADuD,yBACvDA,QADuD;EAAA,MAC7C8E,MAD6C,yBAC7CA,MAD6C;EAAA,MACrCC,EADqC,yBACrCA,EADqC;EAAA,MACjCT,OADiC,yBACjCA,OADiC;;EAE/D,MAAMU,KAAK,GAAG,IAAIC,YAAJ,CAAiBjF,QAAQ,CAACiE,MAA1B,CAAd;EACAe,EAAAA,KAAK,CAACE,IAAN,CAAW,CAAX,EAAc,CAAd,EAAiBlF,QAAQ,CAACiE,MAA1B;EACA,MAAMR,eAAe,GAAG,IAAIjD,oBAAJ,EAAxB;EACAgD,EAAAA,YAAY,CAACC,eAAD,EAAkB,OAAlB,EAA2B,IAAIjD,qBAAJ,CAA0BwE,KAA1B,EAAiC,CAAjC,CAA3B,CAAZ;EACAxB,EAAAA,YAAY,CAACC,eAAD,EAAkB,QAAlB,EAA4B,IAAIjD,qBAAJ,CAA0BsE,MAA1B,EAAkC,CAAlC,CAA5B,CAAZ;EACAtB,EAAAA,YAAY,CAACC,eAAD,EAAkB,UAAlB,EAA8B,IAAIjD,qBAAJ,CAA0BR,QAA1B,EAAoC,CAApC,CAA9B,CAAZ;EACAwD,EAAAA,YAAY,CAACC,eAAD,EAAkB,IAAlB,EAAwB,IAAIjD,qBAAJ,CAA0BuE,EAA1B,EAA8B,CAA9B,CAAxB,CAAZ;EACAtB,EAAAA,eAAe,CAAC0B,QAAhB,CAAyB,IAAI3E,2BAAJ,CAAgC8D,OAAhC,EAAyC,CAAzC,CAAzB;EACA,SAAOb,eAAP;EACH;AAGD,EAAO,SAAS8Y,wBAAT,CAAkC/c,OAAlC,EAA2CoG,MAA3C,EAAmDhI,KAAnD,EAA0Did,MAA1D,EAAkE;EACrE,MAAM2B,KAAK,GAAGC,mBAAmB,CAACjd,OAAD,EAAU5B,KAAV,EAAiBid,MAAjB,CAAjC;EACA,MAAM6B,MAAM,GAAGF,KAAf,CAFqE;;EAIrE,MAAI,CAACE,MAAL,EAAa,OAAO,IAAP;EACb9W,EAAAA,MAAM,GAAGhI,KAAK,CAACkC,iBAAN,CAAwB8F,MAAxB,EAAgCA,MAAhC,EAAwC7F,CAAjD;;EALqE,wBAM3BkZ,cAAc,CAACyD,MAAD,EAAS;EAC7DxI,IAAAA,KAAK,EAAEtO;EADsD,GAAT,CANa;EAAA,MAM7D5F,QAN6D,mBAM7DA,QAN6D;EAAA,MAMnD8E,MANmD,mBAMnDA,MANmD;EAAA,MAM3CC,EAN2C,mBAM3CA,EAN2C;EAAA,MAMvCT,OANuC,mBAMvCA,OANuC;;EASrE,SAAO;EACHtE,IAAAA,QAAQ,EAARA,QADG;EACO8E,IAAAA,MAAM,EAANA,MADP;EACeC,IAAAA,EAAE,EAAFA,EADf;EACmBT,IAAAA,OAAO,EAAPA;EADnB,GAAP;EAGH;EAED;;;;;;;AAMA,EAAO,SAASiC,kBAAT,CAA0B9G,QAA1B,EAAoCuF,KAApC,EAA2CwB,SAA3C,EAAsD;EACzD,MAAMxG,QAAQ,GAAGP,QAAQ,CAACsE,UAAT,CAAoB/D,QAApB,CAA6BsF,KAA9C;EACA,MAAMf,GAAG,GAAGvE,QAAQ,CAACiE,MAArB;EACA,MAAMyC,WAAW,GAAI1B,KAAK,YAAYxE,WAAjB,GAA+BwE,KAA/B,GAAuC,IAAIxE,WAAJ,CAAgBwE,KAAhB,CAA5D;EACA,MAAM2B,QAAQ,GAAG,IAAInG,WAAJ,CAAgBgG,SAAhB,CAAjB;EACA,MAAMI,MAAM,GAAG,EAAf;;EACA,OAAK,IAAI5C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGO,GAApB,EAAyBP,CAAC,IAAI,CAA9B,EAAiC;EAC7B,QAAMnE,CAAC,GAAGG,QAAQ,CAACgE,CAAC,GAAG,CAAL,CAAlB;;EACA,QAAInE,CAAC,GAAG,CAAR,EAAW;EACP+G,MAAAA,MAAM,CAAC1C,IAAP,CAAYyC,QAAQ,CAACG,CAArB,EAAwBH,QAAQ,CAACG,CAAjC,EAAoCH,QAAQ,CAACI,CAA7C;EACH,KAFD,MAEO;EACHH,MAAAA,MAAM,CAAC1C,IAAP,CAAYwC,WAAW,CAACI,CAAxB,EAA2BJ,WAAW,CAACI,CAAvC,EAA0CJ,WAAW,CAACK,CAAtD;EACH;EACJ;;EACDvD,EAAAA,YAAY,CAAC/D,QAAD,EAAW,OAAX,EAAoB,IAAIe,4BAAJ,CAAiCoG,MAAjC,EAAyC,CAAzC,EAA4C,IAA5C,CAApB,CAAZ;EACA,SAAOA,MAAP;EACH;EAED;;;;;AAIA,EAAO,SAAS+V,iBAAT,CAA2BvC,WAA3B,EAA6C;EAAA,MAAlBA,WAAkB;EAAlBA,IAAAA,WAAkB,GAAJ,EAAI;EAAA;;EAChD,MAAIlS,IAAI,GAAGyD,QAAX;EAAA,MAAqBxD,IAAI,GAAGwD,QAA5B;EAAA,MAAsCvD,IAAI,GAAG,CAACuD,QAA9C;EAAA,MAAwDtD,IAAI,GAAG,CAACsD,QAAhE;;EACA,OAAK,IAAI3H,CAAC,GAAG,CAAR,EAAWO,GAAG,GAAG6V,WAAW,CAACnW,MAAlC,EAA0CD,CAAC,GAAGO,GAA9C,EAAmDP,CAAC,EAApD,EAAwD;EACpD,QAAMgG,CAAC,GAAGoQ,WAAW,CAACpW,CAAD,CAArB;EACA,QAAIjE,CAAC,SAAL;EAAA,QAAO8G,CAAC,SAAR;;EACA,QAAImU,KAAK,CAACC,OAAN,CAAcjR,CAAd,CAAJ,EAAsB;EAClBjK,MAAAA,CAAC,GAAGiK,CAAC,CAAC,CAAD,CAAL;EACAnD,MAAAA,CAAC,GAAGmD,CAAC,CAAC,CAAD,CAAL;EACH,KAHD,MAGO,IAAIA,CAAC,YAAYxN,mBAAjB,EAAsC;EACzCuD,MAAAA,CAAC,GAAGiK,CAAC,CAACjK,CAAN;EACA8G,MAAAA,CAAC,GAAGmD,CAAC,CAACnD,CAAN;EACH;;EACDqB,IAAAA,IAAI,GAAGhC,IAAI,CAAC8H,GAAL,CAAS9F,IAAT,EAAenI,CAAf,CAAP;EACAoI,IAAAA,IAAI,GAAGjC,IAAI,CAAC8H,GAAL,CAAS7F,IAAT,EAAetB,CAAf,CAAP;EACAuB,IAAAA,IAAI,GAAGlC,IAAI,CAACsC,GAAL,CAASJ,IAAT,EAAerI,CAAf,CAAP;EACAsI,IAAAA,IAAI,GAAGnC,IAAI,CAACsC,GAAL,CAASH,IAAT,EAAexB,CAAf,CAAP;EACH;;EACD,SAAO,IAAIrK,mBAAJ,CAAwB,CAAC0L,IAAI,GAAGE,IAAR,IAAgB,CAAxC,EAA2C,CAACD,IAAI,GAAGE,IAAR,IAAgB,CAA3D,CAAP;EACH;EAGD;;;;;;;AAMA,EAAO,SAASoU,mBAAT,CAA6Bjd,OAA7B,EAAsC5B,KAAtC,EAA6Cid,MAA7C,EAAqD+B,WAArD,EAA0E;EAAA,MAArBA,WAAqB;EAArBA,IAAAA,WAAqB,GAAP,KAAO;EAAA;;EAC7E,MAAI,CAACpd,OAAL,EAAc;EACV,WAAO,IAAP;EACH;;EACD,MAAIgd,KAAK,GAAG,EAAZ;;EACA,MAAIhd,OAAO,YAAYhD,qBAAvB,EAA8C;EAC1CggB,IAAAA,KAAK,GAAGhd,OAAO,CAACqd,aAAR,GAAwBzV,GAAxB,CAA4B,UAAA+B,CAAC,EAAI;EACrC,aAAO2T,yBAAyB,CAAC3T,CAAD,EAAIvL,KAAJ,EAAWid,MAAM,IAAIrb,OAAO,CAACH,SAAR,EAArB,EAA0Cud,WAA1C,CAAhC;EACH,KAFO,CAAR;EAGH,GAJD,MAIO,IAAIpd,OAAO,YAAYhD,gBAAvB,EAAyC;EAC5C,QAAMgL,IAAI,GAAGsV,yBAAyB,CAACtd,OAAD,EAAU5B,KAAV,EAAiBid,MAAM,IAAIrb,OAAO,CAACH,SAAR,EAA3B,EAAgDud,WAAhD,CAAtC;EACAJ,IAAAA,KAAK,CAACtY,IAAN,CAAWsD,IAAX;EACH,GAHM,MAGA,IAAIsS,gBAAgB,CAACta,OAAD,CAApB,EAA+B;EAClC,QAAM0b,IAAI,GAAGb,gBAAgB,CAAC7a,OAAD,CAA7B;;EACA,QAAI,CAACya,cAAc,CAACza,OAAD,CAAnB,EAA8B;EAC1B,UAAMgI,KAAI,GAAGsV,yBAAyB,CAACtd,OAAD,EAAU5B,KAAV,EAAiBid,MAAM,IAAIK,IAA3B,EAAiC0B,WAAjC,CAAtC;;EACAJ,MAAAA,KAAK,CAACtY,IAAN,CAAWsD,KAAX;EACH,KAHD,MAGO;EACH,UAAMuV,EAAE,GAAGvC,kBAAkB,CAAChb,OAAD,CAA7B;;EACA,WAAK,IAAIwE,CAAC,GAAG,CAAR,EAAWO,GAAG,GAAGwY,EAAE,CAAC9Y,MAAzB,EAAiCD,CAAC,GAAGO,GAArC,EAA0CP,CAAC,EAA3C,EAA+C;EAC3CwY,QAAAA,KAAK,CAACtY,IAAN,CAAW4Y,yBAAyB,CAACC,EAAE,CAAC/Y,CAAD,CAAH,EAAQpG,KAAR,EAAeid,MAAM,IAAIK,IAAzB,EAA+B0B,WAA/B,CAApC;EACH;EACJ;EACJ;;EACD,SAAOJ,KAAP;EACH;AAED,EAAO,SAASM,yBAAT,CAAmCtd,OAAnC,EAA4C5B,KAA5C,EAAmDid,MAAnD,EAA2D+B,WAA3D,EAAgF;EAAA,MAArBA,WAAqB;EAArBA,IAAAA,WAAqB,GAAP,KAAO;EAAA;;EACnF,MAAII,KAAJ,EAAWjO,KAAX,CADmF;;EAGnF,MAAI+K,gBAAgB,CAACta,OAAD,CAApB,EAA+B;EAC3B,QAAM4a,WAAW,GAAGD,qBAAqB,CAAC3a,OAAD,CAAzC;EACAwd,IAAAA,KAAK,GAAG5C,WAAW,CAAC,CAAD,CAAnB;EACArL,IAAAA,KAAK,GAAGqL,WAAW,CAAC6C,KAAZ,CAAkB,CAAlB,EAAqB7C,WAAW,CAACnW,MAAjC,CAAR;EACA4W,IAAAA,MAAM,GAAGA,MAAM,IAAIR,gBAAgB,CAAC7a,OAAD,CAAnC;EACH,GALD,MAKO;EACHwd,IAAAA,KAAK,GAAGxd,OAAO,CAAC0d,QAAR,EAAR;EACAnO,IAAAA,KAAK,GAAGvP,OAAO,CAAC2d,QAAR,EAAR;EACAtC,IAAAA,MAAM,GAAGA,MAAM,IAAIrb,OAAO,CAACH,SAAR,EAAnB;EACH;;EACD,MAAM+b,QAAQ,GAAGxd,KAAK,CAACyJ,mBAAN,CAA0BwT,MAA1B,CAAjB;EACA,MAAIuC,KAAJ;;EACA,MAAIR,WAAJ,EAAiB;EACbQ,IAAAA,KAAK,GAAG,IAAInY,YAAJ,CAAiB+X,KAAK,CAAC/Y,MAAN,GAAe,CAAhC,CAAR;EACH,GAFD,MAEO;EACHmZ,IAAAA,KAAK,GAAG,EAAR;EACH;;EACD,OAAK,IAAIpZ,CAAC,GAAG,CAAR,EAAWO,GAAG,GAAGyY,KAAK,CAAC/Y,MAA5B,EAAoCD,CAAC,GAAGO,GAAxC,EAA6CP,CAAC,EAA9C,EAAkD;EAC9C,QAAMgG,CAAC,GAAGgT,KAAK,CAAChZ,CAAD,CAAf;EACA,QAAMyC,CAAC,GAAG7I,KAAK,CAACyJ,mBAAN,CAA0B2C,CAA1B,EAA6BqR,GAA7B,CAAiCD,QAAjC,CAAV;;EACA,QAAIwB,WAAJ,EAAiB;EACb,UAAM/F,GAAG,GAAG7S,CAAC,GAAG,CAAhB;EACAoZ,MAAAA,KAAK,CAACvG,GAAD,CAAL,GAAapQ,CAAC,CAAC1G,CAAf;EACAqd,MAAAA,KAAK,CAACvG,GAAG,GAAG,CAAP,CAAL,GAAiBpQ,CAAC,CAACI,CAAnB,CAHa;EAKhB,KALD,MAKO;EACHuW,MAAAA,KAAK,CAAClZ,IAAN,CAAW,CAACuC,CAAC,CAAC1G,CAAH,EAAM0G,CAAC,CAACI,CAAR,CAAX;EACH;EACJ;;EACD,MAAMW,IAAI,GAAG,CAAEoV,WAAW,GAAGQ,KAAK,CAACC,MAAT,GAAkBD,KAA/B,CAAb;;EACA,MAAIrO,KAAK,IAAIA,KAAK,CAAC9K,MAAN,GAAe,CAA5B,EAA+B;EAC3B,SAAK,IAAID,EAAC,GAAG,CAAR,EAAWO,IAAG,GAAGwK,KAAK,CAAC9K,MAA5B,EAAoCD,EAAC,GAAGO,IAAxC,EAA6CP,EAAC,EAA9C,EAAkD;EAC9C,UAAMsZ,GAAG,GAAIV,WAAW,GAAG,IAAI3X,YAAJ,CAAiB8J,KAAK,CAAC/K,EAAD,CAAL,CAASC,MAAT,GAAkB,CAAnC,CAAH,GAA2C,EAAnE;;EACA,WAAK,IAAIQ,CAAC,GAAG,CAAR,EAAWC,IAAI,GAAGqK,KAAK,CAAC/K,EAAD,CAAL,CAASC,MAAhC,EAAwCQ,CAAC,GAAGC,IAA5C,EAAkDD,CAAC,EAAnD,EAAuD;EACnD,YAAMuF,EAAC,GAAG+E,KAAK,CAAC/K,EAAD,CAAL,CAASS,CAAT,CAAV;EACA,YAAM8Y,EAAE,GAAG3f,KAAK,CAACyJ,mBAAN,CAA0B2C,EAA1B,EAA6BqR,GAA7B,CAAiCD,QAAjC,CAAX;;EACA,YAAIwB,WAAJ,EAAiB;EACb,cAAM/F,IAAG,GAAGpS,CAAC,GAAG,CAAhB;;EACA6Y,UAAAA,GAAG,CAACzG,IAAD,CAAH,GAAW0G,EAAE,CAACxd,CAAd;EACAud,UAAAA,GAAG,CAACzG,IAAG,GAAG,CAAP,CAAH,GAAe0G,EAAE,CAAC1W,CAAlB,CAHa;EAKhB,SALD,MAKO;EACHyW,UAAAA,GAAG,CAACpZ,IAAJ,CAAS,CAACqZ,EAAE,CAACxd,CAAJ,EAAOwd,EAAE,CAAC1W,CAAV,CAAT;EACH;EACJ;;EACDW,MAAAA,IAAI,CAACtD,IAAL,CAAW0Y,WAAW,GAAGU,GAAG,CAACD,MAAP,GAAgBC,GAAtC;EACH;EACJ;;EACD,SAAO9V,IAAP;EACH;;EC/LD,IAAM/K,SAAO,GAAG;EACZE,EAAAA,QAAQ,EAAE,CADE;EAEZiJ,EAAAA,MAAM,EAAE,CAFI;EAGZe,EAAAA,QAAQ,EAAE,IAHE;EAIZD,EAAAA,WAAW,EAAE;EAJD,CAAhB;EAOA;;;;MAGM8W;;;;;EACF,0BAAYhe,OAAZ,EAAqBpC,OAArB,EAA8BkD,QAA9B,EAAwC1C,KAAxC,EAA+C;EAAA;;EAC3CR,IAAAA,OAAO,GAAGZ,aAAA,CAAcsG,MAAd,CAAqB,EAArB,EAAyBrG,SAAzB,EAAkCW,OAAlC,EAA2C;EAAEQ,MAAAA,KAAK,EAALA,KAAF;EAAS4B,MAAAA,OAAO,EAAPA;EAAT,KAA3C,CAAV;EACA;;EACA,UAAKqD,YAAL,CAAkBzF,OAAlB;;EAH2C,mBAISA,OAJT;EAAA,QAInCwI,MAJmC,YAInCA,MAJmC;EAAA,QAI3Be,QAJ2B,YAI3BA,QAJ2B;EAAA,QAIjBD,WAJiB,YAIjBA,WAJiB;EAAA,QAIJ/J,QAJI,YAIJA,QAJI;EAK3C,QAAM8C,QAAQ,GAAG6c,kBAAkB,CAAC9c,OAAD,EAAUoG,MAAV,EAAkBhI,KAAlB,CAAnC;EACA,QAAMid,MAAM,GAAIf,gBAAgB,CAACta,OAAD,CAAhB,GAA4B6a,gBAAgB,CAAC7a,OAAD,CAA5C,GAAwDA,OAAO,CAACH,SAAR,EAAxE;;EAEA,QAAIsH,QAAQ,IAAI,CAACrG,QAAQ,CAAC8G,GAA1B,EAA+B;EAC3Bb,MAAAA,kBAAgB,CAAC9G,QAAD,EAAWiH,WAAX,EAAwBC,QAAxB,CAAhB;EACArG,MAAAA,QAAQ,CAACI,YAAT,GAAwBF,kBAAxB;EACH;;EACD,UAAKuC,WAAL,CAAiBtD,QAAjB,EAA2Ba,QAA3B;;EACA,QAAMT,CAAC,GAAGjC,KAAK,CAACkC,iBAAN,CAAwBnD,QAAxB,EAAkCA,QAAlC,EAA4CoD,CAAtD;EACA,QAAM0G,CAAC,GAAG7I,KAAK,CAACyJ,mBAAN,CAA0BwT,MAA1B,EAAkChb,CAAlC,CAAV;;EACA,UAAKzB,WAAL,GAAmB4B,QAAnB,CAA4BsH,IAA5B,CAAiCb,CAAjC;;EAf2C;EAgB9C;;;IAjBwB1K;;ECb7B,IAAMU,SAAO,GAAG;EACZE,EAAAA,QAAQ,EAAE,CADE;EAEZ2C,EAAAA,UAAU,EAAE;EAFA,CAAhB;EAMA;;;;MAGMme;;;;;EACF,iBAAYC,KAAZ,EAAmBtgB,OAAnB,EAAiCQ,KAAjC,EAAwC;EAAA;;EAAA,QAArBR,OAAqB;EAArBA,MAAAA,OAAqB,GAAX,EAAW;EAAA;;EACpC,QAAI,CAACA,OAAO,CAACkC,UAAb,EAAyB;EACrBvB,MAAAA,OAAO,CAAC4f,IAAR,CAAa,wDAAb;EACAvgB,MAAAA,OAAO,CAACkC,UAAR,GAAqB1B,KAAK,CAACwB,MAAN,GAAeC,SAAf,EAArB;EACH;;EACDjC,IAAAA,OAAO,GAAGZ,aAAA,CAAcsG,MAAd,CAAqB,EAArB,EAAyBrG,SAAzB,EAAkCW,OAAlC,EAA2C;EAAEQ,MAAAA,KAAK,EAALA,KAAF;EAAS8f,MAAAA,KAAK,EAALA;EAAT,KAA3C,CAAV;EACA;;EACA,UAAK7a,YAAL,CAAkBzF,OAAlB;;EACA,UAAK6F,YAAL;;EACA,UAAK7E,WAAL,GAAmBwf,GAAnB,CAAuBF,KAAvB;;EAToC,mBAUHtgB,OAVG;EAAA,QAU5BT,QAV4B,YAU5BA,QAV4B;EAAA,QAUlB2C,UAVkB,YAUlBA,UAVkB;EAWpC,QAAMO,CAAC,GAAGjC,KAAK,CAACkC,iBAAN,CAAwBnD,QAAxB,EAAkCA,QAAlC,EAA4CoD,CAAtD;EACA,QAAMC,QAAQ,GAAGpC,KAAK,CAACyJ,mBAAN,CAA0B/H,UAA1B,EAAsCO,CAAtC,CAAjB;;EACA,UAAKzB,WAAL,GAAmB4B,QAAnB,CAA4BsH,IAA5B,CAAiCtH,QAAjC;;EAboC;EAcvC;;;IAfejE;;ECZpB;;;EAIA,IAAMoK,EAAE,GAAGD,IAAI,CAACC,EAAL,GAAU,GAArB;EACA,IAAM0X,CAAC,GAAG,OAAV;EACA,IAAMC,SAAS,GAAG,CAAlB;;EAGA,SAASC,eAAT,CAAyB9F,QAAzB,EAAmC;EAC/B,MAAM0D,OAAO,GAAG1D,QAAQ,CAACkD,cAAT,EAAhB;EACA,SAAOQ,OAAO,CAACvU,GAAR,CAAY,UAAAyU,MAAM,EAAI;EACzB,WAAOA,MAAM,CAACmC,OAAP,EAAP;EACH,GAFM,CAAP;EAGH;;EAED,SAASC,gBAAT,CAA0B/O,CAA1B,EAA6B;EACzB,SAAOA,CAAC,GAAG/I,EAAX;EACH;;AAID,EAAO,SAAS+X,QAAT,CAAkBC,EAAlB,EAAsBC,EAAtB,EAA0B;EAC7B,MAAI,CAACD,EAAD,IAAO,CAACC,EAAZ,EAAgB;EACZ,WAAO,CAAP;EACH;;EACD,MAAI,CAACpD,KAAK,CAACC,OAAN,CAAckD,EAAd,CAAL,EAAwB;EACpBA,IAAAA,EAAE,GAAGA,EAAE,CAACH,OAAH,EAAL;EACH;;EACD,MAAI,CAAChD,KAAK,CAACC,OAAN,CAAcmD,EAAd,CAAL,EAAwB;EACpBA,IAAAA,EAAE,GAAGA,EAAE,CAACJ,OAAH,EAAL;EACH;;EACD,MAAIjX,CAAC,GAAGkX,gBAAgB,CAACE,EAAE,CAAC,CAAD,CAAH,CAAxB;EACA,MAAMjP,CAAC,GAAG+O,gBAAgB,CAACG,EAAE,CAAC,CAAD,CAAH,CAA1B;EAAA,MACI/R,CAAC,GAAGtF,CAAC,GAAGmI,CADZ;EAAA,MAEIoG,CAAC,GAAG2I,gBAAgB,CAACE,EAAE,CAAC,CAAD,CAAH,CAAhB,GAA0BF,gBAAgB,CAACG,EAAE,CAAC,CAAD,CAAH,CAFlD;EAGArX,EAAAA,CAAC,GAAG,IAAIb,IAAI,CAACmY,IAAL,CAAUnY,IAAI,CAAC2K,IAAL,CAAU3K,IAAI,CAACoY,GAAL,CAASpY,IAAI,CAAC2L,GAAL,CAASxF,CAAC,GAAG,CAAb,CAAT,EAA0B,CAA1B,IAA+BnG,IAAI,CAAC0L,GAAL,CAAS7K,CAAT,IAAcb,IAAI,CAAC0L,GAAL,CAAS1C,CAAT,CAAd,GAA4BhJ,IAAI,CAACoY,GAAL,CAASpY,IAAI,CAAC2L,GAAL,CAASyD,CAAC,GAAG,CAAb,CAAT,EAA0B,CAA1B,CAArE,CAAV,CAAR;EACAvO,EAAAA,CAAC,IAAI8W,CAAL;EACA,SAAO3X,IAAI,CAACqO,KAAL,CAAWxN,CAAC,GAAG,GAAf,IAAsB,GAA7B;EACH;AAGD;EAaA,SAASwX,gBAAT,CAA0BzH,CAA1B,EAA6B7S,MAA7B,EAAqC;EAAA,MACzBM,GADyB,GACTuS,CADS,CACzBvS,GADyB;EAAA,MACpB4Z,EADoB,GACTrH,CADS,CACpBqH,EADoB;EAAA,MAChBC,EADgB,GACTtH,CADS,CAChBsH,EADgB;EAEjC,MAAMhP,EAAE,GAAGgP,EAAE,CAAC,CAAD,CAAF,GAAQD,EAAE,CAAC,CAAD,CAArB;EAAA,MACI9O,EAAE,GAAG+O,EAAE,CAAC,CAAD,CAAF,GAAQD,EAAE,CAAC,CAAD,CADnB;EAEA,MAAMK,OAAO,GAAGva,MAAM,GAAGM,GAAzB;EACA,MAAMka,GAAG,GAAGN,EAAE,CAAC,CAAD,CAAF,GAAQK,OAAO,GAAGpP,EAA9B;EACA,MAAMsP,GAAG,GAAGP,EAAE,CAAC,CAAD,CAAF,GAAQK,OAAO,GAAGnP,EAA9B;EACA,SAAO,CAACoP,GAAD,EAAMC,GAAN,CAAP;EACH;EAID;;;;;;;;AAMA,EAAO,SAASC,SAAT,CAAmB1C,EAAnB,EAAuB2C,eAAvB,EAA6C;EAAA,MAAtBA,eAAsB;EAAtBA,IAAAA,eAAsB,GAAJ,EAAI;EAAA;;EAChDA,EAAAA,eAAe,GAAG1Y,IAAI,CAACsC,GAAL,CAASoW,eAAT,EAA0Bd,SAA1B,CAAlB;;EACA,MAAI,CAAC9C,KAAK,CAACC,OAAN,CAAcgB,EAAd,CAAL,EAAwB;EACpBA,IAAAA,EAAE,GAAG8B,eAAe,CAAC9B,EAAD,CAApB;EACH;;EACD,MAAM4C,GAAG,GAAG5C,EAAE,CAAChY,MAAf;EACA,MAAIgH,IAAI,GAAG,EAAX;EACA,MAAI6T,QAAQ,GAAG,CAAf;;EACA,OAAK,IAAI9a,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6a,GAAG,GAAG,CAA1B,EAA6B7a,CAAC,EAA9B,EAAkC;EAC9B,QAAMO,GAAG,GAAG2Z,QAAQ,CAACjC,EAAE,CAACjY,CAAD,CAAH,EAAQiY,EAAE,CAACjY,CAAC,GAAG,CAAL,CAAV,CAApB;EACA,QAAM+a,QAAQ,GAAG7Y,IAAI,CAAC0N,KAAL,CAAWrP,GAAX,CAAjB;EACA0G,IAAAA,IAAI,CAAC/G,IAAL,CAAU;EACNia,MAAAA,EAAE,EAAElC,EAAE,CAACjY,CAAD,CADA;EAENO,MAAAA,GAAG,EAAEwa,QAFC;EAGNX,MAAAA,EAAE,EAAEnC,EAAE,CAACjY,CAAC,GAAG,CAAL;EAHA,KAAV;EAKA8a,IAAAA,QAAQ,IAAIC,QAAZ;EACH;;EACD,MAAID,QAAQ,IAAIF,eAAhB,EAAiC;EAC7B,QAAMjD,OAAO,GAAG1Q,IAAI,CAAC7D,GAAL,CAAS,UAAA8H,CAAC,EAAI;EAC1B,aAAO,CAACA,CAAC,CAACiP,EAAH,EAAOjP,CAAC,CAACkP,EAAT,CAAP;EACH,KAFe,CAAhB;EAGA,WAAOzC,OAAP;EACH;;EACD,MAAI1Q,IAAI,CAAChH,MAAL,KAAgB,CAApB,EAAuB;EACnB,QAAIgH,IAAI,CAAC,CAAD,CAAJ,CAAQ1G,GAAR,IAAeqa,eAAnB,EAAoC;EAChC,aAAO,CACH,CAAC3T,IAAI,CAAC,CAAD,CAAJ,CAAQkT,EAAT,EAAalT,IAAI,CAAC,CAAD,CAAJ,CAAQmT,EAArB,CADG,CAAP;EAGH;EACJ;;EAED,MAAMY,UAAU,GAAG/T,IAAI,CAAChH,MAAxB;EACA,MAAM8L,KAAK,GAAG9E,IAAI,CAAC,CAAD,CAAlB;EAEA,MAAI4L,GAAG,GAAG,CAAV;EACA,MAAIoI,aAAJ;EACA,MAAIC,UAAU,GAAG,CAAjB;EACA,MAAMC,KAAK,GAAG,EAAd;EACA,MAAIC,GAAG,GAAG,CAACrP,KAAK,CAACoO,EAAP,CAAV;;EACA,SAAOtH,GAAG,GAAGmI,UAAb,EAAyB;EAAA,oBACD/T,IAAI,CAAC4L,GAAD,CADH;EAAA,QACbtS,IADa,aACbA,GADa;EAAA,QACR6Z,EADQ,aACRA,EADQ;EAErBc,IAAAA,UAAU,IAAI3a,IAAd;;EACA,QAAI2a,UAAU,GAAGN,eAAjB,EAAkC;EAC9BQ,MAAAA,GAAG,CAAClb,IAAJ,CAASka,EAAT;;EACA,UAAIvH,GAAG,KAAKmI,UAAU,GAAG,CAAzB,EAA4B;EACxBG,QAAAA,KAAK,CAACjb,IAAN,CAAWkb,GAAX;EACH;;EACDvI,MAAAA,GAAG;EACN;;EACD,QAAIqI,UAAU,KAAKN,eAAnB,EAAoC;EAChCQ,MAAAA,GAAG,CAAClb,IAAJ,CAASka,EAAT;EACAc,MAAAA,UAAU,GAAG,CAAb;EACAC,MAAAA,KAAK,CAACjb,IAAN,CAAWkb,GAAX,EAHgC;;EAKhCA,MAAAA,GAAG,GAAG,CAAChB,EAAD,CAAN;EACAvH,MAAAA,GAAG;EACN;;EACD,QAAIqI,UAAU,GAAGN,eAAjB,EAAkC;EAC9B,UAAMS,SAAS,GAAI9a,IAAG,GAAG2a,UAAN,GAAmBN,eAAtC;EACAK,MAAAA,aAAa,GAAGV,gBAAgB,CAACtT,IAAI,CAAC4L,GAAD,CAAL,EAAYwI,SAAZ,CAAhC;EACAD,MAAAA,GAAG,CAAClb,IAAJ,CAAS+a,aAAT;EACAE,MAAAA,KAAK,CAACjb,IAAN,CAAWkb,GAAX;EACAF,MAAAA,UAAU,GAAG,CAAb;EACAjU,MAAAA,IAAI,CAAC4L,GAAD,CAAJ,CAAUsH,EAAV,GAAec,aAAf;EACAhU,MAAAA,IAAI,CAAC4L,GAAD,CAAJ,CAAUtS,GAAV,GAAgBA,IAAG,GAAG8a,SAAtB,CAP8B;;EAS9BD,MAAAA,GAAG,GAAG,EAAN;EACAA,MAAAA,GAAG,CAAClb,IAAJ,CAAS+a,aAAT;EACH;EACJ;;EACD,SAAOE,KAAP;EACH;;ECxID,IAAMG,UAAU,GAAG,IAAnB;EAEA;;;;;;;;EAOA,SAASC,+BAAT,CAAyC9f,QAAzC,EAAmD8b,EAAnD,EAAuDiE,KAAvD,EAA8Dlb,OAA9D,EAAuE;EACnE,MAAMC,GAAG,GAAGgX,EAAE,CAACtX,MAAf;EACAxE,EAAAA,QAAQ,CAACsE,UAAT,CAAoBe,MAApB,CAA2B2a,KAA3B,GAAmClb,GAAnC;EACA9E,EAAAA,QAAQ,CAACsE,UAAT,CAAoB/D,QAApB,CAA6Byf,KAA7B,GAAqClb,GAArC;EACA,MAAMuW,SAAS,GAAGrb,QAAQ,CAACsE,UAAT,CAAoB/D,QAApB,CAA6BsF,KAA/C;EACA,MAAM+P,OAAO,GAAG5V,QAAQ,CAACsE,UAAT,CAAoBe,MAApB,CAA2BQ,KAA3C;;EACA,OAAK,IAAItB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGO,GAApB,EAAyBP,CAAC,EAA1B,EAA8B;EAC1B8W,IAAAA,SAAS,CAAC9W,CAAD,CAAT,GAAeuX,EAAE,CAACvX,CAAD,CAAjB;EACAqR,IAAAA,OAAO,CAACrR,CAAD,CAAP,GAAawb,KAAK,CAACxb,CAAD,CAAlB;EACH,GATkE;;;EAWnEvE,EAAAA,QAAQ,CAAC+E,KAAT,CAAeib,KAAf,GAAuBnb,OAAO,CAACL,MAA/B,CAXmE;;EAanE,OAAK,IAAID,EAAC,GAAG,CAAR,EAAWU,IAAI,GAAGJ,OAAO,CAACL,MAA/B,EAAuCD,EAAC,GAAGU,IAA3C,EAAiDV,EAAC,EAAlD,EAAsD;EAClDvE,IAAAA,QAAQ,CAAC+E,KAAT,CAAec,KAAf,CAAqBtB,EAArB,IAA0BM,OAAO,CAACN,EAAD,CAAjC;EACH,GAfkE;EAiBnE;;EACH;;EAGD,IAAMvH,SAAO,GAAG;EACZijB,EAAAA,KAAK,EAAE,CADK;EAEZC,EAAAA,WAAW,EAAE,EAFD;EAGZ7K,EAAAA,KAAK,EAAE,CAHK;EAIZlP,EAAAA,MAAM,EAAE,CAJI;EAKZga,EAAAA,KAAK,EAAE,CALK;EAMZjjB,EAAAA,QAAQ,EAAE,CANE;EAOZD,EAAAA,WAAW,EAAE;EAPD,CAAhB;EAUA;;;;MAGMmjB;;;;;EACF,4BAAYtgB,UAAZ,EAAwBnC,OAAxB,EAAiCkD,QAAjC,EAA2C1C,KAA3C,EAAkD;EAAA;;EAC9CR,IAAAA,OAAO,GAAGZ,aAAA,CAAcsG,MAAd,CAAqB,EAArB,EAAyBrG,SAAzB,EAAkCW,OAAlC,EAA2C;EAAEQ,MAAAA,KAAK,EAALA,KAAF;EAAS2B,MAAAA,UAAU,EAAVA;EAAT,KAA3C,CAAV;EACA;;EACA,UAAKsD,YAAL,CAAkBzF,OAAlB;;EAH8C,mBAKiBA,OALjB;EAAA,QAKtC0X,KALsC,YAKtCA,KALsC;EAAA,QAK/BlP,MAL+B,YAK/BA,MAL+B;EAAA,QAKvBjJ,QALuB,YAKvBA,QALuB;EAAA,QAKbijB,KALa,YAKbA,KALa;EAAA,QAKND,WALM,YAKNA,WALM;EAAA,QAKOD,KALP,YAKOA,KALP;EAM9C,QAAI7E,MAAJ,EAAYT,WAAZ;;EACA,QAAIP,SAAS,CAACta,UAAD,CAAb,EAA2B;EACvBsb,MAAAA,MAAM,GAAGR,gBAAgB,CAAC9a,UAAD,CAAzB;EACA6a,MAAAA,WAAW,GAAGD,qBAAqB,CAAC5a,UAAD,CAAnC;EACH,KAHD,MAGO;EACHsb,MAAAA,MAAM,GAAGtb,UAAU,CAACF,SAAX,EAAT;EACA+a,MAAAA,WAAW,GAAG7a,UAAd;EACH;;EACD,QAAMkc,UAAU,GAAGkD,SAAS,CAACvE,WAAD,EAAcuF,WAAd,CAA5B;EAEA,QAAMvE,QAAQ,GAAGxd,KAAK,CAACyJ,mBAAN,CAA0B9H,UAAU,CAACF,SAAX,EAA1B,CAAjB,CAhB8C;;EAkB9C,QAAMqc,WAAW,GAAG,EAApB;;EACA,SAAK,IAAI1X,CAAC,GAAG,CAAR,EAAWO,GAAG,GAAGkX,UAAU,CAACxX,MAAjC,EAAyCD,CAAC,GAAGO,GAA7C,EAAkDP,CAAC,EAAnD,EAAuD;EACnD,UAAM8b,SAAS,GAAGrE,UAAU,CAACzX,CAAD,CAA5B;;EACA,WAAK,IAAIS,CAAC,GAAG,CAAR,EAAWC,IAAI,GAAGob,SAAS,CAAC7b,MAAjC,EAAyCQ,CAAC,GAAGC,IAA7C,EAAmDD,CAAC,EAApD,EAAwD;EACpD,YAAMoX,MAAM,GAAGiE,SAAS,CAACrb,CAAD,CAAxB;EACA,YAAMf,GAAG,GAAGmY,MAAM,CAACxV,IAAP,CAAY,GAAZ,EAAiBC,QAAjB,EAAZ;;EACA,YAAI,CAACoV,WAAW,CAAChY,GAAD,CAAhB,EAAuB;EACnBgY,UAAAA,WAAW,CAAChY,GAAD,CAAX,GAAmB9F,KAAK,CAACyJ,mBAAN,CAA0BwU,MAA1B,EAAkCR,GAAlC,CAAsCD,QAAtC,CAAnB;EACH;EACJ;EACJ;;EAED,QAAMN,SAAS,GAAGU,qBAAqB,CAACC,UAAU,CAACwB,KAAX,CAAiB,CAAjB,EAAoB,CAApB,CAAD,EAAyBrf,KAAzB,EAAgC8d,WAAhC,EAA6CN,QAA7C,CAArB,CAA4EL,UAA9F,CA9B8C;;EAiC9C,QAAMtb,QAAQ,GAAG,IAAIe,oBAAJ,EAAjB;EACA,QAAM+a,EAAE,GAAG,IAAItW,YAAJ,CAAiBqa,UAAU,GAAG,CAA9B,CAAX,CAlC8C;;EAmC9C,QAAME,KAAK,GAAG,IAAIva,YAAJ,CAAiBqa,UAAU,GAAG,CAA9B,CAAd,CAnC8C;;EAoC9C,QAAMS,IAAI,GAAG,IAAIlI,WAAJ,CAAgByH,UAAhB,CAAb;EACA9b,IAAAA,YAAY,CAAC/D,QAAD,EAAW,UAAX,EAAwB,IAAIe,qBAAJ,CAA0B+a,EAA1B,EAA8B,CAA9B,CAAxB,CAAZ;EACA/X,IAAAA,YAAY,CAAC/D,QAAD,EAAW,QAAX,EAAsB,IAAIe,qBAAJ,CAA0Bgf,KAA1B,EAAiC,CAAjC,CAAtB,CAAZ;EACA/f,IAAAA,QAAQ,CAAC0F,QAAT,CAAkB,IAAI3E,qBAAJ,CAA0Buf,IAA1B,EAAgC,CAAhC,CAAlB;EAGA,QAAM5H,SAAS,GAAGva,KAAK,CAACkC,iBAAN,CAAwBgV,KAAxB,EAA+BA,KAA/B,EAAsC/U,CAAxD;EACA,QAAMmU,KAAK,GAAGtW,KAAK,CAACkC,iBAAN,CAAwB8F,MAAxB,EAAgCA,MAAhC,EAAwC7F,CAAtD;EACA,QAAMigB,MAAM,GAAGjE,oBAAoB,CAACjB,SAAD,EAAY3C,SAAZ,EAAuBjE,KAAvB,EAA8BtW,KAA9B,CAAnC;EACA2hB,IAAAA,+BAA+B,CAAC9f,QAAD,EAAWugB,MAAM,CAAChgB,QAAlB,EAA4BggB,MAAM,CAAClb,MAAnC,EAA2Ckb,MAAM,CAAC1b,OAAlD,CAA/B;;EAEA,UAAKvB,WAAL,CAAiBtD,QAAjB,EAA2Ba,QAA3B;;EACA,QAAMT,CAAC,GAAGjC,KAAK,CAACkC,iBAAN,CAAwBnD,QAAxB,EAAkCA,QAAlC,EAA4CoD,CAAtD;EACA,QAAM0G,CAAC,GAAG7I,KAAK,CAACyJ,mBAAN,CAA0BwT,MAA1B,EAAkChb,CAAlC,CAAV;;EACA,UAAKzB,WAAL,GAAmB4B,QAAnB,CAA4BsH,IAA5B,CAAiCb,CAAjC;;EAEA,UAAKwZ,OAAL,GAAe;EACXzb,MAAAA,KAAK,EAAE,CADI;EAEXiX,MAAAA,UAAU,EAAVA,UAFW;EAGX3X,MAAAA,UAAU,EAAE,EAHD;EAIXlG,MAAAA,KAAK,EAALA,KAJW;EAKX8hB,MAAAA,KAAK,EAAExZ,IAAI,CAACsC,GAAL,CAAS,CAAT,EAAYkX,KAAZ,CALI;EAMXvH,MAAAA,SAAS,EAATA,SANW;EAOXjE,MAAAA,KAAK,EAALA,KAPW;EAQX0L,MAAAA,KAAK,EAAE1Z,IAAI,CAAC8H,GAAL,CAAS,CAAT,EAAY4R,KAAZ,CARI;EASX/I,MAAAA,GAAG,EAAE,CATM;EAUXqJ,MAAAA,MAAM,EAAE,KAVG;EAWXxE,MAAAA,WAAW,EAAXA,WAXW;EAYXN,MAAAA,QAAQ,EAARA;EAZW,KAAf;;EAcA,UAAK+E,KAAL,CAAW,MAAKF,OAAhB;;EAlE8C;EAoEjD;EAED;;;;;;;;WAIAE,uBAAMH,QAAQ;EAAA,QACFpiB,KADE,GACoEoiB,MADpE,CACFpiB,KADE;EAAA,QACK8hB,KADL,GACoEM,MADpE,CACKN,KADL;EAAA,QACYvH,SADZ,GACoE6H,MADpE,CACY7H,SADZ;EAAA,QACuBjE,KADvB,GACoE8L,MADpE,CACuB9L,KADvB;EAAA,QAC8BuH,UAD9B,GACoEuE,MADpE,CAC8BvE,UAD9B;EAAA,QAC0CC,WAD1C,GACoEsE,MADpE,CAC0CtE,WAD1C;EAAA,QACuDN,QADvD,GACoE4E,MADpE,CACuD5E,QADvD;EAEV,QAAM7W,GAAG,GAAGkX,UAAU,CAACxX,MAAvB;EAAA,QAA+BH,UAAU,GAAG,EAA5C;;EACA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGO,GAApB,EAAyBP,CAAC,EAA1B,EAA8B;EAC1B,UAAMmb,KAAK,GAAG1D,UAAU,CAACwB,KAAX,CAAiBjZ,CAAjB,EAAoBA,CAAC,GAAG0b,KAAxB,CAAd;EACA,UAAMnE,EAAE,GAAGC,qBAAqB,CAAC2D,KAAD,EAAQvhB,KAAR,EAAe8d,WAAf,EAA4BN,QAA5B,CAArB,CAA2DL,UAAtE;EACAjX,MAAAA,UAAU,CAACI,IAAX,CAAgB6X,oBAAoB,CAACR,EAAD,EAAKpD,SAAL,EAAgBjE,KAAhB,EAAuBtW,KAAvB,CAApC;EACH;;EACD,SAAKqiB,OAAL,CAAanc,UAAb,GAA0BA,UAA1B;EACA,SAAKmc,OAAL,CAAaC,MAAb,GAAsB,IAAtB;EACH;;WAGDE,mCAAa;EAAA,wBAC4G,KAAKH,OADjH;EAAA,QACDzb,KADC,iBACDA,KADC;EAAA,QACMV,UADN,iBACMA,UADN;EAAA,QACkB8b,KADlB,iBACkBA,KADlB;EAAA,QACyB/I,GADzB,iBACyBA,GADzB;EAAA,QAC8B4E,UAD9B,iBAC8BA,UAD9B;EAAA,QAC0CiE,KAD1C,iBAC0CA,KAD1C;EAAA,QACiDvH,SADjD,iBACiDA,SADjD;EAAA,QAC4DjE,KAD5D,iBAC4DA,KAD5D;EAAA,QACmEgM,MADnE,iBACmEA,MADnE;EAAA,QAC2EtiB,KAD3E,iBAC2EA,KAD3E;EAAA,QACkF8d,WADlF,iBACkFA,WADlF;EAAA,QAC+FN,QAD/F,iBAC+FA,QAD/F;EAET,QAAI,CAAC8E,MAAL,EAAa;EACb,QAAMlc,CAAC,GAAGkC,IAAI,CAACqO,KAAL,CAAW/P,KAAX,CAAV;;EACA,QAAIR,CAAC,GAAG6S,GAAR,EAAa;EACT,WAAKoJ,OAAL,CAAapJ,GAAb;EACA,UAAI1N,CAAC,GAAGrF,UAAU,CAACE,CAAD,CAAlB,CAFS;;EAIT,UAAI,CAACmF,CAAL,EAAQ;EACJ,YAAMgW,KAAK,GAAG1D,UAAU,CAACwB,KAAX,CAAiBjZ,CAAjB,EAAoBA,CAAC,GAAG0b,KAAxB,CAAd;EACA,YAAMnE,EAAE,GAAGC,qBAAqB,CAAC2D,KAAD,EAAQvhB,KAAR,EAAe8d,WAAf,EAA4BN,QAA5B,CAArB,CAA2DL,UAAtE;EACA5R,QAAAA,CAAC,GAAG4S,oBAAoB,CAACR,EAAD,EAAKpD,SAAL,EAAgBjE,KAAhB,EAAuBtW,KAAvB,CAAxB;EACAkG,QAAAA,UAAU,CAACE,CAAD,CAAV,GAAgBmF,CAAhB;EACH;;EACDoW,MAAAA,+BAA+B,CAAC,KAAKnhB,WAAL,GAAmBqB,QAApB,EAA8B0J,CAAC,CAACnJ,QAAhC,EAA0CmJ,CAAC,CAACrE,MAA5C,EAAoDqE,CAAC,CAAC7E,OAAtD,CAA/B;EACA,WAAKlG,WAAL,GAAmBqB,QAAnB,CAA4BsE,UAA5B,CAAuC/D,QAAvC,CAAgDS,WAAhD,GAA8D,IAA9D;EACA,WAAKrC,WAAL,GAAmBqB,QAAnB,CAA4BsE,UAA5B,CAAuCe,MAAvC,CAA8CrE,WAA9C,GAA4D,IAA5D;EACA,WAAKrC,WAAL,GAAmBqB,QAAnB,CAA4B+E,KAA5B,CAAkC/D,WAAlC,GAAgD,IAAhD;EACH;;EACD,QAAI+D,KAAK,IAAIiX,UAAU,CAACxX,MAAX,GAAoB,CAAjC,EAAoC;EAChC,WAAKgc,OAAL,CAAazb,KAAb,GAAqB,CAAC,CAAtB;EACA,WAAKyb,OAAL,CAAapJ,GAAb,GAAmB,CAAC,CAApB;EACH;;EACD,SAAKoJ,OAAL,CAAazb,KAAb,IAAsBob,KAAtB;EACH;;;IAhH0B7jB;;EClD/B,IAAMskB,MAAM,GAAG,CAAC,OAAD,EAAU,WAAV,EAAuB,WAAvB,EAAoC,SAApC,EAA+C,UAA/C,EAA2D,aAA3D,EAA0Eha,IAA1E,CAA+E,GAA/E,EAAoFC,QAApF,EAAf;EAEA;;;;;EAIA,IAAMga,WAAW,GAAG,SAAdA,WAAc,CAACvjB,IAAD,EAAU;EAE1B;EAAA;EAAA;EAAA;;EAAA;EAAA;EAAA;;EAAA;;EAEI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;;;EAXJ,aAeIwjB,qBAfJ,kCAe0BC,WAf1B,EAeuC;EAC/B,YAAIA,WAAW,IAAIxF,KAAK,CAACC,OAAN,CAAcuF,WAAd,CAAf,IAA6CA,WAAW,CAACvc,MAA7D,EAAqE;EACjE,eAAK,IAAID,CAAC,GAAG,CAAR,EAAWO,GAAG,GAAGic,WAAW,CAACvc,MAAlC,EAA0CD,CAAC,GAAGO,GAA9C,EAAmDP,CAAC,EAApD,EAAwD;EACpD,gBAAMyc,UAAU,GAAGD,WAAW,CAACxc,CAAD,CAA9B;;EACA,iBAAK0c,WAAL,CAAiBD,UAAjB;EACH;EACJ;;EACD,eAAO,IAAP;EACH,OAvBL;EAyBI;;;;;;EAzBJ,aA6BIC,WA7BJ,wBA6BgBD,UA7BhB,EA6B4B;EAAA;;EACpBA,QAAAA,UAAU,CAACzkB,EAAX,CAAc,KAAd,EAAqB,UAACqQ,CAAD,EAAO;EACxB,UAAA,KAAI,CAACsU,aAAL,CAAmBtU,CAAC,CAACuU,MAArB,EAA6B,IAA7B;EACH,SAFD;EAGAH,QAAAA,UAAU,CAACzkB,EAAX,CAAc,QAAd,EAAwB,UAACqQ,CAAD,EAAO;EAC3B,UAAA,KAAI,CAACsU,aAAL,CAAmBtU,CAAC,CAACuU,MAArB,EAA6B,KAA7B;EACH,SAFD;EAGAH,QAAAA,UAAU,CAACzkB,EAAX,CAAc,UAAd,EAA0B,UAACqQ,CAAD,EAAO;EAC7B,UAAA,KAAI,CAAC9O,UAAL,GAAkB,KAAlB;;EACA,UAAA,KAAI,CAACjB,IAAL,CAAU,UAAV,EAAsB4C,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBkN,CAAlB,EAAqB;EAAEuU,YAAAA,MAAM,EAAE,KAAV;EAAgBC,YAAAA,UAAU,EAAG,KAAI,CAACC,aAAL,GAAqB,KAAI,CAACA,aAAL,EAArB,GAA4C;EAAzE,WAArB,CAAtB,EAF6B;;EAIhC,SAJD;EAKAL,QAAAA,UAAU,CAACzkB,EAAX,CAAcqkB,MAAd,EAAsB,UAAChU,CAAD,EAAO;EACzB,UAAA,KAAI,CAAC/P,IAAL,CAAU+P,CAAC,CAACuN,IAAZ,EAAkB1a,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBkN,CAAlB,EAAqB;EAAEuU,YAAAA,MAAM,EAAE,KAAV;EAAgBC,YAAAA,UAAU,EAAG,KAAI,CAACC,aAAL,GAAqB,KAAI,CAACA,aAAL,EAArB,GAA4C;EAAzE,WAArB,CAAlB;EACH,SAFD;EAGH,OA5CL;EA+CI;;;;;;EA/CJ,aAmDIC,qBAnDJ,kCAmD0B1b,SAnD1B,EAmDqC;EAC7B,YAAM2b,MAAM,GAAG,EAAf;EACA,YAAIvB,KAAK,GAAG,CAAZ;;EACA,aAAK,IAAIzb,CAAC,GAAG,CAAR,EAAWO,GAAG,GAAG,KAAK0c,qBAAL,CAA2Bhd,MAAjD,EAAyDD,CAAC,GAAGO,GAA7D,EAAkEP,CAAC,EAAnE,EAAuE;EACnE,cAAI,KAAKid,qBAAL,CAA2Bjd,CAA3B,EAA8B7D,IAA9B,KAAuC,IAA3C,EAAiD;EAC7C6gB,YAAAA,MAAM,CAAC9c,IAAP,CAAYF,CAAZ;EACAyb,YAAAA,KAAK,IAAI,KAAKwB,qBAAL,CAA2Bjd,CAA3B,EAA8BqB,SAA9B,EAAyCoa,KAAlD;EACH;EACJ;;EACD,eAAO;EACHuB,UAAAA,MAAM,EAANA,MADG;EAEHvB,UAAAA,KAAK,EAALA;EAFG,SAAP;EAIH,OAhEL;EAkEI;;;;;;;EAlEJ,aAuEIyB,gBAvEJ,6BAuEqBC,eAvErB,EAuEsC9b,SAvEtC,EAuEiD;EAAA,oCACtB,KAAK0b,qBAAL,CAA2B1b,SAA3B,CADsB;EAAA,YACjC2b,MADiC,yBACjCA,MADiC;;EAEzC,YAAM1b,KAAK,GAAG,KAAK8b,cAAL,CAAoBrd,UAApB,CAA+BsB,SAA/B,EAA0CC,KAAxD;EACA,YAAMf,GAAG,GAAGe,KAAK,CAACrB,MAAlB;;EACA,aAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGO,GAApB,EAAyBP,CAAC,EAA1B,EAA8B;EAC1Bmd,UAAAA,eAAe,CAAC7b,KAAhB,CAAsBtB,CAAtB,IAA2BsB,KAAK,CAACtB,CAAD,CAAhC;EACH;;EACD,YAAIL,KAAK,GAAG0d,GAAZ;;EACA,YAAI,KAAKjjB,WAAL,cAA8BoC,kBAAlC,EAAsD;EAClDmD,UAAAA,KAAK,GAAG,CAAR;EACH;;EACD,aAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuc,MAAM,CAAC/c,MAA3B,EAAmCQ,CAAC,EAApC,EAAwC;EACpC,cAAMD,KAAK,GAAGwc,MAAM,CAACvc,CAAD,CAApB;EADoC,sCAEb,KAAKwc,qBAAL,CAA2Bzc,KAA3B,EAAkCa,SAAlC,CAFa;EAAA,cAE5BqD,KAF4B,yBAE5BA,KAF4B;EAAA,cAErBC,GAFqB,yBAErBA,GAFqB;;EAGpC,eAAK,IAAI3E,EAAC,GAAG0E,KAAb,EAAoB1E,EAAC,GAAG2E,GAAxB,EAA6B3E,EAAC,EAA9B,EAAkC;EAC9Bmd,YAAAA,eAAe,CAAC7b,KAAhB,CAAsBtB,EAAtB,IAA2BL,KAA3B;EACH;EACJ;;EACD,eAAO,IAAP;EACH,OA1FL;EA4FI;;;;;;;EA5FJ,aAiGIgd,aAjGJ,0BAiGkBF,UAjGlB,EAiG8Ba,MAjG9B,EAiGsC;EAC9B,YAAI9c,KAAJ;;EACA,YAAIic,UAAJ,EAAgB;EACZjc,UAAAA,KAAK,GAAGic,UAAU,CAAC7hB,UAAX,GAAwB4F,KAAhC;EACH;;EACD,YAAIA,KAAK,IAAI,IAAb,EAAmB;EACf,cAAM+c,kBAAkB,GAAG,KAAKN,qBAAL,CAA2Bzc,KAA3B,CAA3B;EADe,cAEPrE,IAFO,GAEEohB,kBAFF,CAEPphB,IAFO;;EAGf,cAAIA,IAAI,KAAKmhB,MAAb,EAAqB;EACjB,mBAAO,IAAP;EACH;;EACDC,UAAAA,kBAAkB,CAACphB,IAAnB,GAA0BmhB,MAA1B;EACA,cAAME,QAAQ,GAAG,KAAKpjB,WAAL,GAAmBqB,QAApC;;EACA,eAAKyhB,gBAAL,CAAsBM,QAAQ,CAACzd,UAAT,CAAoB/D,QAA1C,EAAoD,UAApD,EARe;EAUf;EACA;;;EACAwhB,UAAAA,QAAQ,CAACzd,UAAT,CAAoB/D,QAApB,CAA6BS,WAA7B,GAA2C,IAA3C,CAZe;EAcf;EACA;;EACA,eAAK6gB,MAAL,GAAcA,MAAd;EACH;;EACD,eAAO,IAAP;EACH,OAzHL;EA4HI;;;;;EA5HJ,aA+HIR,aA/HJ,4BA+HoB;EACZ,eAAO;EACHtZ,UAAAA,IAAI,EAAE,IADH;EAEHiZ,UAAAA,UAAU,EAAE;EAFT,SAAP;EAIH,OApIL;;EAAA;EAAA,MAAqB1jB,IAArB;EAAA;EAsIH,CAxID;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECDA,IAAM0kB,SAAS;EAAA;EAAA;EAAA;;EAAA;EAAA;EAAA;;EAAA;;EAAA,SACXC,IADW,iBACNC,IADM,EACAlgB,EADA,EACI;EACX;EACA,SAAKmgB,IAAL,CAAUD,IAAV,EAAgB,IAAhB,EAAsBlgB,EAAtB;EACH,GAJU;;EAAA,SAMXogB,SANW,sBAMDzV,CANC,EAMO;EAAA,QAARA,CAAQ;EAARA,MAAAA,CAAQ,GAAJ,EAAI;EAAA;;EAAA,aACuCA,CADvC;EAAA,QACNwN,IADM,MACNA,IADM;EAAA,QACApS,IADA,MACAA,IADA;EAAA,QACMsa,QADN,MACMA,QADN;EAAA,QACgBlkB,KADhB,MACgBA,KADhB;EAAA,QACuB8F,GADvB,MACuBA,GADvB;EAAA,QAC4BmX,MAD5B,MAC4BA,MAD5B;EAEd,QAAImF,MAAJ;;EACA,QAAIpG,IAAI,KAAK,SAAb,EAAwB;EACpBoG,MAAAA,MAAM,GAAG+B,wBAAwB,CAACva,IAAD,EAAOqT,MAAP,EAAejd,KAAf,CAAjC;EACH,KAFD;;EAOA,SAAKgkB,IAAL,CAAU;EAAEhI,MAAAA,IAAI,EAAJA,IAAF;EAAQ4C,MAAAA,KAAK,EAAEwD,MAAM,CAACxD;EAAtB,KAAV,EAAyCwD,MAAM,CAACgC,OAAhD,EAAyD,UAAUC,GAAV,EAAeC,OAAf,EAAwB;EAC7E,UAAID,GAAJ,EAAS;EACLlkB,QAAAA,OAAO,CAACC,KAAR,CAAcikB,GAAd;EACH;;EACDC,MAAAA,OAAO,CAACxe,GAAR,GAAcA,GAAd;EACAoe,MAAAA,QAAQ,CAACI,OAAD,CAAR;EACH,KAND;EAOH,GAvBU;EA2BX;EACA;EACA;;;EA7BW;EAAA,EAAiB1lB,eAAA,CAAgB2lB,KAAjC,CAAf;;EAgCA,IAAIC,KAAJ;AACA,EAAO,SAASC,QAAT,GAAoB;EACvB,MAAI,CAACD,KAAL,EAAY;EACRA,IAAAA,KAAK,GAAG,IAAIX,SAAJ,CAAca,GAAG,CAAC3jB,IAAlB,CAAR;EACH;;EACD,SAAOyjB,KAAP;EACH;EAED;;;;;;EAKA,SAASL,wBAAT,CAAkC7I,QAAlC,EAAiD2B,MAAjD,EAAyDjd,KAAzD,EAAgE;EAAA,MAA9Bsb,QAA8B;EAA9BA,IAAAA,QAA8B,GAAnB,EAAmB;EAAA;;EAC5D,MAAM3U,GAAG,GAAG2U,QAAQ,CAACjV,MAArB;EACA,MAAMuY,KAAK,GAAG,EAAd;EAAA,MAAkB+F,QAAQ,GAAG,EAA7B;;EACA,OAAK,IAAIve,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGO,GAApB,EAAyBP,CAAC,EAA1B,EAA8B;EAC1B,QAAMxE,OAAO,GAAG0Z,QAAQ,CAAClV,CAAD,CAAxB;EACA,QAAMwD,IAAI,GAAGiV,mBAAmB,CAACjd,OAAD,EAAU5B,KAAV,EAAiBid,MAAjB,EAAyB,IAAzB,CAAhC;;EACA,SAAK,IAAIpW,CAAC,GAAG,CAAR,EAAWC,IAAI,GAAG8C,IAAI,CAACvD,MAA5B,EAAoCQ,CAAC,GAAGC,IAAxC,EAA8CD,CAAC,EAA/C,EAAmD;EAC/C,UAAMyK,CAAC,GAAG1H,IAAI,CAAC/C,CAAD,CAAd;;EACA,WAAK,IAAImH,CAAC,GAAG,CAAR,EAAW2O,IAAI,GAAGrL,CAAC,CAACjL,MAAzB,EAAiC2H,CAAC,GAAG2O,IAArC,EAA2C3O,CAAC,EAA5C,EAAgD;EAC5C;EACA2W,QAAAA,QAAQ,CAACre,IAAT,CAAcgL,CAAC,CAACtD,CAAD,CAAf;EACH;EACJ;;EACD,QAAIhG,MAAM,GAAG,CAACkU,gBAAgB,CAACta,OAAD,CAAhB,GAA4BA,OAAO,CAACV,UAApC,GAAiDU,OAAO,CAACX,aAAR,MAA2B,EAA7E,EAAiF+G,MAAjF,IAA2F,CAAxG;EACAA,IAAAA,MAAM,GAAGhI,KAAK,CAACkC,iBAAN,CAAwB8F,MAAxB,EAAgCA,MAAhC,EAAwC7F,CAAjD;EACAyc,IAAAA,KAAK,CAACtY,IAAN,CAAW;EACPsD,MAAAA,IAAI,EAAJA,IADO;EAEP5B,MAAAA,MAAM,EAANA;EAFO,KAAX;EAIH;;EACD,SAAO;EACH4W,IAAAA,KAAK,EAALA,KADG;EAEH+F,IAAAA,QAAQ,EAARA;EAFG,GAAP;EAIH;;EChED,SAASC,eAAT,CAAyBhb,IAAzB,EAA+B;EAC3B;EAD2B,MAEnBxH,QAFmB,GAEewH,IAFf,CAEnBxH,QAFmB;EAAA,MAET8E,MAFS,GAEe0C,IAFf,CAET1C,MAFS;EAAA,MAEDC,EAFC,GAEeyC,IAFf,CAEDzC,EAFC;EAAA,MAEGT,OAFH,GAEekD,IAFf,CAEGlD,OAFH;EAG3B,MAAMU,KAAK,GAAG,IAAIC,YAAJ,CAAiBjF,QAAQ,CAACiE,MAA1B,CAAd;EACAe,EAAAA,KAAK,CAACE,IAAN,CAAW,CAAX,EAAc,CAAd,EAAiBlF,QAAQ,CAACiE,MAA1B;EACA,MAAMR,eAAe,GAAG,IAAIjD,oBAAJ,EAAxB;EACAgD,EAAAA,YAAY,CAACC,eAAD,EAAkB,OAAlB,EAA2B,IAAIjD,qBAAJ,CAA0BwE,KAA1B,EAAiC,CAAjC,CAA3B,CAAZ;EACAxB,EAAAA,YAAY,CAACC,eAAD,EAAkB,QAAlB,EAA4B,IAAIjD,qBAAJ,CAA0B,IAAIyE,YAAJ,CAAiBH,MAAjB,CAA1B,EAAoD,CAApD,CAA5B,CAAZ;EACAtB,EAAAA,YAAY,CAACC,eAAD,EAAkB,UAAlB,EAA8B,IAAIjD,qBAAJ,CAA0B,IAAIyE,YAAJ,CAAiBjF,QAAjB,CAA1B,EAAsD,CAAtD,CAA9B,CAAZ;EACAwD,EAAAA,YAAY,CAACC,eAAD,EAAkB,IAAlB,EAAwB,IAAIjD,qBAAJ,CAA0B,IAAIyE,YAAJ,CAAiBF,EAAjB,CAA1B,EAAgD,CAAhD,CAAxB,CAAZ;EACAtB,EAAAA,eAAe,CAAC0B,QAAhB,CAAyB,IAAI3E,qBAAJ,CAA0B,IAAIqE,WAAJ,CAAgBP,OAAhB,CAA1B,EAAoD,CAApD,CAAzB;EACA,SAAOb,eAAP;EACH;;EAED,IAAMhH,SAAO,GAAG;EACZE,EAAAA,QAAQ,EAAE,CADE;EAEZiJ,EAAAA,MAAM,EAAE,CAFI;EAGZe,EAAAA,QAAQ,EAAE,IAHE;EAIZD,EAAAA,WAAW,EAAE;EAJD,CAAhB;;MAOM+b;;;;;EACF,2BAAYvJ,QAAZ,EAAsB9b,OAAtB,EAA+BkD,QAA/B,EAAyC1C,KAAzC,EAAgD;EAAA;;EAC5C,QAAI,CAACod,KAAK,CAACC,OAAN,CAAc/B,QAAd,CAAL,EAA8B;EAC1BA,MAAAA,QAAQ,GAAG,CAACA,QAAD,CAAX;EACH;;EACD,QAAMwJ,OAAO,GAAG,EAAhB;EACA,QAAMne,GAAG,GAAG2U,QAAQ,CAACjV,MAArB;;EACA,SAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGO,GAApB,EAAyBP,CAAC,EAA1B,EAA8B;EAC1B,UAAMxE,OAAO,GAAG0Z,QAAQ,CAAClV,CAAD,CAAxB;EACA0e,MAAAA,OAAO,CAACxe,IAAR,CAAa4V,gBAAgB,CAACta,OAAD,CAAhB,GAA4B6a,gBAAgB,CAAC7a,OAAD,CAA5C,GAAwDA,OAAO,CAACH,SAAR,EAArE;EACH,KAT2C;;;EAW5C,QAAMwb,MAAM,GAAG8B,iBAAiB,CAAC+F,OAAD,CAAhC;EACAtlB,IAAAA,OAAO,GAAGZ,aAAA,CAAcsG,MAAd,CAAqB,EAArB,EAAyBrG,SAAzB,EAAkCW,OAAlC,EAA2C;EAAEQ,MAAAA,KAAK,EAALA,KAAF;EAASsb,MAAAA,QAAQ,EAARA,QAAT;EAAmB5Z,MAAAA,UAAU,EAAEub;EAA/B,KAA3C,CAAV;EAZ4C,mBAaczd,OAbd;EAAA,QAapCuJ,QAboC,YAapCA,QAboC;EAAA,QAa1BD,WAb0B,YAa1BA,WAb0B;EAAA,QAab/J,QAba,YAabA,QAba;EAAA,QAaHG,YAbG,YAaHA,YAbG;EAc5C,QAAImK,cAAJ;EACA,QAAM0b,eAAe,GAAG,EAAxB;EAAA,QAA4BC,OAAO,GAAG,EAAtC;EAAA,QAA0CC,oBAAoB,GAAG,EAAjE;;EACA,QAAI/lB,YAAJ,EAAkB;EACd,UAAIslB,KAAK,GAAGC,QAAQ,EAApB;EACA,UAAMS,IAAI,GAAG,QAAb;EACA7b,MAAAA,cAAc,GAAG,IAAIzG,uBAAJ,CAA4BsiB,IAA5B,EAAkCA,IAAlC,EAAwCA,IAAI,GAAG,CAA/C,CAAjB;EACAV,MAAAA,KAAK,CAACP,SAAN,CAAgB;EACZjI,QAAAA,IAAI,EAAE,SADM;EAEZhc,QAAAA,KAAK,EAALA,KAFY;EAGZ8F,QAAAA,GAAG,EAAEtG,OAAO,CAACsG,GAHD;EAIZmX,QAAAA,MAAM,EAANA,MAJY;EAKZrT,QAAAA,IAAI,EAAE0R,QALM;EAMZ4I,QAAAA,QAAQ,EAAE,kBAACzV,CAAD,EAAO;EAAA,cACLuW,OADK,GAC6BvW,CAD7B,CACLuW,OADK;EAAA,cACIC,oBADJ,GAC6BxW,CAD7B,CACIwW,oBADJ;EAEb,gBAAKE,QAAL,GAAgBH,OAAhB;EACA,gBAAK3B,qBAAL,GAA6B4B,oBAA7B;EACA,cAAM5b,cAAc,GAAGub,eAAe,CAACnW,CAAD,CAAtC;;EACA,cAAI1F,QAAQ,IAAI,CAACrG,QAAQ,CAAC8G,GAA1B,EAA+B;EAC3Bb,YAAAA,kBAAgB,CAACU,cAAD,EAAiBP,WAAjB,EAA8BC,QAA9B,CAAhB;EACArG,YAAAA,QAAQ,CAACI,YAAT,GAAwBF,kBAAxB;EACH;;EACD,gBAAKpC,WAAL,GAAmBqB,QAAnB,CAA4BujB,OAA5B;;EACA,gBAAK5kB,WAAL,GAAmBqB,QAAnB,GAA8BwH,cAA9B;EACA,gBAAK7I,WAAL,GAAmBkC,QAAnB,CAA4BG,WAA5B,GAA0C,IAA1C;EACA,gBAAK2gB,cAAL,GAAsBna,cAAc,CAACtG,KAAf,EAAtB;;EACA,gBAAKnC,KAAL,CAAW,YAAX,EAAyB;EAAEoiB,YAAAA,MAAM;EAAR,WAAzB;EACH;EApBW,OAAhB;EAsBH,KA1BD,MA0BO;EACH,UAAM9c,UAAU,GAAG,EAAnB;EACA,UAAImf,SAAS,GAAG,CAAhB;EAAA,UAAmBC,OAAO,GAAG,CAA7B;EAAA,UAAgCC,WAAW,GAAG,CAA9C;EAAA,UAAiDC,OAAO,GAAG,CAA3D;;EACA,WAAK,IAAIpf,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGO,GAApB,EAAyBP,EAAC,EAA1B,EAA8B;EAC1B,YAAMxE,QAAO,GAAG0Z,QAAQ,CAAClV,EAAD,CAAxB;EACA,YAAM4B,MAAM,GAAG,CAACkU,gBAAgB,CAACta,QAAD,CAAhB,GAA4BA,QAAO,CAACV,UAApC,GAAiDU,QAAO,CAACX,aAAR,MAA2B,EAA7E,EAAiF+G,MAAjF,IAA2F,CAA1G;EACA,YAAM4b,QAAQ,GAAGjF,wBAAwB,CAAC/c,QAAD,EAAUoG,MAAV,EAAkBhI,KAAlB,EAAyBid,MAAzB,CAAzC;EACA/W,QAAAA,UAAU,CAACI,IAAX,CAAgBsd,QAAhB,EAJ0B;EAO1B;;EAP0B,YASlBxhB,QATkB,GASgBwhB,QAThB,CASlBxhB,QATkB;EAAA,YASR8E,MATQ,GASgB0c,QAThB,CASR1c,MATQ;EAAA,YASAC,EATA,GASgByc,QAThB,CASAzc,EATA;EAAA,YASIT,OATJ,GASgBkd,QAThB,CASIld,OATJ;EAU1B,YAAM+e,OAAO,GAAG/e,OAAO,CAACL,MAAR,GAAiB,CAAjC;EACA2e,QAAAA,OAAO,CAAC5e,EAAD,CAAP,GAAa,CAACif,SAAS,GAAG,CAAb,EAAgBA,SAAS,GAAGI,OAA5B,CAAb;EACAJ,QAAAA,SAAS,IAAII,OAAb;EACA,YAAMC,OAAO,GAAGtjB,QAAQ,CAACiE,MAAT,GAAkB,CAAlC;EAAA;EAEIsf,QAAAA,WAAW,GAAGze,MAAM,CAACb,MAAP,GAAgB,CAFlC;EAAA,YAEqCuf,OAAO,GAAGze,EAAE,CAACd,MAAH,GAAY,CAF3D;EAGA4e,QAAAA,oBAAoB,CAAC7e,EAAD,CAApB,GAA0B;EACtBhE,UAAAA,QAAQ,EAAE;EACNyf,YAAAA,KAAK,EAAE6D,OADD;EAEN5a,YAAAA,KAAK,EAAEwa,OAFD;EAGNva,YAAAA,GAAG,EAAEua,OAAO,GAAGI,OAAO,GAAG;EAHnB,WADY;EAMtBxe,UAAAA,MAAM,EAAE;EACJ2a,YAAAA,KAAK,EAAE8D,WADH;EAEJ7a,YAAAA,KAAK,EAAEya,WAFH;EAGJxa,YAAAA,GAAG,EAAEwa,WAAW,GAAGI,WAAW,GAAG;EAH7B,WANc;EAWtB;EACA;EACA;EACA;EACA;EACAxe,UAAAA,EAAE,EAAE;EACA0a,YAAAA,KAAK,EAAE+D,OADP;EAEA9a,YAAAA,KAAK,EAAE0a,OAFP;EAGAza,YAAAA,GAAG,EAAEya,OAAO,GAAGI,OAAO,GAAG;EAHzB,WAhBkB;EAqBtBrjB,UAAAA,IAAI,EAAE;EArBgB,SAA1B;EAuBA+iB,QAAAA,OAAO,IAAII,OAAO,GAAG,CAArB;EACAH,QAAAA,WAAW,IAAII,WAAW,GAAG,CAA7B,CAxC0B;;EA0C1BH,QAAAA,OAAO,IAAII,OAAO,GAAG,CAArB;EACH;;EACDvc,MAAAA,cAAc,GAAGpD,qBAAqB,CAACC,UAAD,CAAtC;;EACA,UAAI6C,QAAQ,IAAI,CAACrG,QAAQ,CAAC8G,GAA1B,EAA+B;EAC3Bb,QAAAA,kBAAgB,CAACU,cAAD,EAAiBP,WAAjB,EAA8BC,QAA9B,CAAhB;EACArG,QAAAA,QAAQ,CAACI,YAAT,GAAwBF,kBAAxB;EACH;EACJ;;EAED;;EACA,UAAKqC,YAAL,CAAkBzF,OAAlB;;EAEA,UAAK2F,WAAL,CAAiBkE,cAAjB,EAAiC3G,QAAjC;;EACA,QAAMT,CAAC,GAAGjC,KAAK,CAACkC,iBAAN,CAAwBnD,QAAxB,EAAkCA,QAAlC,EAA4CoD,CAAtD;EACA,QAAM0G,CAAC,GAAG7I,KAAK,CAACyJ,mBAAN,CAA0BwT,MAA1B,EAAkChb,CAAlC,CAAV;;EACA,UAAKzB,WAAL,GAAmB4B,QAAnB,CAA4BsH,IAA5B,CAAiCb,CAAjC,EAtG4C;;;EAyG5C,UAAKsc,QAAL,GAAgBH,OAAhB;EACA,UAAKa,YAAL,GAAoBd,eAApB;EACA,UAAKe,MAAL,GAAcxK,QAAd;EACA,UAAK+H,qBAAL,GAA6B4B,oBAA7B;EACA,UAAKI,SAAL,GAAiB,IAAjB;EACA,UAAK7B,cAAL,GAAsBna,cAAc,CAACtG,KAAf,EAAtB;EACA,UAAK2gB,MAAL,GAAc,KAAd;;EAEA,UAAKf,qBAAL,CAA2BoC,eAA3B;;EAjH4C;EAkH/C;;;;;WAGD7B,yCAAgB;EACZ,QAAMtc,KAAK,GAAG,KAAKmf,SAAL,EAAd;;EACA,QAAInf,KAAK,IAAI,IAAb,EAAmB;EACf,UAAI,CAAC,KAAKif,YAAL,CAAkBjf,KAAlB,CAAL,EAA+B;EAC3B,YAAMhF,OAAO,GAAG,KAAKkkB,MAAL,CAAYlf,KAAZ,CAAhB;EACA,YAAMyP,IAAI,GAAG/U,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAK/B,OAAvB,EAAgC0c,gBAAgB,CAACta,OAAD,CAAhB,GAA4BA,OAAO,CAACV,UAApC,GAAiDU,OAAO,CAACX,aAAR,EAAjF,EAA0G;EAAE2F,UAAAA,KAAK,EAALA;EAAF,SAA1G,CAAb;EACA,aAAKif,YAAL,CAAkBjf,KAAlB,IAA2B,IAAIgZ,cAAJ,CAAmBhe,OAAnB,EAA4ByU,IAA5B,EAAkC,KAAK7V,WAAL,GAAmBkC,QAArD,EAA+D,KAAKpC,QAAL,EAA/D,CAA3B;;EACA,aAAKwiB,WAAL,CAAiB,KAAK+C,YAAL,CAAkBjf,KAAlB,CAAjB;EACH;;EACD,aAAO;EACHgD,QAAAA,IAAI,EAAE,KAAKkc,MAAL,CAAYlf,KAAZ,CADH;EAEHic,QAAAA,UAAU,EAAE,KAAKgD,YAAL,CAAkBjf,KAAlB;EAFT,OAAP;EAIH;EACJ;;;WAGDmf,+BAAUV,WAAW;EACjB,QAAIA,SAAS,IAAI,IAAjB,EAAuB;EACnBA,MAAAA,SAAS,GAAG,KAAKA,SAAjB;EACH;;EACD,QAAIA,SAAS,IAAI,IAAjB,EAAuB;EACnB,WAAK,IAAIjf,CAAC,GAAG,CAAR,EAAWO,IAAG,GAAG,KAAKwe,QAAL,CAAc9e,MAApC,EAA4CD,CAAC,GAAGO,IAAhD,EAAqDP,CAAC,EAAtD,EAA0D;EAAA,+BACjC,KAAK+e,QAAL,CAAc/e,CAAd,CADiC;EAAA,YAC/C0E,KAD+C;EAAA,YACxCC,GADwC;;EAEtD,YAAID,KAAK,IAAIua,SAAT,IAAsBA,SAAS,GAAGta,GAAtC,EAA2C;EACvC,iBAAO3E,CAAP;EACH;EACJ;EACJ;EACJ;;;IAnJyBsc,WAAW,CAACvkB,aAAD;;ECjCzC;AACA;AA0BA,EAAO,SAAS6nB,YAAT,CAAsBC,YAAtB,EAAoCxN,IAApC,EAA0CyN,MAA1C,EAAkD;EACrD;EACA,MAAMC,MAAM,GAAGF,YAAY,CAACG,OAAb,CAAqBF,MAArB,CAAf;EACA,MAAMG,SAAS,GAAG5N,IAAI,CAACvB,KAAL,GAAa,CAA/B;EACA,MAAMoP,UAAU,GAAG7N,IAAI,CAACzQ,MAAL,GAAc,CAAjC;EACA,MAAMiJ,MAAM,GAAG;EACX9O,IAAAA,CAAC,EAAEmG,IAAI,CAACqO,KAAL,CAAWwP,MAAM,CAAChkB,CAAP,GAAWkkB,SAAX,GAAuBA,SAAlC,CADQ;EAEXpd,IAAAA,CAAC,EAAEX,IAAI,CAACqO,KAAL,CAAW,CAACwP,MAAM,CAACld,CAAR,GAAYqd,UAAZ,GAAyBA,UAApC;EAFQ,GAAf;EAIA,SAAOrV,MAAP;EACH;;EC/BD,IAAMpS,SAAO,GAAG;EACZE,EAAAA,QAAQ,EAAE,CADE;EAEZiJ,EAAAA,MAAM,EAAE;EAFI,CAAhB;EAKA,IAAMme,MAAM,GAAG,IAAIvjB,aAAJ,EAAf;;MAEM2jB;;;;;EACF,iBAAY7kB,UAAZ,EAAwBlC,OAAxB,EAAiCkD,QAAjC,EAA2C1C,KAA3C,EAAkD;EAAA;;EAC9CR,IAAAA,OAAO,GAAGZ,aAAA,CAAcsG,MAAd,CAAqB,EAArB,EAAyBrG,SAAzB,EAAkCW,OAAlC,EAA2C;EAAEQ,MAAAA,KAAK,EAALA,KAAF;EAAS0B,MAAAA,UAAU,EAAVA;EAAT,KAA3C,CAAV;EACA;EAF8C,mBAGZlC,OAHY;EAAA,QAGxCwI,MAHwC,YAGxCA,MAHwC;EAAA,QAGhCjJ,QAHgC,YAGhCA,QAHgC;EAAA,QAGtBqI,KAHsB,YAGtBA,KAHsB;EAI9C,QAAMof,EAAE,GAAG,EAAX;EAAA,QAAexd,MAAM,GAAG,EAAxB;;EACA,QAAI5B,KAAJ,EAAW;EACPA,MAAAA,KAAK,GAAIA,KAAK,YAAYxE,WAAjB,GAA+BwE,KAA/B,GAAuC,IAAIxE,WAAJ,CAAgBwE,KAAhB,CAAhD;EACA4B,MAAAA,MAAM,CAAC1C,IAAP,CAAYc,KAAK,CAAC8B,CAAlB,EAAqB9B,KAAK,CAACmX,CAA3B,EAA8BnX,KAAK,CAAC+B,CAApC;EACH;;EACD,QAAMlH,CAAC,GAAGjC,KAAK,CAACkC,iBAAN,CAAwB8F,MAAxB,EAAgCA,MAAhC,EAAwC7F,CAAlD;EACA,QAAM0G,CAAC,GAAG7I,KAAK,CAACyJ,mBAAN,CAA0B/H,UAA1B,EAAsCO,CAAtC,CAAV;EACAukB,IAAAA,EAAE,CAAClgB,IAAH,CAAQuC,CAAC,CAAC1G,CAAV,EAAa0G,CAAC,CAACI,CAAf,EAAkBJ,CAAC,CAAC5G,CAApB;EACA,QAAMJ,QAAQ,GAAG,IAAIe,oBAAJ,EAAjB;EACAgD,IAAAA,YAAY,CAAC/D,QAAD,EAAW,UAAX,EAAuB,IAAIe,4BAAJ,CAAiC4jB,EAAjC,EAAqC,CAArC,EAAwC,IAAxC,CAAvB,CAAZ;;EACA,QAAIxd,MAAM,CAAC3C,MAAX,EAAmB;EACfT,MAAAA,YAAY,CAAC/D,QAAD,EAAW,OAAX,EAAoB,IAAIe,4BAAJ,CAAiCoG,MAAjC,EAAyC,CAAzC,EAA4C,IAA5C,CAApB,CAAZ;EACH;;EAEDxJ,IAAAA,OAAO,CAAC0d,SAAR,GAAoBrU,CAApB;;EACA,UAAK5D,YAAL,CAAkBzF,OAAlB;;EACA,UAAKgG,aAAL,CAAmB3D,QAAnB,EAA6Ba,QAA7B;;EACA,QAAM+jB,EAAE,GAAGzmB,KAAK,CAACkC,iBAAN,CAAwBnD,QAAxB,EAAkCA,QAAlC,EAA4CoD,CAAvD;EACA,UAAK3B,WAAL,GAAmB4B,QAAnB,CAA4BH,CAA5B,GAAgCwkB,EAAhC;EAtB8C;EAuBjD;EAED;;;;;;;;WAIAC,6BAAShlB,YAAY;EACjB,QAAM1B,KAAK,GAAG,KAAKM,QAAL,EAAd;EAAA,QAA+BmY,IAAI,GAAG,KAAKjX,MAAL,GAAcmlB,OAAd,EAAtC;EAAA,QACIT,MAAM,GAAG,KAAK5lB,QAAL,GAAgBsmB,SAAhB,EADb;EAAA,QAC0C1J,SAAS,GAAG,KAAKlc,UAAL,GAAkBkc,SADxE;EAAA,QACmFne,QAAQ,GAAG,KAAKiC,UAAL,GAAkBjC,QADhH,CADiB;;EAIjB,QAAM8nB,SAAS,GAAG,KAAKrmB,WAAL,GAAmBkC,QAAnB,CAA4B+V,IAA9C;EACA,QAAMqO,KAAK,GAAG,KAAKtlB,MAAL,GAAculB,qBAAd,CAAoCrlB,UAApC,CAAd;EAEA,QAAMO,CAAC,GAAGjC,KAAK,CAACkC,iBAAN,CAAwBnD,QAAxB,EAAkCA,QAAlC,EAA4CoD,CAAtD;EACAgkB,IAAAA,MAAM,CAAChkB,CAAP,GAAW+a,SAAS,CAAC/a,CAArB;EACAgkB,IAAAA,MAAM,CAACld,CAAP,GAAWiU,SAAS,CAACjU,CAArB;EACAkd,IAAAA,MAAM,CAAClkB,CAAP,GAAWib,SAAS,CAACjb,CAAV,GAAcA,CAAzB,CAViB;;EAYjB,QAAMsJ,CAAC,GAAGya,YAAY,CAACG,MAAD,EAAS1N,IAAT,EAAeyN,MAAf,CAAtB,CAZiB;;EAcjB,QAAM5F,QAAQ,GAAGhY,IAAI,CAAC2K,IAAL,CAAU3K,IAAI,CAACoY,GAAL,CAASoG,KAAK,CAAC3kB,CAAN,GAAUoJ,CAAC,CAACpJ,CAArB,EAAwB,CAAxB,IAA6BmG,IAAI,CAACoY,GAAL,CAASoG,KAAK,CAAC7d,CAAN,GAAUsC,CAAC,CAACtC,CAArB,EAAwB,CAAxB,CAAvC,CAAjB;;EACA,QAAIqX,QAAQ,IAAIuG,SAAS,GAAG,CAA5B,EAA+B;EAC3B,aAAO,IAAP;EACH;;EACD,WAAO,KAAP;EACH;;;IAjDe1oB;;ECVpB,IAAM6oB,GAAG,GAAG,EAAZ;EAAA,IAAgBC,GAAG,GAAG,EAAtB;;EAGA,SAASC,QAAT,CAAkB/d,CAAlB,EAAqBoC,CAArB,EAAwB;EAAA,MACZ4b,IADY,GACehe,CADf,CACZge,IADY;EAAA,MACNC,IADM,GACeje,CADf,CACNie,IADM;EAAA,MACAC,IADA,GACele,CADf,CACAke,IADA;EAAA,MACMC,IADN,GACene,CADf,CACMme,IADN;EAAA,MAEbnlB,CAFa,GAELoJ,CAFK;EAAA,MAEVtC,CAFU,GAELsC,CAFK;;EAGpB,MAAI4b,IAAI,IAAIhlB,CAAR,IAAaA,CAAC,IAAIklB,IAAlB,IAA0BD,IAAI,IAAIne,CAAlC,IAAuCA,CAAC,IAAIqe,IAAhD,EAAsD;EAClD,WAAO,IAAP;EACH;;EACD,SAAO,KAAP;EACH;;MAEKC;;;EAEF,gBAAYC,MAAZ,EAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,MAApC,EAA4C;EACxC,SAAKH,MAAL,GAAcA,MAAd;EACA,SAAKC,MAAL,GAAcA,MAAd;EACA,SAAKC,MAAL,GAAcA,MAAd;EACA,SAAKC,MAAL,GAAcA,MAAd;EACA,SAAKR,IAAL,GAAYpZ,QAAZ;EACA,SAAKqZ,IAAL,GAAYrZ,QAAZ;EACA,SAAKsZ,IAAL,GAAY,CAACtZ,QAAb;EACA,SAAKuZ,IAAL,GAAY,CAACvZ,QAAb;EACA,SAAKyO,WAAL,GAAmB,EAAnB;EACA,SAAKU,SAAL,GAAiB,EAAjB;EACA,SAAKkG,MAAL,GAAc,EAAd;EACA,SAAKtd,GAAL,GAAW,IAAX;EACH;EAGD;;;;;;;;WAIA8hB,2CAAgBpe,KAAK;EACjB,QAAI2d,IAAI,GAAGpZ,QAAX;EAAA,QAAqBqZ,IAAI,GAAGrZ,QAA5B;EAAA,QAAsCsZ,IAAI,GAAG,CAACtZ,QAA9C;EAAA,QAAwDuZ,IAAI,GAAG,CAACvZ,QAAhE;EADiB,QAETyZ,MAFS,GAE0B,IAF1B,CAETA,MAFS;EAAA,QAEDC,MAFC,GAE0B,IAF1B,CAEDA,MAFC;EAAA,QAEOC,MAFP,GAE0B,IAF1B,CAEOA,MAFP;EAAA,QAEeC,MAFf,GAE0B,IAF1B,CAEeA,MAFf;EAGjB,KACI,CAACH,MAAD,EAASC,MAAT,CADJ,EAEI,CAACD,MAAD,EAASG,MAAT,CAFJ,EAGI,CAACD,MAAD,EAASD,MAAT,CAHJ,EAII,CAACC,MAAD,EAASC,MAAT,CAJJ,EAKEne,GALF,CAKM,UAAAyU,MAAM,EAAI;EACZ,aAAO,IAAIrf,mBAAJ,CAAwBqf,MAAxB,CAAP;EACH,KAPD,EAOGzU,GAPH,CAOO,UAAA9H,UAAU,EAAI;EACjB,aAAO8H,GAAG,CAACud,qBAAJ,CAA0BrlB,UAA1B,CAAP;EACH,KATD,EASG4c,OATH,CASW,UAAAwI,KAAK,EAAI;EAChBK,MAAAA,IAAI,GAAG7e,IAAI,CAAC8H,GAAL,CAAS+W,IAAT,EAAeL,KAAK,CAAC3kB,CAArB,CAAP;EACAilB,MAAAA,IAAI,GAAG9e,IAAI,CAAC8H,GAAL,CAASgX,IAAT,EAAeN,KAAK,CAAC7d,CAArB,CAAP;EACAoe,MAAAA,IAAI,GAAG/e,IAAI,CAACsC,GAAL,CAASyc,IAAT,EAAeP,KAAK,CAAC3kB,CAArB,CAAP;EACAmlB,MAAAA,IAAI,GAAGhf,IAAI,CAACsC,GAAL,CAAS0c,IAAT,EAAeR,KAAK,CAAC7d,CAArB,CAAP;EACH,KAdD;EAeA,SAAKke,IAAL,GAAYA,IAAZ;EACA,SAAKC,IAAL,GAAYA,IAAZ;EACA,SAAKC,IAAL,GAAYA,IAAZ;EACA,SAAKC,IAAL,GAAYA,IAAZ;EACA,WAAO,IAAP;EACH;EAED;;;;;;WAIAO,iDAAmBzb,GAAG;EAClB,QAAIyU,GAAJ,EAASC,GAAT;;EACA,QAAI1D,KAAK,CAACC,OAAN,CAAcjR,CAAd,CAAJ,EAAsB;EAClByU,MAAAA,GAAG,GAAGzU,CAAC,CAAC,CAAD,CAAP;EACA0U,MAAAA,GAAG,GAAG1U,CAAC,CAAC,CAAD,CAAP;EACH,KAHD,MAGO,IAAIA,CAAC,YAAYxN,mBAAjB,EAAsC;EACzCiiB,MAAAA,GAAG,GAAGzU,CAAC,CAACjK,CAAR;EACA2e,MAAAA,GAAG,GAAG1U,CAAC,CAACnD,CAAR;EACH;;EARiB,QASVue,MATU,GASyB,IATzB,CASVA,MATU;EAAA,QASFC,MATE,GASyB,IATzB,CASFA,MATE;EAAA,QASMC,MATN,GASyB,IATzB,CASMA,MATN;EAAA,QAScC,MATd,GASyB,IATzB,CAScA,MATd;;EAUlB,QAAIH,MAAM,IAAI3G,GAAV,IAAiBA,GAAG,IAAI6G,MAAxB,IAAkCD,MAAM,IAAI3G,GAAV,GAAgBA,GAAG,IAAI6G,MAA7D,EAAqE;EACjE,aAAO,IAAP;EACH;;EACD,WAAO,KAAP;EACH;EAED;;;;;;;WAKAG,iCAAWhB,OAAOrO,MAAM;EAAA,QACZtW,CADY,GACH2kB,KADG,CACZ3kB,CADY;EAAA,QACT8G,CADS,GACH6d,KADG,CACT7d,CADS;EAEpB,QAAM8e,GAAG,GAAG;EACRZ,MAAAA,IAAI,EAAEhlB,CAAC,GAAGsW,IAAI,GAAG,CADT;EAER2O,MAAAA,IAAI,EAAEne,CAAC,GAAGwP,IAAI,GAAG,CAFT;EAGR4O,MAAAA,IAAI,EAAEllB,CAAC,GAAGsW,IAAI,GAAG,CAHT;EAIR6O,MAAAA,IAAI,EAAEre,CAAC,GAAGwP,IAAI,GAAG;EAJT,KAAZ;EAFoB,QAQZ0O,IARY,GAQeY,GARf,CAQZZ,IARY;EAAA,QAQNC,IARM,GAQeW,GARf,CAQNX,IARM;EAAA,QAQAC,IARA,GAQeU,GARf,CAQAV,IARA;EAAA,QAQMC,IARN,GAQeS,GARf,CAQMT,IARN;;EASpB,QAAIJ,QAAQ,CAAC,IAAD,EAAO,CAACC,IAAD,EAAOC,IAAP,CAAP,CAAR,IACAF,QAAQ,CAAC,IAAD,EAAO,CAACC,IAAD,EAAOG,IAAP,CAAP,CADR,IAEAJ,QAAQ,CAAC,IAAD,EAAO,CAACG,IAAD,EAAOD,IAAP,CAAP,CAFR,IAGAF,QAAQ,CAAC,IAAD,EAAO,CAACG,IAAD,EAAOC,IAAP,CAAP,CAHR,IAIAJ,QAAQ,CAACa,GAAD,EAAM,CAAC,KAAKZ,IAAN,EAAY,KAAKC,IAAjB,CAAN,CAJR,IAKAF,QAAQ,CAACa,GAAD,EAAM,CAAC,KAAKZ,IAAN,EAAY,KAAKG,IAAjB,CAAN,CALR,IAMAJ,QAAQ,CAACa,GAAD,EAAM,KAAKV,IAAX,EAAiB,KAAKD,IAAtB,CANR,IAOAF,QAAQ,CAACa,GAAD,EAAM,KAAKV,IAAX,EAAiB,KAAKC,IAAtB,CAPZ,EAOyC;EACrC,aAAO,IAAP;EACH;;EACD,WAAO,KAAP;EACH;EAED;;;;;;;;;SAOOU,+BAAUR,QAAQC,QAAQC,QAAQC,QAAQ;EAC7C,QAAMM,KAAK,GAAG,EAAd;EAAA,QAAkBC,OAAO,GAAGR,MAAM,GAAGF,MAArC;EAAA,QAA6CW,OAAO,GAAGR,MAAM,GAAGF,MAAhE;EACA,QAAMW,QAAQ,GAAGF,OAAO,GAAGjB,GAA3B;EAAA,QAAgCoB,QAAQ,GAAGF,OAAO,GAAGnB,GAArD;EACA,QAAI7kB,CAAC,GAAGqlB,MAAR;EAAA,QAAgBve,CAAC,GAAGwe,MAApB;;EACA,SAAK,IAAIrhB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6gB,GAApB,EAAyB7gB,CAAC,EAA1B,EAA8B;EAC1BjE,MAAAA,CAAC,GAAGqlB,MAAM,GAAGphB,CAAC,GAAGgiB,QAAjB;;EACA,WAAK,IAAIvhB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmgB,GAApB,EAAyBngB,CAAC,EAA1B,EAA8B;EAC1BoC,QAAAA,CAAC,GAAGwe,MAAM,GAAG5gB,CAAC,GAAGwhB,QAAjB;EACA,YAAMC,MAAM,GAAG,IAAIf,IAAJ,CAASplB,CAAT,EAAY8G,CAAZ,EAAe9G,CAAC,GAAGimB,QAAnB,EAA6Bnf,CAAC,GAAGof,QAAjC,CAAf;EACAC,QAAAA,MAAM,CAACxiB,GAAP,GAAae,CAAC,GAAG,GAAJ,GAAUT,CAAvB;EACA6hB,QAAAA,KAAK,CAAC3hB,IAAN,CAAWgiB,MAAX;EACH;EACJ;;EACD,WAAOL,KAAP;EACH;;;;;ECzHL,IAAMppB,SAAO,GAAG;EACZE,EAAAA,QAAQ,EAAE;EADE,CAAhB;EAIA,IAAMonB,QAAM,GAAG,IAAIvjB,aAAJ,EAAf;EAEA;;;;MAGM2lB;;;;;EACF,kBAAY1W,MAAZ,EAAoBrS,OAApB,EAA6BkD,QAA7B,EAAuC1C,KAAvC,EAA8C;EAAA;;EAC1C,QAAI,CAACod,KAAK,CAACC,OAAN,CAAcxL,MAAd,CAAL,EAA4B;EACxBA,MAAAA,MAAM,GAAG,CAACA,MAAD,CAAT;EACH;;EACDrS,IAAAA,OAAO,GAAGZ,aAAA,CAAcsG,MAAd,CAAqB,EAArB,EAAyBrG,SAAzB,EAAkCW,OAAlC,EAA2C;EAAEQ,MAAAA,KAAK,EAALA,KAAF;EAAS6R,MAAAA,MAAM,EAANA;EAAT,KAA3C,CAAV;EACA,QAAIvH,IAAI,GAAGyD,QAAX;EAAA,QAAqBxD,IAAI,GAAGwD,QAA5B;EAAA,QAAsCvD,IAAI,GAAG,CAACuD,QAA9C;EAAA,QAAwDtD,IAAI,GAAG,CAACsD,QAAhE;;EACA,SAAK,IAAI3H,CAAC,GAAG,CAAR,EAAWO,GAAG,GAAGkL,MAAM,CAACxL,MAA7B,EAAqCD,CAAC,GAAGO,GAAzC,EAA8CP,CAAC,EAA/C,EAAmD;EAAA,UACvC1E,UADuC,GACxBmQ,MAAM,CAACzL,CAAD,CADkB,CACvC1E,UADuC;EAE/C,UAAIS,CAAC,SAAL;EAAA,UAAO8G,CAAC,SAAR;;EACA,UAAImU,KAAK,CAACC,OAAN,CAAc3b,UAAd,CAAJ,EAA+B;EAC3BS,QAAAA,CAAC,GAAGT,UAAU,CAAC,CAAD,CAAd;EACAuH,QAAAA,CAAC,GAAGvH,UAAU,CAAC,CAAD,CAAd;EACH,OAHD,MAGO,IAAIA,UAAU,YAAY9C,mBAA1B,EAA+C;EAClDuD,QAAAA,CAAC,GAAGT,UAAU,CAACS,CAAf;EACA8G,QAAAA,CAAC,GAAGvH,UAAU,CAACuH,CAAf;EACH;;EACDqB,MAAAA,IAAI,GAAGhC,IAAI,CAAC8H,GAAL,CAAS9F,IAAT,EAAenI,CAAf,CAAP;EACAoI,MAAAA,IAAI,GAAGjC,IAAI,CAAC8H,GAAL,CAAS7F,IAAT,EAAetB,CAAf,CAAP;EACAuB,MAAAA,IAAI,GAAGlC,IAAI,CAACsC,GAAL,CAASJ,IAAT,EAAerI,CAAf,CAAP;EACAsI,MAAAA,IAAI,GAAGnC,IAAI,CAACsC,GAAL,CAASH,IAAT,EAAexB,CAAf,CAAP;EACH;;EACD,QAAMgf,KAAK,GAAGV,IAAI,CAACS,SAAL,CAAe1d,IAAf,EAAqBC,IAArB,EAA2BC,IAA3B,EAAiCC,IAAjC,CAAd;EACA,QAAM+d,QAAQ,GAAGP,KAAK,CAAC5hB,MAAvB;EAEA,QAAMmgB,EAAE,GAAG,EAAX;EAAA,QAAeiC,OAAO,GAAG,EAAzB;EAAA,QAA6Bzf,MAAM,GAAG,EAAtC;EAAA,QAA0C0f,WAAW,GAAG,EAAxD;EAAA,QAA4DzD,oBAAoB,GAAG,EAAnF;;EACA,SAAK,IAAI7e,EAAC,GAAG,CAAR,EAAWO,IAAG,GAAGkL,MAAM,CAACxL,MAA7B,EAAqCD,EAAC,GAAGO,IAAzC,EAA8CP,EAAC,EAA/C,EAAmD;EAAA,uBACXyL,MAAM,CAACzL,EAAD,CADK;EAAA,UACzC1E,UADyC,cACzCA,UADyC;EAAA,UAC7BsG,MAD6B,cAC7BA,MAD6B;EAAA,UACrBZ,KADqB,cACrBA,KADqB;;EAE/C,UAAIA,KAAJ,EAAW;EACPA,QAAAA,KAAK,GAAIA,KAAK,YAAYxE,WAAjB,GAA+BwE,KAA/B,GAAuC,IAAIxE,WAAJ,CAAgBwE,KAAhB,CAAhD;EACA4B,QAAAA,MAAM,CAAC1C,IAAP,CAAYc,KAAK,CAAC8B,CAAlB,EAAqB9B,KAAK,CAACmX,CAA3B,EAA8BnX,KAAK,CAAC+B,CAApC;EACH;;EACD,UAAMlH,EAAC,GAAGjC,KAAK,CAACkC,iBAAN,CAAwB8F,MAAxB,EAAgCA,MAAhC,EAAwC7F,CAAlD;EACA,UAAM0G,CAAC,GAAG7I,KAAK,CAACyJ,mBAAN,CAA0B/H,UAA1B,EAAsCO,EAAtC,CAAV;EACAukB,MAAAA,EAAE,CAAClgB,IAAH,CAAQuC,CAAC,CAAC1G,CAAV,EAAa0G,CAAC,CAACI,CAAf,EAAkBJ,CAAC,CAAC5G,CAApB;EACAwmB,MAAAA,OAAO,CAACniB,IAAR,CAAauC,CAAb;EAEAoc,MAAAA,oBAAoB,CAAC7e,EAAD,CAApB,GAA0B;EACtBhE,QAAAA,QAAQ,EAAE;EACNyf,UAAAA,KAAK,EAAE,CADD;EAEN/W,UAAAA,KAAK,EAAE1E,EAAC,GAAG,CAFL;EAGN2E,UAAAA,GAAG,EAAE3E,EAAC,GAAG,CAAJ,GAAQ;EAHP,SADY;EAMtB7D,QAAAA,IAAI,EAAE;EANgB,OAA1B;;EAQA,WAAK,IAAIsE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2hB,QAApB,EAA8B3hB,CAAC,EAA/B,EAAmC;EAC/B,YAAIohB,KAAK,CAACphB,CAAD,CAAL,CAASghB,kBAAT,CAA4BnmB,UAA5B,CAAJ,EAA6C;EACzC;EACAumB,UAAAA,KAAK,CAACphB,CAAD,CAAL,CAASqW,SAAT,CAAmB5W,IAAnB,CAAwBuC,CAAxB;EACAof,UAAAA,KAAK,CAACphB,CAAD,CAAL,CAASuc,MAAT,CAAgB9c,IAAhB,CAAqBF,EAArB;EACA;EACH;EACJ;EACJ;;EACD,QAAMvE,QAAQ,GAAG,IAAIe,oBAAJ,EAAjB;EACAgD,IAAAA,YAAY,CAAC/D,QAAD,EAAW,UAAX,EAAuB,IAAIe,4BAAJ,CAAiC4jB,EAAjC,EAAqC,CAArC,EAAwC,IAAxC,CAAvB,CAAZ;;EACA,QAAIxd,MAAM,CAAC3C,MAAX,EAAmB;EACfT,MAAAA,YAAY,CAAC/D,QAAD,EAAW,OAAX,EAAoB,IAAIe,4BAAJ,CAAiCoG,MAAjC,EAAyC,CAAzC,EAA4C,IAA5C,CAApB,CAAZ;EACH,KAzDyC;;;EA4D1CxJ,IAAAA,OAAO,CAAC0d,SAAR,GAAoBuL,OAApB;EACA;;EACA,UAAKxjB,YAAL,CAAkBzF,OAAlB;;EACA,UAAKgG,aAAL,CAAmB3D,QAAnB,EAA6Ba,QAA7B;;EACA,QAAM3D,QAAQ,GAAGS,OAAO,CAACT,QAAzB;EACA,QAAMkD,CAAC,GAAGjC,KAAK,CAACkC,iBAAN,CAAwBnD,QAAxB,EAAkCA,QAAlC,EAA4CoD,CAAtD;EACA,UAAK3B,WAAL,GAAmB4B,QAAnB,CAA4BH,CAA5B,GAAgCA,CAAhC;EAEA,UAAK4jB,YAAL,GAAoB6C,WAApB;EACA,UAAK5C,MAAL,GAAcjU,MAAd;EACA,UAAKwT,SAAL,GAAiB,IAAjB;EACA,UAAKhC,qBAAL,GAA6B4B,oBAA7B;EACA,UAAKzB,cAAL,GAAsB3hB,QAAQ,CAACkB,KAAT,EAAtB;EACA,UAAK2gB,MAAL,GAAc,KAAd;;EACA,UAAKf,qBAAL,CAA2B+F,WAA3B;;EACA,UAAKC,MAAL,GAAcV,KAAd;;EACA,UAAKW,cAAL;;EA5E0C;EA6E7C;;;;WAEDA,2CAAiB;EAAA;;EACb,QAAMpf,GAAG,GAAG,KAAKhI,MAAL,EAAZ;EACA,SAAKpD,EAAL,CAAQ,KAAR,EAAe,YAAM;EACjB,MAAA,MAAI,CAACyqB,YAAL;;EACArf,MAAAA,GAAG,CAACpL,EAAJ,CAAO,iEAAP,EAA0E,MAAI,CAACyqB,YAA/E,EAA6F,MAA7F;EACH,KAHD;EAIA,SAAKzqB,EAAL,CAAQ,QAAR,EAAkB,YAAM;EACpBoL,MAAAA,GAAG,CAACuR,GAAJ,CAAQ,iEAAR,EAA2E,MAAI,CAAC8N,YAAhF,EAA8F,MAA9F;EACH,KAFD;EAGH;;WAEDA,uCAAe;EACX,QAAMrf,GAAG,GAAG,KAAKhI,MAAL,EAAZ;;EACA,SAAKmnB,MAAL,CAAYrK,OAAZ,CAAoB,UAAAnV,CAAC,EAAI;EACrB,UAAIA,CAAC,CAACia,MAAF,CAAS/c,MAAb,EAAqB;EACjB8C,QAAAA,CAAC,CAACye,eAAF,CAAkBpe,GAAlB;EACH;EACJ,KAJD;EAKH;;;WAGD0Z,yCAAgB;EACZ,QAAMtc,KAAK,GAAG,KAAKye,SAAnB;;EACA,QAAIze,KAAK,IAAI,IAAb,EAAmB;EACf,UAAI,CAAC,KAAKif,YAAL,CAAkBjf,KAAlB,CAAL,EAA+B;EAC3B,YAAMgD,IAAI,GAAG,KAAKkc,MAAL,CAAYlf,KAAZ,CAAb;EAD2B,YAEnBlF,UAFmB,GAEWkI,IAFX,CAEnBlI,UAFmB;EAAA,YAEPsG,MAFO,GAEW4B,IAFX,CAEP5B,MAFO;EAAA,YAECZ,KAFD,GAEWwC,IAFX,CAECxC,KAFD;EAG3B,aAAKye,YAAL,CAAkBjf,KAAlB,IAA2B,IAAI2f,KAAJ,CAAU7kB,UAAV,EAAsB;EAAEsG,UAAAA,MAAM,EAANA,MAAF;EAAUpB,UAAAA,KAAK,EAALA,KAAV;EAAiBQ,UAAAA,KAAK,EAALA;EAAjB,SAAtB,EAAgD,KAAK5G,WAAL,GAAmBkC,QAAnE,EAA6E,KAAKpC,QAAL,EAA7E,CAA3B;;EACA,aAAKwiB,WAAL,CAAiB,KAAK+C,YAAL,CAAkBjf,KAAlB,CAAjB;EACH;;EACD,aAAO;EACHgD,QAAAA,IAAI,EAAE,KAAKkc,MAAL,CAAYlf,KAAZ,CADH;EAEHic,QAAAA,UAAU,EAAE,KAAKgD,YAAL,CAAkBjf,KAAlB;EAFT,OAAP;EAIH;EACJ;EAED;;;;;;WAIA8f,6BAAShlB,YAAY;EACjB,QAAM1B,KAAK,GAAG,KAAKM,QAAL,EAAd;EAAA,QAA+BmY,IAAI,GAAG,KAAKjX,MAAL,GAAcmlB,OAAd,EAAtC;EAAA,QACIT,MAAM,GAAG,KAAK5lB,QAAL,GAAgBsmB,SAAhB,EADb;EAAA,QAC0C7nB,QAAQ,GAAG,KAAKiC,UAAL,GAAkBjC,QADvE;EAAA,QACiFyK,GAAG,GAAG,KAAKhI,MAAL,EADvF;EAEA,QAAMS,CAAC,GAAGjC,KAAK,CAACkC,iBAAN,CAAwBnD,QAAxB,EAAkCA,QAAlC,EAA4CoD,CAAtD;EACA,QAAM0kB,SAAS,GAAG,KAAKrmB,WAAL,GAAmBkC,QAAnB,CAA4B+V,IAA9C;EACA,QAAMqO,KAAK,GAAGtd,GAAG,CAACud,qBAAJ,CAA0BrlB,UAA1B,CAAd;EACA,QAAMonB,EAAE,GAAG,EAAX;;EACA,SAAKH,MAAL,CAAYrK,OAAZ,CAAoB,UAAAnV,CAAC,EAAI;EACrB,UAAIA,CAAC,CAACia,MAAF,CAAS/c,MAAb,EAAqB;EACjB,YAAI8C,CAAC,CAAC2e,UAAF,CAAahB,KAAb,EAAoBD,SAApB,CAAJ,EAAoC;EAChCiC,UAAAA,EAAE,CAACxiB,IAAH,CAAQ6C,CAAR;EACH;EACJ;EACJ,KAND;;EAOA,QAAI2f,EAAE,CAACziB,MAAH,GAAY,CAAhB,EAAmB;EACf,aAAO,KAAP;EACH;;EAED,SAAK,IAAID,CAAC,GAAG,CAAR,EAAWO,GAAG,GAAGmiB,EAAE,CAACziB,MAAzB,EAAiCD,CAAC,GAAGO,GAArC,EAA0CP,CAAC,EAA3C,EAA+C;EAC3C,WAAK,IAAIS,CAAC,GAAG,CAAR,EAAWC,IAAI,GAAGgiB,EAAE,CAAC1iB,CAAD,CAAF,CAAM8W,SAAN,CAAgB7W,MAAvC,EAA+CQ,CAAC,GAAGC,IAAnD,EAAyDD,CAAC,EAA1D,EAA8D;EAC1D,YAAMgC,CAAC,GAAGigB,EAAE,CAAC1iB,CAAD,CAAF,CAAM8W,SAAN,CAAgBrW,CAAhB,CAAV;EACAsf,QAAAA,QAAM,CAAChkB,CAAP,GAAW0G,CAAC,CAAC1G,CAAb;EACAgkB,QAAAA,QAAM,CAACld,CAAP,GAAWJ,CAAC,CAACI,CAAb;EACAkd,QAAAA,QAAM,CAAClkB,CAAP,GAAW4G,CAAC,CAAC5G,CAAF,GAAMA,CAAjB;EACA,YAAMsJ,CAAC,GAAGya,YAAY,CAACG,QAAD,EAAS1N,IAAT,EAAeyN,MAAf,CAAtB;EACA,YAAM5F,QAAQ,GAAGhY,IAAI,CAAC2K,IAAL,CAAU3K,IAAI,CAACoY,GAAL,CAASoG,KAAK,CAAC3kB,CAAN,GAAUoJ,CAAC,CAACpJ,CAArB,EAAwB,CAAxB,IAA6BmG,IAAI,CAACoY,GAAL,CAASoG,KAAK,CAAC7d,CAAN,GAAUsC,CAAC,CAACtC,CAArB,EAAwB,CAAxB,CAAvC,CAAjB;;EACA,YAAIqX,QAAQ,IAAIuG,SAAS,GAAG,CAA5B,EAA+B;EAC3B,eAAKxB,SAAL,GAAiByD,EAAE,CAAC1iB,CAAD,CAAF,CAAMgd,MAAN,CAAavc,CAAb,CAAjB;EACA,iBAAO,IAAP;EACH;EACJ;EACJ,KA/BgB;EAkCjB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EACA,WAAO,KAAP;EACH;;;IAxKgB6b,WAAW,CAACvkB,aAAD;;ECVhC,IAAMU,SAAO,GAAG;EACZ6C,EAAAA,UAAU,EAAE,IADA;EAEZwG,EAAAA,MAAM,EAAE,EAFI;EAGZF,EAAAA,MAAM,EAAE,GAHI;EAIZC,EAAAA,cAAc,EAAE,CAJJ;EAKZlJ,EAAAA,QAAQ,EAAE,CALE;EAMZgK,EAAAA,QAAQ,EAAE,IANE;EAOZD,EAAAA,WAAW,EAAE;EAPD,CAAhB;EAUA;;;;MAGMigB;;;;;EACF,gBAAYlX,MAAZ,EAAoBrS,OAApB,EAA6BkD,QAA7B,EAAuC1C,KAAvC,EAA8C;EAAA;;EAC1C,QAAI,CAACod,KAAK,CAACC,OAAN,CAAcxL,MAAd,CAAL,EAA4B;EACxBA,MAAAA,MAAM,GAAG,CAACA,MAAD,CAAT;EACH;;EACD,QAAMlL,GAAG,GAAGkL,MAAM,CAACxL,MAAnB;EACA,QAAMH,UAAU,GAAG,EAAnB;EAAA,QAAuB8iB,IAAI,GAAG,EAA9B;EAAA,QAAkC/D,oBAAoB,GAAG,EAAzD;EAAA,QAA6DD,OAAO,GAAG,EAAvE;EACA,QAAIK,SAAS,GAAG,CAAhB;EAAA,QAAmBC,OAAO,GAAG,CAA7B;EAAA,QAAgCC,WAAW,GAAG,CAA9C;EAAA,QAAiDC,OAAO,GAAG,CAA3D;;EACA,SAAK,IAAIpf,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGO,GAApB,EAAyBP,CAAC,EAA1B,EAA8B;EAC1B,UAAMiQ,IAAI,GAAGzX,aAAA,CAAcsG,MAAd,CAAqB;EAAE0B,QAAAA,KAAK,EAAER;EAAT,OAArB,EAAmCvH,SAAnC,EAA4CgT,MAAM,CAACzL,CAAD,CAAlD,CAAb;EAD0B,UAElB8B,MAFkB,GAE8DmO,IAF9D,CAElBnO,MAFkB;EAAA,UAEVD,cAFU,GAE8DoO,IAF9D,CAEVpO,cAFU;EAAA,UAEMlJ,QAFN,GAE8DsX,IAF9D,CAEMtX,QAFN;EAAA,UAEgBgK,QAFhB,GAE8DsN,IAF9D,CAEgBtN,QAFhB;EAAA,UAE0BD,WAF1B,GAE8DuN,IAF9D,CAE0BvN,WAF1B;EAAA,UAEuCd,MAFvC,GAE8DqO,IAF9D,CAEuCrO,MAFvC;EAAA,UAE+CtG,UAF/C,GAE8D2U,IAF9D,CAE+C3U,UAF/C;EAG1B,UAAMwH,CAAC,GAAGlJ,KAAK,CAACkC,iBAAN,CAAwBgG,MAAxB,EAAgCA,MAAhC,EAAwC/F,CAAlD;EACA,UAAMgU,CAAC,GAAGnW,KAAK,CAACkC,iBAAN,CAAwB8F,MAAxB,EAAgCA,MAAhC,EAAwC7F,CAAlD;EACA,UAAM8mB,GAAG,GAAGjpB,KAAK,CAACkC,iBAAN,CAAwBnD,QAAxB,EAAkCA,QAAlC,EAA4CoD,CAAxD;EACA,UAAMyhB,QAAQ,GAAG9b,WAAW,CAAC;EAAEI,QAAAA,MAAM,EAAEgB,CAAV;EAAalB,QAAAA,MAAM,EAAEmO,CAArB;EAAwBlO,QAAAA,cAAc,EAAdA;EAAxB,OAAD,EAA2C,KAA3C,CAA5B;;EACA,UAAIc,QAAQ,IAAI,CAACrG,QAAQ,CAAC8G,GAA1B,EAA+B;EAC3Bb,QAAAA,gBAAgB,CAACib,QAAD,EAAW9a,WAAX,EAAwBC,QAAxB,EAAkC,GAAlC,EAAuCoN,CAAC,GAAG,CAA3C,CAAhB;EACAzT,QAAAA,QAAQ,CAACI,YAAT,GAAwBF,kBAAxB;EACH,OAVyB;;;EAY1B,UAAMiG,CAAC,GAAG7I,KAAK,CAACyJ,mBAAN,CAA0B/H,UAA1B,CAAV;EACA,UAAM8G,MAAM,GAAGob,QAAQ,CAACzd,UAAT,CAAoB/D,QAApB,CAA6BsF,KAA5C;;EACA,WAAK,IAAIb,CAAC,GAAG,CAAR,EAAWC,IAAI,GAAG0B,MAAM,CAACnC,MAA9B,EAAsCQ,CAAC,GAAGC,IAA1C,EAAgDD,CAAC,IAAI,CAArD,EAAwD;EACpD2B,QAAAA,MAAM,CAAC3B,CAAC,GAAG,CAAL,CAAN,IAAiBoiB,GAAjB;EACAzgB,QAAAA,MAAM,CAAC3B,CAAD,CAAN,IAAagC,CAAC,CAAC1G,CAAf;EACAqG,QAAAA,MAAM,CAAC3B,CAAC,GAAG,CAAL,CAAN,IAAiBgC,CAAC,CAACI,CAAnB;EACAT,QAAAA,MAAM,CAAC3B,CAAC,GAAG,CAAL,CAAN,IAAiBgC,CAAC,CAAC5G,CAAnB;EACH;;EACDiE,MAAAA,UAAU,CAACI,IAAX,CAAgBsd,QAAhB;EACA,UAAMsF,GAAG,GAAG,IAAI5f,GAAJ,CAAQ5H,UAAR,EAAoB2U,IAApB,EAA0B3T,QAA1B,EAAoC1C,KAApC,CAAZ;EACAgpB,MAAAA,IAAI,CAAC1iB,IAAL,CAAU4iB,GAAV;;EAEA,UAAMrnB,SAAQ,GAAG,IAAIe,cAAJ,EAAjB;;EACAf,MAAAA,SAAQ,CAACsnB,kBAAT,CAA4BvF,QAA5B;;EACA,UAAM6B,OAAO,GAAG5jB,SAAQ,CAACunB,KAAT,CAAe/iB,MAA/B;EACA2e,MAAAA,OAAO,CAAC5e,CAAD,CAAP,GAAa,CAACif,SAAS,GAAG,CAAb,EAAgBA,SAAS,GAAGI,OAA5B,CAAb;EACAJ,MAAAA,SAAS,IAAII,OAAb;;EACA5jB,MAAAA,SAAQ,CAACujB,OAAT;;EAEA,UAAMM,OAAO,GAAG9B,QAAQ,CAACzd,UAAT,CAAoB/D,QAApB,CAA6Byf,KAA7C;EAAA;EAEI8D,MAAAA,WAAW,GAAG/B,QAAQ,CAACzd,UAAT,CAAoBe,MAApB,CAA2B2a,KAF7C;EAAA,UAEoD+D,OAAO,GAAGhC,QAAQ,CAACzd,UAAT,CAAoBgB,EAApB,CAAuB0a,KAFrF;EAGAoD,MAAAA,oBAAoB,CAAC7e,CAAD,CAApB,GAA0B;EACtBhE,QAAAA,QAAQ,EAAE;EACNyf,UAAAA,KAAK,EAAE6D,OADD;EAEN5a,UAAAA,KAAK,EAAEwa,OAFD;EAGNva,UAAAA,GAAG,EAAEua,OAAO,GAAGI,OAAO,GAAG;EAHnB,SADY;EAMtBxe,QAAAA,MAAM,EAAE;EACJ2a,UAAAA,KAAK,EAAE8D,WADH;EAEJ7a,UAAAA,KAAK,EAAEya,WAFH;EAGJxa,UAAAA,GAAG,EAAEwa,WAAW,GAAGI,WAAW,GAAG;EAH7B,SANc;EAWtB;EACA;EACA;EACA;EACA;EACAxe,QAAAA,EAAE,EAAE;EACA0a,UAAAA,KAAK,EAAE+D,OADP;EAEA9a,UAAAA,KAAK,EAAE0a,OAFP;EAGAza,UAAAA,GAAG,EAAEya,OAAO,GAAGI,OAAO,GAAG;EAHzB,SAhBkB;EAqBtBrjB,QAAAA,IAAI,EAAE;EArBgB,OAA1B;EAuBA+iB,MAAAA,OAAO,IAAII,OAAO,GAAG,CAArB;EACAH,MAAAA,WAAW,IAAII,WAAW,GAAG,CAA7B,CA1D0B;;EA4D1BH,MAAAA,OAAO,IAAII,OAAO,GAAG,CAArB;EACH;;EACD;EACApmB,IAAAA,OAAO,GAAGZ,aAAA,CAAcsG,MAAd,CAAqB,EAArB,EAAyB;EAAEnG,MAAAA,QAAQ,EAAE,CAAZ;EAAeiB,MAAAA,KAAK,EAALA,KAAf;EAAsB6R,MAAAA,MAAM,EAANA;EAAtB,KAAzB,EAAyDrS,OAAzD,CAAV;;EACA,UAAKyF,YAAL,CAAkBzF,OAAlB;;EACA,QAAMqC,QAAQ,GAAGuH,gBAAgB,CAAClD,UAAD,CAAjC;;EACA,UAAKf,WAAL,CAAiBtD,QAAjB,EAA2Ba,QAA3B;;EAEA,UAAKyiB,QAAL,GAAgBH,OAAhB;EACA,UAAKa,YAAL,GAAoBmD,IAApB;EACA,UAAKlD,MAAL,GAAcjU,MAAd;EACA,UAAKwR,qBAAL,GAA6B4B,oBAA7B;EACA,UAAKI,SAAL,GAAiB,IAAjB;EACA,UAAK7B,cAAL,GAAsB3hB,QAAQ,CAACkB,KAAT,EAAtB;EACA,UAAK2gB,MAAL,GAAc,KAAd;;EAEA,UAAKf,qBAAL,CAA2BqG,IAA3B;;EAnF0C;EAoF7C;;;;;WAID9F,yCAAgB;EACZ,QAAMtc,KAAK,GAAG,KAAKmf,SAAL,EAAd;;EACA,QAAInf,KAAK,IAAI,IAAb,EAAmB;EACf,aAAO;EACHgD,QAAAA,IAAI,EAAE,KAAKkc,MAAL,CAAYlf,KAAZ,CADH;EAEHic,QAAAA,UAAU,EAAE,KAAKgD,YAAL,CAAkBjf,KAAlB;EAFT,OAAP;EAIH;EACJ;;;WAGDmf,+BAAUV,WAAW;EACjB,QAAIA,SAAS,IAAI,IAAjB,EAAuB;EACnBA,MAAAA,SAAS,GAAG,KAAKA,SAAjB;EACH;;EACD,QAAIA,SAAS,IAAI,IAAjB,EAAuB;EACnB,WAAK,IAAIjf,CAAC,GAAG,CAAR,EAAWO,IAAG,GAAG,KAAKwe,QAAL,CAAc9e,MAApC,EAA4CD,CAAC,GAAGO,IAAhD,EAAqDP,CAAC,EAAtD,EAA0D;EAAA,+BACjC,KAAK+e,QAAL,CAAc/e,CAAd,CADiC;EAAA,YAC/C0E,KAD+C;EAAA,YACxCC,GADwC;;EAEtD,YAAID,KAAK,IAAIua,SAAT,IAAsBA,SAAS,GAAGta,GAAtC,EAA2C;EACvC,iBAAO3E,CAAP;EACH;EACJ;EACJ;EACJ;;;IAhHcsc,WAAW,CAACvkB,aAAD;;ECZ9B,IAAMU,SAAO,GAAG;EACZqY,EAAAA,KAAK,EAAE,CADK;EAEZlP,EAAAA,MAAM,EAAE,CAFI;EAGZjJ,EAAAA,QAAQ,EAAE;EAHE,CAAhB;;MAMMsqB;;;;;EACF,wBAAYC,WAAZ,EAAyB9pB,OAAzB,EAAkCkD,QAAlC,EAA4C1C,KAA5C,EAAmD;EAAA;;EAC/C,QAAI,CAACod,KAAK,CAACC,OAAN,CAAciM,WAAd,CAAL,EAAiC;EAC7BA,MAAAA,WAAW,GAAG,CAACA,WAAD,CAAd;EACH;;EACD,QAAMxE,OAAO,GAAG,EAAhB;EACA,QAAMne,GAAG,GAAG2iB,WAAW,CAACjjB,MAAxB;;EACA,SAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGO,GAApB,EAAyBP,CAAC,EAA1B,EAA8B;EAC1B,UAAMzE,UAAU,GAAG2nB,WAAW,CAACljB,CAAD,CAA9B;EACA0e,MAAAA,OAAO,CAACxe,IAAR,CAAa2V,SAAS,CAACta,UAAD,CAAT,GAAwB8a,gBAAgB,CAAC9a,UAAD,CAAxC,GAAuDA,UAAU,CAACF,SAAX,EAApE;EACH,KAT8C;;;EAW/C,QAAMwb,MAAM,GAAG8B,iBAAiB,CAAC+F,OAAD,CAAhC;EACA,QAAM5e,UAAU,GAAG,EAAnB;EAAA,QAAuBqjB,YAAY,GAAG,EAAtC;EACA,QAAIlE,SAAS,GAAG,CAAhB;EAAA,QAAmBL,OAAO,GAAG,EAA7B;EAAA,QAAiCC,oBAAoB,GAAG,EAAxD;EAAA,QACIK,OAAO,GAAG,CADd;EAAA,QACiBC,WAAW,GAAG,CAD/B;;EAEA,SAAK,IAAInf,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGO,GAApB,EAAyBP,EAAC,EAA1B,EAA8B;EAC1B,UAAMzE,WAAU,GAAG2nB,WAAW,CAACljB,EAAD,CAA9B;EACA,UAAMiQ,IAAI,GAAGzX,aAAA,CAAcsG,MAAd,CAAqB,EAArB,EAAyBrG,SAAzB,EAAkCod,SAAS,CAACta,WAAD,CAAT,GAAwBA,WAAU,CAACT,UAAnC,GAAgDS,WAAU,CAACV,aAAX,EAAlF,EAA8G;EAAE2F,QAAAA,KAAK,EAAER;EAAT,OAA9G,CAAb;EAF0B,UAGlB4B,MAHkB,GAGAqO,IAHA,CAGlBrO,MAHkB;EAAA,UAGVkP,KAHU,GAGAb,IAHA,CAGVa,KAHU;EAI1B,UAAMsS,CAAC,GAAGxpB,KAAK,CAACkC,iBAAN,CAAwBgV,KAAxB,EAA+BA,KAA/B,EAAsC/U,CAAhD;EACA,UAAMgU,CAAC,GAAGnW,KAAK,CAACkC,iBAAN,CAAwB8F,MAAxB,EAAgCA,MAAhC,EAAwC7F,CAAlD;EACA,UAAMyhB,QAAQ,GAAGzF,oBAAoB,CAACxc,WAAD,EAAa6nB,CAAb,EAAgBrT,CAAhB,EAAmBnW,KAAnB,EAA0Bid,MAA1B,CAArC;EACA/W,MAAAA,UAAU,CAACI,IAAX,CAAgBsd,QAAhB;EAEA,UAAM6F,WAAW,GAAG,IAAIhL,WAAJ,CAAgB9c,WAAhB,EAA4B0U,IAA5B,EAAkC3T,QAAlC,EAA4C1C,KAA5C,CAApB;EACAupB,MAAAA,YAAY,CAACjjB,IAAb,CAAkBmjB,WAAlB;EAV0B,UAYlBrnB,QAZkB,GAYYwhB,QAZZ,CAYlBxhB,QAZkB;EAAA,UAYR8E,MAZQ,GAYY0c,QAZZ,CAYR1c,MAZQ;EAAA,UAYAR,OAZA,GAYYkd,QAZZ,CAYAld,OAZA;EAa1B,UAAM+e,OAAO,GAAG/e,OAAO,CAACL,MAAR,GAAiB,CAAjC;EACA2e,MAAAA,OAAO,CAAC5e,EAAD,CAAP,GAAa,CAACif,SAAS,GAAG,CAAb,EAAgBA,SAAS,GAAGI,OAA5B,CAAb;EACAJ,MAAAA,SAAS,IAAII,OAAb;EACA,UAAMC,OAAO,GAAGtjB,QAAQ,CAACiE,MAAT,GAAkB,CAAlC;EAAA;EAEIsf,MAAAA,WAAW,GAAGze,MAAM,CAACb,MAAP,GAAgB,CAFlC;EAGA4e,MAAAA,oBAAoB,CAAC7e,EAAD,CAApB,GAA0B;EACtBhE,QAAAA,QAAQ,EAAE;EACNyf,UAAAA,KAAK,EAAE6D,OADD;EAEN5a,UAAAA,KAAK,EAAEwa,OAFD;EAGNva,UAAAA,GAAG,EAAEua,OAAO,GAAGI,OAAO,GAAG;EAHnB,SADY;EAMtBxe,QAAAA,MAAM,EAAE;EACJ2a,UAAAA,KAAK,EAAE8D,WADH;EAEJ7a,UAAAA,KAAK,EAAEya,WAFH;EAGJxa,UAAAA,GAAG,EAAEwa,WAAW,GAAGI,WAAW,GAAG;EAH7B,SANc;EAWtB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACApjB,QAAAA,IAAI,EAAE;EArBgB,OAA1B;EAuBA+iB,MAAAA,OAAO,IAAII,OAAO,GAAG,CAArB;EACAH,MAAAA,WAAW,IAAII,WAAW,GAAG,CAA7B,CA3C0B;EA6C1B;EACH;;EACD,QAAM9jB,QAAQ,GAAGoE,qBAAqB,CAACC,UAAD,CAAtC;EAEA1G,IAAAA,OAAO,GAAGZ,aAAA,CAAcsG,MAAd,CAAqB,EAArB,EAAyBrG,SAAzB,EAAkCW,OAAlC,EAA2C;EAAEQ,MAAAA,KAAK,EAALA,KAAF;EAASspB,MAAAA,WAAW,EAAXA,WAAT;EAAsB5nB,MAAAA,UAAU,EAAEub;EAAlC,KAA3C,CAAV;EACA;;EACA,UAAKhY,YAAL,CAAkBzF,OAAlB;;EAEA,UAAK2F,WAAL,CAAiBtD,QAAjB,EAA2Ba,QAA3B;;EApE+C,mBAqE1BlD,OArE0B;EAAA,QAqEvCT,QArEuC,YAqEvCA,QArEuC;EAsE/C,QAAMkD,CAAC,GAAGjC,KAAK,CAACkC,iBAAN,CAAwBnD,QAAxB,EAAkCA,QAAlC,EAA4CoD,CAAtD;EACA,QAAM0G,CAAC,GAAG7I,KAAK,CAACyJ,mBAAN,CAA0BwT,MAA1B,EAAkChb,CAAlC,CAAV;;EACA,UAAKzB,WAAL,GAAmB4B,QAAnB,CAA4BsH,IAA5B,CAAiCb,CAAjC,EAxE+C;;;EA2E/C,UAAKsc,QAAL,GAAgBH,OAAhB;EACA,UAAKa,YAAL,GAAoB0D,YAApB;EACA,UAAKzD,MAAL,GAAcwD,WAAd;EACA,UAAKjG,qBAAL,GAA6B4B,oBAA7B;EACA,UAAKI,SAAL,GAAiB,IAAjB;EACA,UAAK7B,cAAL,GAAsB3hB,QAAQ,CAACkB,KAAT,EAAtB;EACA,UAAK2gB,MAAL,GAAc,KAAd;;EAEA,UAAKf,qBAAL,CAA2B4G,YAA3B;;EAnF+C;EAoFlD;;;;;WAIDrG,yCAAgB;EACZ,QAAMtc,KAAK,GAAG,KAAKmf,SAAL,EAAd;;EACA,QAAInf,KAAK,IAAI,IAAb,EAAmB;EACf,aAAO;EACHgD,QAAAA,IAAI,EAAE,KAAKkc,MAAL,CAAYlf,KAAZ,CADH;EAEHic,QAAAA,UAAU,EAAE,KAAKgD,YAAL,CAAkBjf,KAAlB;EAFT,OAAP;EAIH;EACJ;;;WAGDmf,+BAAUV,WAAW;EACjB,QAAIA,SAAS,IAAI,IAAjB,EAAuB;EACnBA,MAAAA,SAAS,GAAG,KAAKA,SAAjB;EACH;;EACD,QAAIA,SAAS,IAAI,IAAjB,EAAuB;EACnB,WAAK,IAAIjf,CAAC,GAAG,CAAR,EAAWO,IAAG,GAAG,KAAKwe,QAAL,CAAc9e,MAApC,EAA4CD,CAAC,GAAGO,IAAhD,EAAqDP,CAAC,EAAtD,EAA0D;EAAA,+BACjC,KAAK+e,QAAL,CAAc/e,CAAd,CADiC;EAAA,YAC/C0E,KAD+C;EAAA,YACxCC,GADwC;;EAEtD,YAAID,KAAK,IAAIua,SAAT,IAAsBA,SAAS,GAAGta,GAAtC,EAA2C;EACvC,iBAAO3E,CAAP;EACH;EACJ;EACJ;EACJ;;;IAhHsBsc,WAAW,CAACvkB,aAAD;;ECLtC,IAAMU,SAAO,GAAG;EACZE,EAAAA,QAAQ,EAAE,CADE;EAEZiK,EAAAA,MAAM,EAAE;EAFI,CAAhB;EAKA;;;;MAGM0gB;;;;;EACF,iBAAYJ,WAAZ,EAAyB9pB,OAAzB,EAAkCkD,QAAlC,EAA4C1C,KAA5C,EAAmD;EAAA;;EAC/C,QAAI,CAACod,KAAK,CAACC,OAAN,CAAciM,WAAd,CAAL,EAAiC;EAC7BA,MAAAA,WAAW,GAAG,CAACA,WAAD,CAAd;EACH;;EAED,QAAMxE,OAAO,GAAG,EAAhB;EACA,QAAMne,GAAG,GAAG2iB,WAAW,CAACjjB,MAAxB;;EACA,SAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGO,GAApB,EAAyBP,CAAC,EAA1B,EAA8B;EAC1B,UAAMzE,UAAU,GAAG2nB,WAAW,CAACljB,CAAD,CAA9B;EACA0e,MAAAA,OAAO,CAACxe,IAAR,CAAa6V,aAAa,CAACxa,UAAD,CAAb,GAA4B8a,gBAAgB,CAAC9a,UAAD,CAA5C,GAA2DA,UAAU,CAACF,SAAX,EAAxE;EACH,KAV8C;;;EAY/C,QAAMwb,MAAM,GAAG8B,iBAAiB,CAAC+F,OAAD,CAAhC;EACAtlB,IAAAA,OAAO,GAAGZ,aAAA,CAAcsG,MAAd,CAAqB,EAArB,EAAyBrG,SAAzB,EAAkCW,OAAlC,EAA2C;EAAEQ,MAAAA,KAAK,EAALA,KAAF;EAASspB,MAAAA,WAAW,EAAXA,WAAT;EAAsB5nB,MAAAA,UAAU,EAAEub;EAAlC,KAA3C,CAAV;EAEA,QAAMsE,KAAK,GAAG,EAAd;EACA,QAAI8D,SAAS,GAAG,CAAhB;EAAA,QAAmBL,OAAO,GAAG,EAA7B;EAAA,QAAiCC,oBAAoB,GAAG,EAAxD;EAAA,QACIK,OAAO,GAAG,CADd;EAAA,QACiB3H,EAAE,GAAG,EADtB;;EAEA,SAAK,IAAIvX,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGO,GAApB,EAAyBP,EAAC,EAA1B,EAA8B;EAC1B,UAAMzE,WAAU,GAAG2nB,WAAW,CAACljB,EAAD,CAA9B,CAD0B;;EAAA,6BAGH4W,eAAe,CAACrb,WAAD,EAAa3B,KAAb,EAAoBid,MAApB,CAHZ;EAAA,UAGlBE,UAHkB,oBAGlBA,UAHkB;;EAK1B,WAAK,IAAItW,CAAC,GAAG,CAAR,EAAWC,IAAI,GAAGqW,UAAU,CAAC9W,MAAlC,EAA0CQ,CAAC,GAAGC,IAA9C,EAAoDD,CAAC,EAArD,EAAyD;EACrD,YAAMgC,EAAC,GAAGsU,UAAU,CAACtW,CAAD,CAApB;;EACA,YAAIA,CAAC,GAAG,CAAJ,IAASA,CAAC,GAAGC,IAAI,GAAG,CAAxB,EAA2B;EACvB6W,UAAAA,EAAE,CAACrX,IAAH,CAAQuC,EAAC,CAAC1G,CAAV,EAAa0G,EAAC,CAACI,CAAf,EAAkBJ,EAAC,CAAC5G,CAApB;EACH;;EACD0b,QAAAA,EAAE,CAACrX,IAAH,CAAQuC,EAAC,CAAC1G,CAAV,EAAa0G,EAAC,CAACI,CAAf,EAAkBJ,EAAC,CAAC5G,CAApB;EACH,OAXyB;EAc1B;;;EAEA,UAAMyjB,OAAO,GAAGvI,UAAU,CAAC9W,MAAX,GAAoB8W,UAAU,CAAC9W,MAA/B,GAAwC,CAAxD;EACA,UAAMof,OAAO,GAAGC,OAAhB;EACAV,MAAAA,OAAO,CAAC5e,EAAD,CAAP,GAAa,CAACif,SAAD,EAAYA,SAAS,GAAGI,OAAxB,CAAb;EACAJ,MAAAA,SAAS,IAAII,OAAb;EAEAR,MAAAA,oBAAoB,CAAC7e,EAAD,CAApB,GAA0B;EACtBhE,QAAAA,QAAQ,EAAE;EACNyf,UAAAA,KAAK,EAAE6D,OADD;EAEN5a,UAAAA,KAAK,EAAEwa,OAFD;EAGNva,UAAAA,GAAG,EAAEua,OAAO,GAAGI,OAAO,GAAG;EAHnB,SADY;EAMtBnjB,QAAAA,IAAI,EAAE;EANgB,OAA1B;EAQA+iB,MAAAA,OAAO,IAAII,OAAO,GAAG,CAArB;EACH;;EAED,QAAM7jB,QAAQ,GAAG,IAAIe,oBAAJ,EAAjB;EACAgD,IAAAA,YAAY,CAAC/D,QAAD,EAAW,UAAX,EAAuB,IAAIe,4BAAJ,CAAiC+a,EAAjC,EAAqC,CAArC,CAAvB,CAAZ;EACA;;EACA,UAAK1Y,YAAL,CAAkBzF,OAAlB;;EAEA,UAAKiG,mBAAL,CAAyB5D,QAAzB,EAAmCa,QAAnC;;EAvD+C,mBAyD1BlD,OAzD0B;EAAA,QAyDvCT,QAzDuC,YAyDvCA,QAzDuC;EA0D/C,QAAMkD,CAAC,GAAGjC,KAAK,CAACkC,iBAAN,CAAwBnD,QAAxB,EAAkCA,QAAlC,EAA4CoD,CAAtD;EACA,QAAM0G,CAAC,GAAG7I,KAAK,CAACyJ,mBAAN,CAA0BwT,MAA1B,EAAkChb,CAAlC,CAAV;;EACA,UAAKzB,WAAL,GAAmB4B,QAAnB,CAA4BsH,IAA5B,CAAiCb,CAAjC;;EAEA,UAAKsc,QAAL,GAAgBH,OAAhB;EACA,UAAKa,YAAL,GAAoBtE,KAApB;EACA,UAAKuE,MAAL,GAAcwD,WAAd;EACA,UAAKjG,qBAAL,GAA6B4B,oBAA7B;EACA,UAAKI,SAAL,GAAiB,IAAjB;EACA,UAAKze,KAAL,GAAa,IAAb;EACA,UAAK4c,cAAL,GAAsB3hB,QAAQ,CAACkB,KAAT,EAAtB;EACA,UAAK2gB,MAAL,GAAc,KAAd;;EAEA,UAAKf,qBAAL,CAA2BpB,KAA3B;;EAvE+C;EAwElD;;;;;WAGD2B,yCAAgB;EACZ,QAAMtc,KAAK,GAAG,KAAKmf,SAAL,EAAd;;EACA,QAAInf,KAAK,IAAI,IAAb,EAAmB;EACf,UAAI,CAAC,KAAKif,YAAL,CAAkBjf,KAAlB,CAAL,EAA+B;EAC3B,YAAMjF,UAAU,GAAG,KAAKmkB,MAAL,CAAYlf,KAAZ,CAAnB;EACA,YAAMyP,IAAI,GAAGzX,aAAA,CAAcsG,MAAd,CAAqB,EAArB,EAAyB,KAAKlE,UAAL,EAAzB,EAA4C;EAAE4F,UAAAA,KAAK,EAALA;EAAF,SAA5C,EACTuV,aAAa,CAACxa,UAAD,CAAb,GAA4BA,UAAU,CAACT,UAAvC,GAAoDS,UAAU,CAACV,aAAX,EAD3C,CAAb;EAEA,aAAK4kB,YAAL,CAAkBjf,KAAlB,IAA2B,IAAI4X,IAAJ,CAAS7c,UAAT,EAAqB0U,IAArB,EAA2B,KAAK7V,WAAL,GAAmBkC,QAA9C,EAAwD,KAAKpC,QAAL,EAAxD,CAA3B;;EACA,aAAKwiB,WAAL,CAAiB,KAAK+C,YAAL,CAAkBjf,KAAlB,CAAjB;EACH;;EACD,aAAO;EACHgD,QAAAA,IAAI,EAAE,KAAKkc,MAAL,CAAYlf,KAAZ,CADH;EAEHic,QAAAA,UAAU,EAAE,KAAKgD,YAAL,CAAkBjf,KAAlB;EAFT,OAAP;EAIH;EACJ;;;WAGDmf,+BAAUV,WAAW;EACjB,QAAIA,SAAS,IAAI,IAAjB,EAAuB;EACnBA,MAAAA,SAAS,GAAG,KAAKA,SAAL,IAAkB,KAAKze,KAAnC;EACH;;EACD,QAAIye,SAAS,IAAI,IAAjB,EAAuB;EACnB,WAAK,IAAIjf,CAAC,GAAG,CAAR,EAAWO,IAAG,GAAG,KAAKwe,QAAL,CAAc9e,MAApC,EAA4CD,CAAC,GAAGO,IAAhD,EAAqDP,CAAC,EAAtD,EAA0D;EAAA,+BACjC,KAAK+e,QAAL,CAAc/e,CAAd,CADiC;EAAA,YAC/C0E,KAD+C;EAAA,YACxCC,GADwC;;EAEtD,YAAID,KAAK,IAAIua,SAAT,IAAsBA,SAAS,GAAGta,GAAtC,EAA2C;EACvC,iBAAO3E,CAAP;EACH;EACJ;EACJ;EACJ;;;IA1Gesc,WAAW,CAACvkB,aAAD;;EClB/B;;;;;EAOA;EACA,IAAMwrB,GAAG,GAAG,EAAZ;EACA,IAAMC,YAAY,GAAG;EAEjB;EACA;EACA;EACA;EACA;EACA;EAPiB,CAArB;EASA,IAAMC,YAAY,GAAG,EAArB;AAEA,EAAO,SAASC,SAAT,GAAqB;EACxB,SAAO;EACHF,IAAAA,YAAY,EAAZA,YADG;EAEHC,IAAAA,YAAY,EAAZA;EAFG,GAAP;EAIH;EAED;;;;;;;;;AAQA,EAAO,SAAS5F,SAAT,CAAmBne,GAAnB,EAAwBikB,GAAxB,EAA6B7F,QAA7B,EAAuC8F,GAAvC,EAA4CC,EAA5C,EAAgD;EACnD;EACA,MAAMzb,CAAC,GAAG;EACN1I,IAAAA,GAAG,EAAHA,GADM;EAENikB,IAAAA,GAAG,EAAHA,GAFM;EAGN7F,IAAAA,QAAQ,EAARA,QAHM;EAIN8F,IAAAA,GAAG,EAAHA,GAJM;EAKNC,IAAAA,EAAE,EAAFA;EALM,GAAV;;EAOA,MAAIJ,YAAY,CAACxjB,MAAb,GAAsBsjB,GAA1B,EAA+B;EAC3BE,IAAAA,YAAY,CAACvjB,IAAb,CAAkBkI,CAAlB;EACAyb,IAAAA,EAAE,CAACC,WAAH,CAAe1b,CAAf;EACH,GAHD,MAGO;EACHob,IAAAA,YAAY,CAACtjB,IAAb,CAAkBkI,CAAlB;EACH;EACJ;EAED;;;;;AAIA,EAAO,SAAS2b,QAAT,CAAkBvjB,KAAlB,EAAyB;EAC5B,MAAMsd,QAAQ,GAAGkG,eAAe,CAACR,YAAD,EAAehjB,KAAf,CAAhC;;EACA,MAAIsd,QAAJ,EAAc;EACVA,IAAAA,QAAQ,CAACtd,KAAD,CAAR;EACH;EACJ;EAGD;;;;;;AAKA,EAAO,SAASwjB,eAAT,CAAyBC,QAAzB,EAAmCzjB,KAAnC,EAA0C;EAC7C,OAAK,IAAIR,CAAC,GAAG,CAAR,EAAWO,GAAG,GAAG0jB,QAAQ,CAAChkB,MAA/B,EAAuCD,CAAC,GAAGO,GAA3C,EAAgDP,CAAC,EAAjD,EAAqD;EACjD,QAAMoI,CAAC,GAAG6b,QAAQ,CAACjkB,CAAD,CAAlB;;EACA,QAAIoI,CAAJ,EAAO;EAAA,UACK1I,GADL,GACuB0I,CADvB,CACK1I,GADL;EAAA,UACUoe,QADV,GACuB1V,CADvB,CACU0V,QADV;;EAEH,UAAItd,KAAK,KAAKd,GAAd,EAAmB;EACfukB,QAAAA,QAAQ,CAACC,MAAT,CAAgBlkB,CAAhB,EAAmB,CAAnB;EACA,eAAO8d,QAAP;EACH;EACJ;EACJ;;EACD,SAAO,IAAP;EACH;EAED;;;;;;AAKA,EAAO,SAASqG,QAAT,CAAkBzkB,GAAlB,EAAuBmkB,EAAvB,EAA2B;EAC9BG,EAAAA,eAAe,CAACP,YAAD,EAAe/jB,GAAf,CAAf;;EACA,MAAI8jB,YAAY,CAACvjB,MAAjB,EAAyB;EACrBwjB,IAAAA,YAAY,CAACvjB,IAAb,CAAkBsjB,YAAY,CAAC,CAAD,CAA9B;EACAA,IAAAA,YAAY,CAACU,MAAb,CAAoB,CAApB,EAAuB,CAAvB;EACA,QAAMrf,IAAI,GAAG4e,YAAY,CAACA,YAAY,CAACxjB,MAAb,GAAsB,CAAvB,CAAzB;EACA4jB,IAAAA,EAAE,CAACC,WAAH,CAAejf,IAAf;EACH;EACJ;EAID;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;ECnHA,IAAMuf,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;EACA,IAAMxF,IAAI,GAAG,GAAb;EACAsF,MAAM,CAACtT,KAAP,GAAesT,MAAM,CAACxiB,MAAP,GAAgBkd,IAA/B;;EACA,SAASyF,aAAT,CAAuB7kB,GAAvB,EAA4B8kB,KAA5B,EAAmC;EAC/B,MAAMC,GAAG,GAAGL,MAAM,CAACM,UAAP,CAAkB,IAAlB,CAAZ;EACAD,EAAAA,GAAG,CAACE,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB7F,IAApB,EAA0BA,IAA1B;EACA2F,EAAAA,GAAG,CAACG,IAAJ;;EACA,MAAIJ,KAAJ,EAAW;EACPC,IAAAA,GAAG,CAACI,SAAJ,GAAgB,KAAhB;EACAJ,IAAAA,GAAG,CAACK,WAAJ,GAAkB,mBAAlB;EACAL,IAAAA,GAAG,CAACtQ,SAAJ,GAAgB,GAAhB;EACA,QAAM4Q,IAAI,GAAGrlB,GAAG,IAAI,MAApB;EACA+kB,IAAAA,GAAG,CAACO,IAAJ,GAAW,iBAAX;EACAP,IAAAA,GAAG,CAAC3S,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAegN,IAAf,EAAqBA,IAArB;EACA2F,IAAAA,GAAG,CAACQ,MAAJ;EACAR,IAAAA,GAAG,CAACS,QAAJ,CAAaH,IAAb,EAAmB,EAAnB,EAAuBjG,IAAI,GAAG,CAA9B;EACH;;EACD,SAAOsF,MAAM,CAACe,SAAP,EAAP;EACH;;EAED,IAAM1sB,SAAO,GAAG;EACZ2sB,EAAAA,MAAM,EAAE;EADI,CAAhB;EAGA;;;;MAGMC;;;;;EACF,gCAAY1B,GAAZ,EAAiBvqB,OAAjB,EAA+BksB,WAA/B,EAA4C1rB,KAA5C,EAAmD;EAAA;;EAAA,QAAlCR,OAAkC;EAAlCA,MAAAA,OAAkC,GAAxB,EAAwB;EAAA;;EAC/C,2CAAMZ,aAAA,CAAcmB,IAAd,EAAN,EAA4BnB,aAAA,CAAcsG,MAAd,CAAqB;EAAEymB,MAAAA,WAAW,EAAE5B;EAAf,KAArB,EAA2ClrB,SAA3C,EAAoDW,OAApD,CAA5B;EACA,UAAKosB,KAAL,GAAapsB,OAAb;EACA,UAAKqsB,MAAL,GAAc7rB,KAAd;EACA,UAAK0rB,WAAL,GAAmBA,WAAnB;EACA,UAAKI,eAAL,GAAuB,EAAvB;EACA,UAAKC,UAAL,GAAkB,EAAlB;EACA,UAAKC,IAAL,GAAY,IAAZ;EACA,UAAKC,cAAL,GAAsB,IAAIC,IAAJ,GAAWC,OAAX,EAAtB;;EACA,UAAK5J,KAAL;;EAT+C;EAUlD;;;;WAED3d,2CAAiB;EACb,WAAO,KAAKgnB,KAAL,CAAWJ,MAAlB;EACH;EAED;;;;;WAGAY,2CAAiB;EACb,QAAMC,SAAS,GAAG,KAAKN,UAAvB;EACA,QAAMO,MAAM,GAAG,EAAf;;EACA,SAAK,IAAIxmB,GAAT,IAAgBumB,SAAhB,EAA2B;EACvB,UAAME,WAAW,GAAG,KAAKT,eAAL,CAAqBhmB,GAArB,CAApB;;EACA,UAAIymB,WAAW,IAAInP,KAAK,CAACC,OAAN,CAAckP,WAAd,CAAf,IAA6CA,WAAW,CAAClmB,MAA7D,EAAqE;EACjE,aAAK,IAAID,CAAC,GAAG,CAAR,EAAWO,GAAG,GAAG4lB,WAAW,CAAClmB,MAAlC,EAA0CD,CAAC,GAAGO,GAA9C,EAAmDP,CAAC,EAApD,EAAwD;EACpDkmB,UAAAA,MAAM,CAAChmB,IAAP,CAAYimB,WAAW,CAACnmB,CAAD,CAAvB;EACH;EACJ;EACJ;;EACD,WAAOkmB,MAAP;EACH;EAED;;;;;EAKA;;;WACAvnB,qCAAaiX,MAAMvN,GAAG;EAItB;;;;;;;WAKA+d,+CAAkB5lB,OAAO6lB,MAAM;EAC3B,QAAMpW,IAAI,GAAG,KAAKuV,KAAlB;EAAA,QAAyBW,WAAW,GAAG,EAAvC;EACA,QAAMrtB,YAAY,GAAG,KAAK0F,cAAL,EAArB;;EACA,SAAK,IAAI8nB,SAAT,IAAsBD,IAAtB,EAA4B;EACxB,UAAME,OAAO,GAAGF,IAAI,CAACC,SAAD,CAAJ,IAAmB,EAAnC;EACA,UAAI7P,QAAQ,SAAZ;;EACA,UAAIO,KAAK,CAACC,OAAN,CAAcsP,OAAd,CAAJ,EAA4B;EACxB9P,QAAAA,QAAQ,GAAG8P,OAAX;EACH,OAFD,MAEO,IAAIA,OAAO,CAAC3Q,IAAR,KAAiB,mBAArB,EAA0C;EAC7Ca,QAAAA,QAAQ,GAAG8P,OAAO,CAAC9P,QAAnB;EACH;;EACD,UAAIA,QAAQ,IAAIA,QAAQ,CAACxW,MAAzB,EAAiC;EAC7B,YAAMiV,QAAQ,GAAG,EAAjB;EAAA,YAAqBgO,WAAW,GAAG,EAAnC;EAAA,YAAuCzX,MAAM,GAAG,EAAhD;;EACA,aAAK,IAAIzL,CAAC,GAAG,CAAR,EAAWO,GAAG,GAAGkW,QAAQ,CAACxW,MAA/B,EAAuCD,CAAC,GAAGO,GAA3C,EAAgDP,CAAC,EAAjD,EAAqD;EACjD,cAAM2V,OAAO,GAAGc,QAAQ,CAACzW,CAAD,CAAxB;;EACA,cAAI8V,gBAAgB,CAACH,OAAD,CAApB,EAA+B;EAC3BT,YAAAA,QAAQ,CAAChV,IAAT,CAAcyV,OAAd;EACH,WAFD,MAEO,IAAII,aAAa,CAACJ,OAAD,CAAjB,EAA4B;EAC/B,gBAAMoD,EAAE,GAAGvC,kBAAkB,CAACb,OAAD,CAA7B;;EACA,iBAAK,IAAIlV,CAAC,GAAG,CAAR,EAAWC,IAAI,GAAGqY,EAAE,CAAC9Y,MAA1B,EAAkCQ,CAAC,GAAGC,IAAtC,EAA4CD,CAAC,EAA7C,EAAiD;EAC7CyiB,cAAAA,WAAW,CAAChjB,IAAZ,CAAiB6Y,EAAE,CAACtY,CAAD,CAAnB;EACH;EACJ,WALM,MAKA,IAAIuV,cAAc,CAACL,OAAD,CAAlB,EAA6B;EAChC,gBAAMoD,GAAE,GAAGvC,kBAAkB,CAACb,OAAD,CAA7B;;EACA,iBAAK,IAAIlV,EAAC,GAAG,CAAR,EAAWC,IAAI,GAAGqY,GAAE,CAAC9Y,MAA1B,EAAkCQ,EAAC,GAAGC,IAAtC,EAA4CD,EAAC,EAA7C,EAAiD;EAC7CgL,cAAAA,MAAM,CAACvL,IAAP,CAAY1H,aAAA,CAAcsG,MAAd,CAAqB,EAArB,EAAyBia,GAAE,CAACtY,EAAD,CAAF,CAAM3F,UAA/B,EAA2Cie,GAAE,CAACtY,EAAD,CAA7C,EAAkD;EAAEnF,gBAAAA,UAAU,EAAE6a,qBAAqB,CAAC4C,GAAE,CAACtY,EAAD,CAAH;EAAnC,eAAlD,CAAZ;EACH;EACJ;EACJ;;EACD,YAAIyU,QAAQ,CAACjV,MAAb,EAAqB;EACjB,cAAM3D,QAAQ,GAAG,KAAKkqB,YAAL,CAAkBF,SAAlB,EAA6BpR,QAA7B,EAAuC1U,KAAvC,EAA8C+lB,OAA9C,CAAjB;;EACA,cAAIjqB,QAAJ,EAAc;EACV,gBAAMmqB,eAAe,GAAG,KAAKhB,MAAL,CAAYiB,iBAAZ,CAA8BxR,QAA9B,EACpB1c,aAAA,CAAcsG,MAAd,CAAqB,EAArB,EAAyB;EAAE6D,cAAAA,QAAQ,EAAE,MAAZ;EAAoB2jB,cAAAA,SAAS,EAATA,SAApB;EAA+BxtB,cAAAA,YAAY,EAAZA,YAA/B;EAA6C4G,cAAAA,GAAG,EAAEc;EAAlD,aAAzB,EAAoFyP,IAApF,CADoB,EACuE3T,QADvE,CAAxB;;EAEA6pB,YAAAA,WAAW,CAACjmB,IAAZ,CAAiBumB,eAAjB;EACH;EACJ;;EAED,YAAIvD,WAAW,CAACjjB,MAAhB,EAAwB;EACpB,cAAM3D,SAAQ,GAAG,KAAKkqB,YAAL,CAAkBF,SAAlB,EAA6BpD,WAA7B,EAA0C1iB,KAA1C,EAAiD+lB,OAAjD,CAAjB;;EACA,cAAIjqB,SAAQ,KAAKA,SAAQ,YAAYE,uBAApB,IAA+CF,SAAQ,YAAYE,wBAAxE,CAAZ,EAA+G;EAC3G,gBAAM2e,KAAK,GAAG,KAAKsK,MAAL,CAAYkB,OAAZ,CAAoBzD,WAApB,EAAiC1qB,aAAA,CAAcsG,MAAd,CAAqB,EAArB,EAAyB;EAAEwnB,cAAAA,SAAS,EAATA;EAAF,aAAzB,EAAwCrW,IAAxC,CAAjC,EAAgF3T,SAAhF,CAAd;;EACA6pB,YAAAA,WAAW,CAACjmB,IAAZ,CAAiBib,KAAjB;EACH;EACJ;;EACD,YAAI1P,MAAM,CAACxL,MAAX,EAAmB;EACf,cAAM3D,UAAQ,GAAG,KAAKkqB,YAAL,CAAkBF,SAAlB,EAA6B7a,MAA7B,EAAqCjL,KAArC,EAA4C+lB,OAA5C,CAAjB;;EACA,cAAIjqB,UAAQ,IAAIA,UAAQ,YAAYE,oBAApC,EAA0D;EACtD,gBAAM+a,EAAE,GAAG,KAAKkO,MAAL,CAAYmB,QAAZ,CAAqBnb,MAArB,EAA6BjT,aAAA,CAAcsG,MAAd,CAAqB,EAArB,EAAyB;EAAEwnB,cAAAA,SAAS,EAATA;EAAF,aAAzB,EAAwCrW,IAAxC,CAA7B,EAA4E3T,UAA5E,CAAX;;EACA6pB,YAAAA,WAAW,CAACjmB,IAAZ,CAAiBqX,EAAjB;EACH;EACJ;EACJ;EACJ;;EACD,WAAO4O,WAAP;EACH;;;WAGDrC,mCAAY1b,GAAG;EAAA,qBACcsb,SAAS,EADvB;EAAA,QACHD,YADG,cACHA,YADG;;EAEX,QAAIA,YAAY,CAACxjB,MAAb,GAAsB,CAA1B,EAA6B;EACzB,WAAK4mB,WAAL,CAAiBze,CAAjB;EACH;EACJ;EAGD;;;;;;WAIAye,mCAAYze,GAAG;EAAA,QACH1I,GADG,GACyB0I,CADzB,CACH1I,GADG;EAAA,QACEikB,GADF,GACyBvb,CADzB,CACEub,GADF;EAAA,QACO7F,QADP,GACyB1V,CADzB,CACO0V,QADP;EAAA,QACiB8F,GADjB,GACyBxb,CADzB,CACiBwb,GADjB;EAEXprB,IAAAA,aAAA,CAAcsuB,OAAd,CAAsBnD,GAAtB,EAA2B,EAA3B,EAA+B,UAAU3pB,KAAV,EAAiB+sB,GAAjB,EAAsB;EACjD,UAAI/sB,KAAJ,EAAW;EACPD,QAAAA,OAAO,CAACC,KAAR,CAAcA,KAAd;EACA8jB,QAAAA,QAAQ,CAACpe,GAAD,EAAM,IAAN,EAAYkkB,GAAZ,CAAR;EACH,OAHD,MAGO;EACH9F,QAAAA,QAAQ,CAACpe,GAAD,EAAMqnB,GAAN,EAAWnD,GAAX,CAAR;EACH;EACJ,KAPD;EAQH;;WAEDoD,mDAAqB;EACjB,QAAMC,SAAS,GAAG,KAAKC,QAAL,GAAgBD,SAAhB,IAA6B,EAA/C;EACA,QAAME,IAAI,GAAG,EAAb;EAAA,QAAiBC,OAAO,GAAG,EAA3B;;EACA,SAAK,IAAIpnB,CAAC,GAAG,CAAR,EAAWO,GAAG,GAAG0mB,SAAS,CAAChnB,MAAhC,EAAwCD,CAAC,GAAGO,GAA5C,EAAiDP,CAAC,EAAlD,EAAsD;EAClD,UAAMkL,CAAC,GAAG+b,SAAS,CAACjnB,CAAD,CAAnB;EACA,UAAMqnB,KAAK,GAAGnc,CAAC,CAACmc,KAAF,IAAW,EAAzB;;EACA,WAAK,IAAI5mB,CAAC,GAAG,CAAR,EAAWC,IAAI,GAAG2mB,KAAK,CAACpnB,MAA7B,EAAqCQ,CAAC,GAAGC,IAAzC,EAA+CD,CAAC,EAAhD,EAAoD;EAAA,YACxC6mB,MADwC,GAC7BD,KAAK,CAAC5mB,CAAD,CADwB,CACxC6mB,MADwC;EAEhDH,QAAAA,IAAI,CAACjnB,IAAL,CAAUonB,MAAV;EACAF,QAAAA,OAAO,CAACE,MAAD,CAAP,GAAkB,IAAlB;EACH;EAEJ;;EACD,WAAO;EAAEH,MAAAA,IAAI,EAAJA,IAAF;EAAQC,MAAAA,OAAO,EAAPA;EAAR,KAAP;EACH;;WAGDG,6BAAU;EAAA,gCACW,KAAKP,kBAAL,EADX;EAAA,QACEG,IADF,yBACEA,IADF;;EAEN,QAAMK,KAAK,GAAGtsB,MAAM,CAACisB,IAAP,CAAY,KAAKM,SAAL,CAAeC,WAA3B,CAAd;;EACA,QAAIP,IAAI,CAAClnB,MAAL,KAAgBunB,KAAK,CAACvnB,MAA1B,EAAkC;EAC9B,aAAO,IAAP;EACH;;EACD,WAAO,KAAP;EACH;;WAGD0nB,uCAAe;EACX;EACA,QAAMC,IAAI,GAAG,IAAI9B,IAAJ,GAAWC,OAAX,EAAb;EACA,QAAM8B,UAAU,GAAGD,IAAI,GAAG,KAAK/B,cAA/B;;EACA,QAAIgC,UAAU,GAAG,EAAjB,EAAqB;EACjB;EACH;;EACD,SAAKhC,cAAL,GAAsB+B,IAAtB;EACA,QAAMF,WAAW,GAAG,KAAKD,SAAL,CAAeC,WAAnC;EAAA,QAAgDzB,SAAS,GAAG,KAAKN,UAAjE;EAAA,QAA6EmC,UAAU,GAAG,KAAKrC,MAA/F;EAAA,QAAuG0B,IAAI,GAAG,KAAKzB,eAAnH;EACA,QAAMqC,cAAc,GAAG7sB,MAAM,CAACisB,IAAP,CAAYO,WAAZ,CAAvB;EAAA,QAAiDM,YAAY,GAAG9sB,MAAM,CAACisB,IAAP,CAAYlB,SAAZ,EAAuBhmB,MAAvF;EACA,QAAMgoB,sBAAsB,GAAG,EAA/B;;EACA,QAAIF,cAAc,IAAIC,YAAtB,EAAoC;EAChC,WAAK,IAAIxnB,KAAT,IAAkBylB,SAAlB,EAA6B;EACzB,YAAI,CAACyB,WAAW,CAAClnB,KAAD,CAAhB,EAAyB;EACrB,cAAI2mB,IAAI,CAAC3mB,KAAD,CAAR,EAAiB;EACb,aAAC2mB,IAAI,CAAC3mB,KAAD,CAAJ,IAAe,EAAhB,EAAoB0X,OAApB,CAA4B,UAAAgQ,UAAU,EAAI;EACtCD,cAAAA,sBAAsB,CAAC/nB,IAAvB,CAA4BgoB,UAA5B;EACH,aAFD;EAGH;EACJ;EACJ;EACJ;;EACD,QAAID,sBAAsB,CAAChoB,MAA3B,EAAmC;EAC/B6nB,MAAAA,UAAU,CAAC3tB,UAAX,CAAsB8tB,sBAAtB,EAA8C,KAA9C;EACH;;EACD,QAAIF,cAAc,IAAIC,YAAtB,EAAoC;EAChC,WAAK,IAAIxnB,MAAT,IAAkBknB,WAAlB,EAA+B;EAC3B,YAAI,CAACzB,SAAS,CAACzlB,MAAD,CAAd,EAAuB;EACnB,cAAI2mB,IAAI,CAAC3mB,MAAD,CAAR,EAAiB;EACb,gBAAM0nB,UAAU,GAAGf,IAAI,CAAC3mB,MAAD,CAAvB;EACAsnB,YAAAA,UAAU,CAAChuB,OAAX,CAAmBouB,UAAnB;EACH,WAHD,MAGO;EAAA,qCACe1nB,MAAK,CAAC2nB,KAAN,CAAY,GAAZ,EAAiBlP,KAAjB,CAAuB,CAAvB,EAA0B,CAA1B,CADf;EAAA,gBACIpW,CADJ;EAAA,gBACO9G,CADP;EAAA,gBACUF,CADV;;EAEH,iBAAKusB,UAAL,CAAgBrsB,CAAhB,EAAmB8G,CAAnB,EAAsBhH,CAAtB;EACH;EACJ;EACJ;EACJ;;EACD,SAAK8pB,UAAL,GAAkBzqB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBusB,WAAlB,CAAlB;;EACA,SAAKW,UAAL;EACH;;WAEDlM,yBAAQ;EAAA;;EACJ,SAAKnkB,EAAL,CAAQ,WAAR,EAAqB,KAAK2vB,YAA1B;EACA,SAAK3vB,EAAL,CAAQ,KAAR,EAAe,YAAM;EACjB,UAAI,MAAI,CAAC4tB,IAAL,KAAc,KAAlB,EAAyB;EACrB,YAAMO,WAAW,GAAG,MAAI,CAACH,cAAL,EAApB;;EACA,QAAA,MAAI,CAACP,MAAL,CAAY3rB,OAAZ,CAAoBqsB,WAApB;EACH;;EACD,MAAA,MAAI,CAACP,IAAL,GAAY,IAAZ;EACA;;;;;EAIA,MAAA,MAAI,CAAC0C,UAAL,GAAkBC,WAAW,CAAC,YAAM;EAChC,YAAI,MAAI,CAAChB,OAAL,MAAmB,CAAC,MAAI,CAAC9B,MAAL,CAAYrqB,MAAZ,GAAqBotB,aAArB,EAAxB,EAA+D;EAC3D,UAAA,MAAI,CAAClwB,IAAL,CAAU,WAAV;EACH;EACJ,OAJ4B,EAI1B,IAJ0B,CAA7B;EAKH,KAfD;EAgBA,SAAKN,EAAL,CAAQ,QAAR,EAAkB,YAAM;EACpB,MAAA,MAAI,CAAC4tB,IAAL,GAAY,KAAZ;;EACA,UAAMO,WAAW,GAAG,MAAI,CAACH,cAAL,EAApB;;EACA,MAAA,MAAI,CAACP,MAAL,CAAYtrB,UAAZ,CAAuBgsB,WAAvB;;EACAsC,MAAAA,aAAa,CAAC,MAAI,CAACH,UAAN,CAAb;EACH,KALD;EAMA,SAAKtwB,EAAL,CAAQ,MAAR,EAAgB,YAAM;EAClB,UAAMmuB,WAAW,GAAG,MAAI,CAACH,cAAL,EAApB;;EACAG,MAAAA,WAAW,CAACjO,OAAZ,CAAoB,UAAAgQ,UAAU,EAAI;EAC9BA,QAAAA,UAAU,CAACjsB,IAAX;EACH,OAFD;;EAGA,WAAK,IAAIyD,GAAT,IAAgB,MAAI,CAACgmB,eAArB,EAAsC;EAClC,YAAMS,YAAW,GAAG,MAAI,CAACT,eAAL,CAAqBhmB,GAArB,KAA6B,EAAjD;;EACAymB,QAAAA,YAAW,CAACjO,OAAZ,CAAoB,UAAAgQ,UAAU,EAAI;EAC9BA,UAAAA,UAAU,CAACjsB,IAAX;EACH,SAFD;EAGH;EACJ,KAXD;EAYA,SAAKjE,EAAL,CAAQ,MAAR,EAAgB,YAAM;EAClB,UAAMmuB,WAAW,GAAG,MAAI,CAACH,cAAL,EAApB;;EACAG,MAAAA,WAAW,CAACjO,OAAZ,CAAoB,UAAAgQ,UAAU,EAAI;EAC9BA,QAAAA,UAAU,CAAC/rB,IAAX;EACH,OAFD;;EAGA,WAAK,IAAIuD,GAAT,IAAgB,MAAI,CAACgmB,eAArB,EAAsC;EAClC,YAAMS,aAAW,GAAG,MAAI,CAACT,eAAL,CAAqBhmB,GAArB,KAA6B,EAAjD;;EACAymB,QAAAA,aAAW,CAACjO,OAAZ,CAAoB,UAAAgQ,UAAU,EAAI;EAC9BA,UAAAA,UAAU,CAAC/rB,IAAX;EACH,SAFD;EAGH;EACJ,KAXD;EAYA,SAAKnE,EAAL,CAAQ,gBAAR,EAA0B,UAACqQ,CAAD,EAAO;EAC7BA,MAAAA,CAAC,CAACqgB,QAAF,CAAWC,QAAX,GAAsB,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;EAC1C,YAAIC,QAAQ,GAAG,KAAKjvB,KAAL,CAAWkvB,WAAX,EAAf;EACA,YAAIC,SAAS,GAAG,IAAIC,KAAJ,EAAhB;EACAD,QAAAA,SAAS,CAACjY,KAAV,GAAkB+X,QAAQ,CAAC,OAAD,CAA1B;EACAE,QAAAA,SAAS,CAACnnB,MAAV,GAAmBinB,QAAQ,CAAC,QAAD,CAA3B;EACAE,QAAAA,SAAS,CAACE,MAAV,GAAmB,KAAKC,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,EAA2BJ,SAA3B,EAAsCH,IAAtC,CAAnB;EACAG,QAAAA,SAAS,CAACK,OAAV,GAAoB,KAAKC,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,EAA4BJ,SAA5B,EAAuCH,IAAvC,CAApB;EACA,aAAKU,aAAL,CAAmBP,SAAnB,EAA8BH,IAAI,CAAC,KAAD,CAAlC,EAA2CA,IAAI,CAACtB,MAAhD;EACA,eAAOyB,SAAP;EACH,OATD;;EAWA1gB,MAAAA,CAAC,CAACqgB,QAAF,CAAWa,UAAX,GAAwB,UAAUX,IAAV,EAAgB;EACpC,YAAI,CAACA,IAAD,IAAS,CAACA,IAAI,CAACY,KAAnB,EAA0B;EACtB;EACH;;EACDZ,QAAAA,IAAI,CAACY,KAAL,CAAWP,MAAX,GAAoB,IAApB;EACAL,QAAAA,IAAI,CAACY,KAAL,CAAWJ,OAAX,GAAqB,IAArB;EACA,YAAMK,QAAQ,GAAGb,IAAI,CAACjL,IAAL,IAAa,EAA9B;EACAoG,QAAAA,QAAQ,CAAC0F,QAAQ,CAACnC,MAAV,CAAR;EACH,OARD;;EAUAjf,MAAAA,CAAC,CAACqgB,QAAF,CAAWY,aAAX,GAA2B,UAAC1F,GAAD,EAAMD,GAAN,EAAWjkB,GAAX,EAAmB;EAC1CkkB,QAAAA,GAAG,CAAC8F,IAAJ,GAAWhqB,GAAX;EACAme,QAAAA,SAAS,CAACne,GAAD,EAAMikB,GAAN,EAAW,UAACnjB,KAAD,EAAQ6lB,IAAR,EAAcmD,KAAd,EAAwB;EACxC;EACA,UAAA,MAAI,CAACG,oBAAL,CAA0BnpB,KAA1B,EAAiC6lB,IAAjC,EAAuCmD,KAAvC;;EACArF,UAAAA,QAAQ,CAAC3jB,KAAD,EAAQ,MAAR,CAAR;EACH,SAJQ,EAINojB,GAJM,EAID,MAJC,CAAT;EAKH,OAPD;EAQH,KA9BD;EA+BH;;WAED4C,qCAAaF,WAAW9iB,MAAMhD,OAAO+lB,SAAS;EAC1C,QAAI,KAAKjB,WAAL,IAAoB9sB,aAAA,CAAcmF,UAAd,CAAyB,KAAK2nB,WAA9B,CAAxB,EAAoE;EAChE,aAAO,KAAKA,WAAL,CAAiBgB,SAAjB,EAA4B9iB,IAA5B,EAAkChD,KAAlC,EAAyC+lB,OAAzC,CAAP;EACH;;EACD,WAAO,IAAP;EACH;;WAEDqD,mCAAYvhB,GAAG;EACX,QAAM6f,UAAU,GAAG7f,CAAC,CAACuU,MAArB;EACA,QAAMgH,GAAG,GAAGsE,UAAU,CAAC2B,IAAvB;EACAjG,IAAAA,GAAG,CAACkG,YAAJ;;EACA,QAAIlG,GAAG,CAACkG,YAAJ,KAAqBlG,GAAG,CAACmG,SAA7B,EAAwC;EACpCnG,MAAAA,GAAG,CAACoG,GAAJ,GAAUzF,aAAa,CAACX,GAAG,CAAC8F,IAAL,EAAW,KAAKlE,KAAL,CAAWhB,KAAtB,CAAvB;EACH;EACJ;;WAGDmF,qDAAqBnpB,OAAO6lB,MAAMzC,KAAK;EAAA;;EACnC,QAAIyC,IAAI,IAAIzC,GAAZ,EAAiB;EAAA,mCACO,KAAKoD,kBAAL,EADP;EAAA,UACLI,OADK,0BACLA,OADK;;;EAGb,UAAI,CAACA,OAAO,CAAC5mB,KAAD,CAAZ,EAAqB;EACjBojB,QAAAA,GAAG,CAACoG,GAAJ,GAAUzF,aAAa,CAAC/jB,KAAD,EAAQ,KAAKglB,KAAL,CAAWhB,KAAnB,CAAvB;EACA;EACH;;EACD,UAAM2B,WAAW,GAAG,KAAKC,iBAAL,CAAuB5lB,KAAvB,EAA8B6lB,IAA9B,CAApB;;EACA,UAAIF,WAAW,CAAClmB,MAAhB,EAAwB;EACpB2jB,QAAAA,GAAG,CAACmG,SAAJ,GAAgB5D,WAAW,CAAClmB,MAA5B;EACA2jB,QAAAA,GAAG,CAACkG,YAAJ,GAAmB,CAAnB;;EACA,aAAK,IAAI9pB,CAAC,GAAG,CAAR,EAAWO,GAAG,GAAG4lB,WAAW,CAAClmB,MAAlC,EAA0CD,CAAC,GAAGO,GAA9C,EAAmDP,CAAC,EAApD,EAAwD;EACpD,cAAMkoB,UAAU,GAAG/B,WAAW,CAACnmB,CAAD,CAA9B;EACAkoB,UAAAA,UAAU,CAAC2B,IAAX,GAAkBjG,GAAlB;EACAsE,UAAAA,UAAU,CAACzuB,GAAX,GAAiB,IAAjB;;EACA,cAAI,CAAC,KAAK2C,SAAL,EAAL,EAAuB;EACnB8rB,YAAAA,UAAU,CAAC/rB,IAAX;EACH;;EACD,eAAK8tB,UAAL,CAAgBzpB,KAAhB,EAAuB0nB,UAAvB;;EACA,cAAI,CAACA,UAAU,CAAC1pB,cAAX,EAAL,EAAkC;EAC9BolB,YAAAA,GAAG,CAACkG,YAAJ;EACH;EACJ;;EAED,aAAKrE,MAAL,CAAY3rB,OAAZ,CAAoBqsB,WAApB,EAAiC,KAAjC;;EACA,YAAIvC,GAAG,CAACmG,SAAJ,KAAkBnG,GAAG,CAACkG,YAA1B,EAAwC;EACpClG,UAAAA,GAAG,CAACoG,GAAJ,GAAUzF,aAAa,CAAC/jB,KAAD,EAAQ,KAAKglB,KAAL,CAAWhB,KAAnB,CAAvB;EACH;;EACD,YAAI,KAAKhmB,cAAL,EAAJ,EAA2B;EACvB2nB,UAAAA,WAAW,CAAC+D,MAAZ,CAAmB,UAAAhC,UAAU,EAAI;EAC7B,mBAAOA,UAAU,CAAC1pB,cAAX,EAAP;EACH,WAFD,EAEG0Z,OAFH,CAEW,UAAAgQ,UAAU,EAAI;EACrBA,YAAAA,UAAU,CAAClwB,EAAX,CAAc,YAAd,EAA4B,MAAI,CAAC4xB,WAAjC,EAA8C,MAA9C;EACH,WAJD;EAKH,SAND,MAMO;EACHhG,UAAAA,GAAG,CAACoG,GAAJ,GAAUzF,aAAa,CAAC/jB,KAAD,EAAQ,KAAKglB,KAAL,CAAWhB,KAAnB,CAAvB;EACH;EACJ,OA7BD,MA6BO;EACHZ,QAAAA,GAAG,CAACoG,GAAJ,GAAUzF,aAAa,CAAC/jB,KAAD,EAAQ,KAAKglB,KAAL,CAAWhB,KAAnB,CAAvB;EACH;;EACD,WAAKmB,UAAL,CAAgBnlB,KAAhB,IAAyB,IAAzB;EACH,KAzCD,MAyCO,IAAIojB,GAAJ,EAAS;EACZA,MAAAA,GAAG,CAACoG,GAAJ,GAAUzF,aAAa,CAAC/jB,KAAD,EAAQ,KAAKglB,KAAL,CAAWhB,KAAnB,CAAvB;EACH;EACJ;;WAED6D,mCAAa;EAAA;;EACT;EACA;EACA;EACA,QAAIntB,MAAM,CAACisB,IAAP,CAAY,KAAKzB,eAAjB,EAAkCzlB,MAAlC,GAA2C,KAAKwnB,SAAL,CAAe0C,SAAf,CAAyB3lB,GAAxE,EAA6E;EAAA;EACzE,YAAM2lB,SAAS,GAAG,MAAI,CAAC1C,SAAL,CAAe0C,SAAf,CAAyB3mB,IAA3C;EACA,YAAMkkB,WAAW,GAAG,MAAI,CAACD,SAAL,CAAeC,WAAnC;EACA,YAAMO,sBAAsB,GAAG,EAA/B;;EACA,aAAK,IAAIznB,KAAT,IAAkB,MAAI,CAACklB,eAAvB,EAAwC;EACpC,cAAI,CAACyE,SAAS,CAAC3pB,KAAD,CAAV,IAAqB,CAACknB,WAAW,CAAClnB,KAAD,CAArC,EAA8C;EAC1C,aAAC,MAAI,CAACklB,eAAL,CAAqBllB,KAArB,KAA+B,EAAhC,EAAoC0X,OAApC,CAA4C,UAAAgQ,UAAU,EAAI;EACtD,kBAAIA,UAAU,CAAChvB,KAAf,EAAsB;EAClB+uB,gBAAAA,sBAAsB,CAAC/nB,IAAvB,CAA4BgoB,UAA5B;EACH;EACJ,aAJD;;EAKA,YAAA,MAAI,CAACkC,iBAAL,CAAuB5pB,KAAvB;;EACA,mBAAO,MAAI,CAACklB,eAAL,CAAqBllB,KAArB,CAAP;EACH;EACJ,SAdwE;;;EAgBzE,YAAIynB,sBAAsB,CAAChoB,MAA3B,EAAmC;EAC/B,UAAA,MAAI,CAACwlB,MAAL,CAAYtrB,UAAZ,CAAuB8tB,sBAAvB,EAA+C,KAA/C;EACH;EAlBwE;EAmB5E;EACJ;;WAEDmC,+CAAkB5pB,OAAO;EACrB,QAAM2lB,WAAW,GAAG,KAAKT,eAAL,CAAqBllB,KAArB,CAApB;;EACA,QAAI2lB,WAAW,IAAIA,WAAW,CAAClmB,MAA/B,EAAuC;EACnCkmB,MAAAA,WAAW,CAACjO,OAAZ,CAAoB,UAAAgQ,UAAU,EAAI;EAC9BA,QAAAA,UAAU,CAAC9tB,WAAX,GAAyBqB,QAAzB,CAAkCujB,OAAlC;;EACA,YAAIkJ,UAAU,CAAC9K,cAAf,EAA+B;EAC3B8K,UAAAA,UAAU,CAAC9K,cAAX,CAA0B4B,OAA1B;EACH;;EACD,YAAMqL,GAAG,GAAGnC,UAAU,CAACzI,YAAvB;;EACA,YAAI4K,GAAG,IAAIA,GAAG,CAACpqB,MAAf,EAAuB;EACnBoqB,UAAAA,GAAG,CAACnS,OAAJ,CAAY,UAAAoS,EAAE,EAAI;EACdA,YAAAA,EAAE,CAAClwB,WAAH,GAAiBqB,QAAjB,CAA0BujB,OAA1B;EACAsL,YAAAA,EAAE,GAAG,IAAL;EACH,WAHD;EAIH;;EACDpC,QAAAA,UAAU,CAACxI,MAAX,GAAoB,IAApB;EACAwI,QAAAA,UAAU,CAACjL,qBAAX,GAAmC,IAAnC;EACAiL,QAAAA,UAAU,CAACnJ,QAAX,GAAsB,IAAtB;EACAmJ,QAAAA,UAAU,GAAG,IAAb;EACH,OAhBD;EAiBH;EACJ;;WAED+B,iCAAWzpB,OAAO0nB,YAAY;EAC1B,QAAI,CAAC,KAAKxC,eAAL,CAAqBllB,KAArB,CAAL,EAAkC;EAC9B,WAAKklB,eAAL,CAAqBllB,KAArB,IAA8B,EAA9B;EACH;;EACD,SAAKklB,eAAL,CAAqBllB,KAArB,EAA4BN,IAA5B,CAAiCgoB,UAAjC;EAEH;;;IAhZ8B1vB;;ECbnC,IAAMY,OAAO,GAAG;EACZ,cAAY,IADA;EAEZ,kBAAgB,KAFJ;EAGZ,eAAa;EAHD,CAAhB;EAMA,IAAMmxB,MAAM,GAAGroB,IAAI,CAACC,EAAL,GAAU,GAAzB;EAEA,IAAMqoB,cAAc,GAAG,CACnB,CAAC,IAAD,EAAO,GAAP,CADmB,EAEnB,CAAC,IAAD,EAAO,GAAP,CAFmB,EAGnB,CAAC,IAAD,EAAO,EAAP,CAHmB,EAInB,CAAC,GAAD,EAAM,EAAN,CAJmB,EAKnB,CAAC,GAAD,EAAM,CAAN,CALmB,EAMnB,CAAC,EAAD,EAAK,CAAL,CANmB,EAOnB,CAAC,EAAD,EAAK,CAAL,CAPmB,EAQnB,CAAC,CAAD,EAAI,GAAJ,CARmB,EASnB,CAAC,CAAD,EAAI,GAAJ,CATmB,EAUnB,CAAC,CAAD,EAAI,IAAJ,CAVmB,EAWnB,CAAC,GAAD,EAAM,IAAN,CAXmB,CAAvB;EAcA,IAAMnO,QAAM,GAAG,CACX,WADW,EAEX,OAFW,EAGX,WAHW,EAIX,SAJW,EAKX,UALW,EAMX,aANW,EAOX,YAPW,EAQX,WARW,EASX,UATW,CAAf;EAYA,IAAMoO,OAAO,GAAG,IAAIjuB,aAAJ,EAAhB;EAEA;;;;;;;;;;;;;;;;;;;;;;;;MAuBM3C;;;;;;;;;;;EACF;;;;WAIA6wB,uBAAO;EACH,SAAKC,WAAL;EACH;EAED;;;;;;WAIAC,iDAAoB;EAChB,SAAKD,WAAL;EACH;EACD;;;;;;;;WAMAtnB,mDAAoB/H,YAAYO,GAAO;EAAA,QAAPA,CAAO;EAAPA,MAAAA,CAAO,GAAH,CAAG;EAAA;;EACnC,QAAMuH,GAAG,GAAG,KAAKhI,MAAL,EAAZ;;EACA,QAAI,CAACgI,GAAL,EAAU;EACN,aAAO,IAAP;EACH;;EACD,QAAI,EAAE9H,UAAU,YAAY9C,mBAAxB,CAAJ,EAAkD;EAC9C8C,MAAAA,UAAU,GAAG,IAAI9C,mBAAJ,CAAwB8C,UAAxB,CAAb;EACH;;EACD,QAAM6J,CAAC,GAAG/B,GAAG,CAACynB,iBAAJ,CAAsBvvB,UAAtB,EAAkCwvB,aAAa,CAAC1nB,GAAD,CAA/C,CAAV;EACA,WAAO,IAAI5G,aAAJ,CAAkB2I,CAAC,CAACpJ,CAApB,EAAuBoJ,CAAC,CAACtC,CAAzB,EAA4BhH,CAA5B,CAAP;EACH;EAED;;;;;;;;WAMAC,+CAAkBsnB,GAAGrT,GAAGgb,OAAO;EAC3B,QAAM3nB,GAAG,GAAG,KAAKhI,MAAL,EAAZ;EACA,QAAM4vB,IAAI,GAAGF,aAAa,CAAC1nB,GAAD,CAA1B;EACA,QAAIyT,MAAM,GAAGkU,KAAK,IAAI3nB,GAAG,CAAC/H,SAAJ,EAAtB;;EACA,QAAI,EAAEwb,MAAM,YAAYre,mBAApB,CAAJ,EAA8C;EAC1Cqe,MAAAA,MAAM,GAAG,IAAIre,mBAAJ,CAAwBqe,MAAxB,CAAT;EACH;;EACD,QAAM+F,MAAM,GAAGxZ,GAAG,CAAC6nB,MAAJ,CAAWpU,MAAX,EAAmBuM,CAAnB,EAAsBrT,CAAtB,CAAf;EACA,QAAMmb,EAAE,GAAG9nB,GAAG,CAACynB,iBAAJ,CAAsBhU,MAAtB,EAA8BmU,IAA9B,CAAX;EAAA,QACI1hB,EAAE,GAAGlG,GAAG,CAACynB,iBAAJ,CAAsBjO,MAAtB,EAA8BoO,IAA9B,CADT;EAEA,QAAMjvB,CAAC,GAAGmG,IAAI,CAAC+F,GAAL,CAASqB,EAAE,CAACvN,CAAH,GAAOmvB,EAAE,CAACnvB,CAAnB,IAAwBvD,aAAA,CAAcmR,IAAd,CAAmByZ,CAAnB,CAAlC;EACA,QAAMvgB,CAAC,GAAGX,IAAI,CAAC+F,GAAL,CAASqB,EAAE,CAACzG,CAAH,GAAOqoB,EAAE,CAACroB,CAAnB,IAAwBrK,aAAA,CAAcmR,IAAd,CAAmBoG,CAAnB,CAAlC;EACA,WAAO,IAAIvT,aAAJ,CAAkBT,CAAlB,EAAqB8G,CAArB,EAAwB,CAAxB,CAAP;EACH;EAED;;;;;;;WAKAsoB,2BAAQ3vB,SAAS;EAAA;;EACb,QAAI,CAACA,OAAL,EAAc;EACV,aAAO,IAAP;EACH;;EACD,QAAIA,OAAO,YAAYhD,qBAAvB,EAA8C;EAC1C,aAAOgD,OAAO,CAACqd,aAAR,GAAwBzV,GAAxB,CAA4B,UAAA4C,CAAC;EAAA,eAAI,KAAI,CAACmlB,OAAL,CAAanlB,CAAb,CAAJ;EAAA,OAA7B,CAAP;EACH;;EACD,QAAM6Q,MAAM,GAAGrb,OAAO,CAACH,SAAR,EAAf;EACA,QAAM+b,QAAQ,GAAG,KAAK/T,mBAAL,CAAyBwT,MAAzB,CAAjB;EACA,QAAMmC,KAAK,GAAGxd,OAAO,CAAC0d,QAAR,EAAd;EACA,QAAME,KAAK,GAAGJ,KAAK,CAAC5V,GAAN,CAAU,UAAA4C,CAAC;EAAA,aAAI,KAAI,CAAC3C,mBAAL,CAAyB2C,CAAzB,EAA4BqR,GAA5B,CAAgCD,QAAhC,CAAJ;EAAA,KAAX,CAAd;EACA,QAAMgU,KAAK,GAAG,IAAI5uB,WAAJ,CAAgB4c,KAAhB,CAAd;EACA,QAAMrO,KAAK,GAAGvP,OAAO,CAAC2d,QAAR,EAAd;;EAEA,QAAIpO,KAAK,IAAIA,KAAK,CAAC9K,MAAN,GAAe,CAA5B,EAA+B;EAC3BmrB,MAAAA,KAAK,CAACrgB,KAAN,GAAcA,KAAK,CAAC3H,GAAN,CAAU,UAAAioB,IAAI,EAAI;EAC5B,YAAM/R,GAAG,GAAG+R,IAAI,CAACjoB,GAAL,CAAS,UAAA4C,CAAC;EAAA,iBAAI,KAAI,CAAC3C,mBAAL,CAAyB2C,CAAzB,EAA4BqR,GAA5B,CAAgCD,QAAhC,CAAJ;EAAA,SAAV,CAAZ;EACA,eAAO,IAAI5a,WAAJ,CAAgB8c,GAAhB,CAAP;EACH,OAHa,CAAd;EAIH;;EAED,WAAO8R,KAAP;EACH;EAGD;;;;;;;;;WAOAE,uCAAc9vB,SAAS7C,UAAU2D,UAAUsF,QAAQ;EAAA;;EAC/C,QAAI,CAACpG,OAAL,EAAc;EACV,aAAO,IAAP;EACH;;EACD,QAAIA,OAAO,YAAYhD,qBAAvB,EAA8C;EAC1C,aAAOgD,OAAO,CAACqd,aAAR,GAAwBzV,GAAxB,CAA4B,UAAA4C,CAAC;EAAA,eAAI,MAAI,CAACslB,aAAL,CAAmBtlB,CAAnB,EAAsBrN,QAAtB,EAAgC2D,QAAhC,EAA0CsF,MAA1C,CAAJ;EAAA,OAA7B,CAAP;EACH;;EACD,QAAM2pB,KAAK,GAAG/vB,OAAO,CAAC2b,cAAR,EAAd;EACAoU,IAAAA,KAAK,CAACrT,OAAN,CAAc,UAAAsT,IAAI,EAAI;EAClB,UAAMvrB,MAAM,GAAGurB,IAAI,CAACvrB,MAApB;;EACA,WAAK,IAAID,CAAC,GAAGC,MAAM,GAAG,CAAtB,EAAyBD,CAAC,IAAI,CAA9B,EAAiCA,CAAC,EAAlC,EAAsC;EAClC,YAAIwrB,IAAI,CAACxrB,CAAD,CAAJ,CAAQgF,MAAR,CAAewmB,IAAI,CAACxrB,CAAC,GAAG,CAAL,CAAnB,CAAJ,EAAiC;EAC7BwrB,UAAAA,IAAI,CAACtH,MAAL,CAAYlkB,CAAZ,EAAe,CAAf;EACH;EACJ;EACJ,KAPD;EAQAxE,IAAAA,OAAO,CAACiwB,cAAR,CAAuBF,KAAvB;EACA,QAAMH,KAAK,GAAG,KAAKD,OAAL,CAAa3vB,OAAb,CAAd;EACA,QAAMqb,MAAM,GAAG,KAAKxT,mBAAL,CAAyB7H,OAAO,CAACH,SAAR,EAAzB,CAAf;EACAuG,IAAAA,MAAM,GAAGpJ,aAAA,CAAcoD,QAAd,CAAuBgG,MAAvB,IAAiCA,MAAjC,GAA0CjJ,QAAnD;EACAiJ,IAAAA,MAAM,GAAG,KAAK9F,iBAAL,CAAuB8F,MAAvB,EAA+BA,MAA/B,EAAuC7F,CAAhD;EACA,QAAM2vB,MAAM,GAAG,KAAK5vB,iBAAL,CAAuBnD,QAAvB,EAAiCA,QAAjC,EAA2CoD,CAA1D,CArB+C;;EAuB/C,QAAM6C,MAAM,GAAG;EAAE,sBAAgB,KAAlB;EAAyB,mBAAa;EAAtC,KAAf;EACA,QAAMjE,IAAI,GAAG4E,QAAQ,CAAC/C,cAAD,CAAR,IAA4B,EAA5B,GAAiC,OAAjC,GAA2C,QAAxD;EACAoC,IAAAA,MAAM,CAACjE,IAAD,CAAN,GAAeiH,MAAf;EACA,QAAM+pB,IAAI,GAAG,IAAInvB,qBAAJ,CAA0B4uB,KAA1B,EAAiCxsB,MAAjC,CAAb;EACA,QAAM4e,QAAQ,GAAG,IAAIhhB,oBAAJ,EAAjB;EACAghB,IAAAA,QAAQ,CAACoO,YAAT,CAAsBD,IAAtB;EACA,QAAME,IAAI,GAAG,IAAIrvB,UAAJ,CAAeghB,QAAf,EAAyBlhB,QAAzB,CAAb;EACAuvB,IAAAA,IAAI,CAAC7vB,QAAL,CAAcoC,GAAd,CAAkByY,MAAM,CAAC9a,CAAzB,EAA4B8a,MAAM,CAAChU,CAAnC,EAAsC6oB,MAAM,GAAG9pB,MAA/C;EACA,WAAOiqB,IAAP;EACH;EAGD;;;;;;;;WAMAC,6CAAiBtwB,SAASpC,SAASkD,UAAU;EACzC,WAAO,IAAIkd,cAAJ,CAAmBhe,OAAnB,EAA4BpC,OAA5B,EAAqCkD,QAArC,EAA+C,IAA/C,CAAP;EACH;EAGD;;;;;;;;WAMAyvB,uBAAMzwB,YAAYlC,SAASkD,UAAU;EACjC,WAAO,IAAI4G,GAAJ,CAAQ5H,UAAR,EAAoBlC,OAApB,EAA6BkD,QAA7B,EAAuC,IAAvC,CAAP;EACH;EAGD;;;;;;;;WAMA0vB,yBAAOzwB,YAAYnC,SAASkD,UAAU;EAClC,WAAO,IAAI8b,IAAJ,CAAS7c,UAAT,EAAqBnC,OAArB,EAA8BkD,QAA9B,EAAwC,IAAxC,CAAP;EACH;EAGD;;;;;;;;WAMA2vB,uCAAc1wB,YAAYnC,SAASkD,UAAU;EACzC,WAAO,IAAI+b,WAAJ,CAAgB9c,UAAhB,EAA4BnC,OAA5B,EAAqCkD,QAArC,EAA+C,IAA/C,CAAP;EACH;EAGD;;;;;;;WAKA4vB,2BAAQxS,OAAOtgB,SAAS;EACpB,WAAO,IAAIqgB,KAAJ,CAAUC,KAAV,EAAiBtgB,OAAjB,EAA0B,IAA1B,CAAP;EACH;EAID;;;;;;;;WAMA+yB,iDAAmB5wB,YAAYnC,SAASkD,UAAU;EAC9C,WAAO,IAAIuf,gBAAJ,CAAqBtgB,UAArB,EAAiCnC,OAAjC,EAA0CkD,QAA1C,EAAoD,IAApD,CAAP;EACH;EAED;;;;;;;;WAMAoqB,+CAAkBxR,UAAU9b,SAASkD,UAAU;EAC3C,WAAO,IAAImiB,eAAJ,CAAoBvJ,QAApB,EAA8B9b,OAA9B,EAAuCkD,QAAvC,EAAiD,IAAjD,CAAP;EACH;EAGD;;;;;;;;WAMA8vB,2BAAQ9wB,YAAYlC,SAASkD,UAAU;EACnC,WAAO,IAAI6jB,KAAJ,CAAU7kB,UAAV,EAAsBlC,OAAtB,EAA+BkD,QAA/B,EAAyC,IAAzC,CAAP;EACH;EAGD;;;;;;;;WAMAsqB,6BAASnb,QAAQrS,SAASkD,UAAU;EAChC,WAAO,IAAI6lB,MAAJ,CAAW1W,MAAX,EAAmBrS,OAAnB,EAA4BkD,QAA5B,EAAsC,IAAtC,CAAP;EACH;EAGD;;;;;;;;WAMA+vB,yBAAO5gB,QAAQrS,SAASkD,UAAU;EAC9B,WAAO,IAAIqmB,IAAJ,CAASlX,MAAT,EAAiBrS,OAAjB,EAA0BkD,QAA1B,EAAoC,IAApC,CAAP;EACH;EAGD;;;;;;;;WAMAgwB,yCAAepJ,aAAa9pB,SAASkD,UAAU;EAC3C,WAAO,IAAI2mB,YAAJ,CAAiBC,WAAjB,EAA8B9pB,OAA9B,EAAuCkD,QAAvC,EAAiD,IAAjD,CAAP;EACH;EAGD;;;;;;;;WAMAqqB,2BAAQzD,aAAa9pB,SAASkD,UAAU;EACpC,WAAO,IAAIgnB,KAAJ,CAAUJ,WAAV,EAAuB9pB,OAAvB,EAAgCkD,QAAhC,EAA0C,IAA1C,CAAP;EACH;EAGD;;;;;;;;;WAOAiwB,yDAAuB5I,KAAKvqB,SAASksB,aAAa;EAC9C,WAAO,IAAID,oBAAJ,CAAyB1B,GAAzB,EAA8BvqB,OAA9B,EAAuCksB,WAAvC,EAAoD,IAApD,CAAP;EACH;;WAKDkH,iCAAY;EACR,QAAMC,KAAK,GAAG,KAAKC,QAAL,EAAd;;EACA,QAAI,CAACD,KAAL,EAAY;EACR,aAAO,IAAP;EACH;;EACD,SAAK,IAAIzsB,CAAC,GAAGysB,KAAK,CAACE,QAAN,CAAe1sB,MAAf,GAAwB,CAArC,EAAwCD,CAAC,IAAI,CAA7C,EAAgDA,CAAC,EAAjD,EAAqD;EACjD,UAAIysB,KAAK,CAACE,QAAN,CAAe3sB,CAAf,aAA6BxD,UAAjC,EAA6C;EACzCiwB,QAAAA,KAAK,CAACxyB,MAAN,CAAawyB,KAAK,CAACE,QAAN,CAAe3sB,CAAf,CAAb;EACH;EACJ;;EACD,WAAO,IAAP;EACH;;WAED4sB,yBAAO7M,QAAQ;EACX,QAAM2I,QAAQ,GAAG,KAAKmE,YAAL,EAAjB;;EACA,QAAInE,QAAJ,EAAc;EACVA,MAAAA,QAAQ,CAACoE,OAAT,CAAiBF,MAAjB,CAAwB7M,MAAxB;EACH;;EACD,WAAO,IAAP;EACH;;WAEDS,iCAAY;EACR,QAAMkI,QAAQ,GAAG,KAAKmE,YAAL,EAAjB;;EACA,QAAInE,QAAJ,EAAc;EACV,aAAOA,QAAQ,CAAC5I,MAAhB;EACH;;EACD,WAAO,IAAP;EACH;;WAED4M,+BAAW;EACP,QAAMhE,QAAQ,GAAG,KAAKmE,YAAL,EAAjB;;EACA,QAAInE,QAAJ,EAAc;EACV,aAAOA,QAAQ,CAAC+D,KAAhB;EACH;;EACD,WAAO,IAAP;EACH;;WAED9B,qCAAc;EACV,QAAMjC,QAAQ,GAAG,KAAKmE,YAAL,EAAjB;;EACA,QAAInE,QAAJ,EAAc;EACV,aAAOA,QAAQ,CAACiC,WAAT,EAAP;EACH;;EACD,WAAO,IAAP;EACH;;WAEDoC,+CAAmB;EACf,QAAMrE,QAAQ,GAAG,KAAKmE,YAAL,EAAjB;;EACA,QAAInE,QAAJ,EAAc;EACV,aAAOA,QAAQ,CAACoE,OAAhB;EACH;;EACD,WAAO,IAAP;EACH;EAED;;;;;;WAIAhzB,2BAAQkzB,QAAQC,QAAe;EAAA;;EAAA,QAAfA,MAAe;EAAfA,MAAAA,MAAe,GAAN,IAAM;EAAA;;EAC3B,QAAI,CAACD,MAAL,EAAa,OAAO,IAAP;;EACb,QAAI,CAAChW,KAAK,CAACC,OAAN,CAAc+V,MAAd,CAAL,EAA4B;EACxBA,MAAAA,MAAM,GAAG,CAACA,MAAD,CAAT;EACH;;EACD,QAAMP,KAAK,GAAG,KAAKC,QAAL,EAAd;EACAM,IAAAA,MAAM,CAAC9U,OAAP,CAAe,UAAA2T,IAAI,EAAI;EACnB,UAAIA,IAAI,YAAY9zB,aAApB,EAAgC;EAC5B00B,QAAAA,KAAK,CAAC7S,GAAN,CAAUiS,IAAI,CAACzxB,WAAL,EAAV;;EACA,YAAI,CAACyxB,IAAI,CAAC3yB,KAAV,EAAiB;EACb2yB,UAAAA,IAAI,CAAC3yB,KAAL,GAAa,IAAb;;EACA2yB,UAAAA,IAAI,CAACrxB,KAAL,CAAW,KAAX,EAAkB;EAAEoiB,YAAAA,MAAM,EAAEiP;EAAV,WAAlB;EACH;;EACD,YAAIA,IAAI,CAACzP,UAAL,IAAmB5jB,aAAA,CAAcmF,UAAd,CAAyBkuB,IAAI,CAACzP,UAA9B,CAAvB,EAAkE;EAC9D,UAAA,MAAI,CAAC8Q,uBAAL,CAA6BrB,IAAI,CAACzxB,WAAL,GAAmB+yB,IAAhD,IAAwDtB,IAAxD;EACH;EACJ,OATD,MASO,IAAIA,IAAI,YAAYrvB,cAApB,EAAoC;EACvCiwB,QAAAA,KAAK,CAAC7S,GAAN,CAAUiS,IAAV;EACH;EACJ,KAbD;;EAcA,SAAKuB,QAAL;;EACA,QAAIH,MAAJ,EAAY;EACR,WAAKtC,WAAL;EACH;;EACD,WAAO,IAAP;EACH;EAED;;;;;;WAIAxwB,iCAAW6yB,QAAQC,QAAe;EAAA;;EAAA,QAAfA,MAAe;EAAfA,MAAAA,MAAe,GAAN,IAAM;EAAA;;EAC9B,QAAI,CAACD,MAAL,EAAa,OAAO,IAAP;;EACb,QAAI,CAAChW,KAAK,CAACC,OAAN,CAAc+V,MAAd,CAAL,EAA4B;EACxBA,MAAAA,MAAM,GAAG,CAACA,MAAD,CAAT;EACH;;EACD,QAAMP,KAAK,GAAG,KAAKC,QAAL,EAAd;EACAM,IAAAA,MAAM,CAAC9U,OAAP,CAAe,UAAA2T,IAAI,EAAI;EACnB,UAAIA,IAAI,YAAY9zB,aAApB,EAAgC;EAC5B00B,QAAAA,KAAK,CAACxyB,MAAN,CAAa4xB,IAAI,CAACzxB,WAAL,EAAb;;EACA,YAAIyxB,IAAI,CAAC3yB,KAAT,EAAgB;EACZ2yB,UAAAA,IAAI,CAAC3yB,KAAL,GAAa,KAAb;;EACA2yB,UAAAA,IAAI,CAACrxB,KAAL,CAAW,QAAX,EAAqB;EAAEoiB,YAAAA,MAAM,EAAEiP;EAAV,WAArB;EACH;;EACD,YAAIA,IAAI,CAACzP,UAAL,IAAmB5jB,aAAA,CAAcmF,UAAd,CAAyBkuB,IAAI,CAACzP,UAA9B,CAAvB,EAAkE;EAC9D,iBAAO,MAAI,CAAC8Q,uBAAL,CAA6BrB,IAAI,CAACzxB,WAAL,GAAmB+yB,IAAhD,CAAP;EACH;EACJ,OATD,MASO,IAAItB,IAAI,YAAYrvB,cAApB,EAAoC;EACvCiwB,QAAAA,KAAK,CAACxyB,MAAN,CAAa4xB,IAAb;EACH;EACJ,KAbD;;EAcA,QAAIoB,MAAJ,EAAY;EACR,WAAKtC,WAAL;EACH;;EACD,WAAO,IAAP;EACH;;WAED0C,2CAAiB;EACb,QAAI,CAAC,KAAKC,UAAV,EAAsB;EAClB,WAAKA,UAAL,GAAkB,IAAI9wB,eAAJ,EAAlB;EACA,WAAK+wB,MAAL,GAAc,IAAI/wB,aAAJ,EAAd;EACH;;EACD,WAAO,IAAP;EACH;EAED;;;;;;;;WAMA8jB,6BAAShlB,YAAYlC,SAAS;EAAA;;EAC1B,QAAI,CAACkC,UAAL,EAAiB;EACbvB,MAAAA,OAAO,CAACC,KAAR,CAAc,4CAAd;EACA,aAAO,EAAP;EACH;;EACD,QAAIgd,KAAK,CAACC,OAAN,CAAc3b,UAAd,CAAJ,EAA+B;EAC3BA,MAAAA,UAAU,GAAG,IAAI9C,mBAAJ,CAAwB8C,UAAxB,CAAb;EACH;;EACD,QAAI,EAAEA,UAAU,YAAY9C,mBAAxB,CAAJ,EAAkD;EAC9CuB,MAAAA,OAAO,CAACC,KAAR,CAAc,kDAAd;EACA,aAAO,EAAP;EACH;;EACD,QAAMmL,CAAC,GAAG,KAAK/J,MAAL,GAAculB,qBAAd,CAAoCrlB,UAApC,CAAV;EAZ0B,QAalBS,CAbkB,GAaToJ,CAbS,CAalBpJ,CAbkB;EAAA,QAaf8G,CAbe,GAaTsC,CAbS,CAaftC,CAbe;;EAc1B,SAAKwqB,cAAL;;EACA,QAAMG,SAAS,GAAG,KAAKF,UAAvB;EAAA,QACIG,KAAK,GAAG,KAAKF,MADjB;EAAA,QAEIzN,MAAM,GAAG,KAAKU,SAAL,EAFb;EAAA,QAGIiM,KAAK,GAAG,KAAKC,QAAL,EAHZ;EAAA,QAIIra,IAAI,GAAG,KAAKjX,MAAL,GAAcmlB,OAAd,EAJX,CAf0B;;EAqB1B,QAAI,CAACkM,KAAL,EAAY;EACR,aAAO,EAAP;EACH;;EACD,QAAM3b,KAAK,GAAGuB,IAAI,CAACvB,KAAnB;EAAA,QACIlP,MAAM,GAAGyQ,IAAI,CAACzQ,MADlB;EAEA6rB,IAAAA,KAAK,CAAC1xB,CAAN,GAAWA,CAAC,GAAG+U,KAAL,GAAc,CAAd,GAAkB,CAA5B;EACA2c,IAAAA,KAAK,CAAC5qB,CAAN,GAAU,EAAEA,CAAC,GAAGjB,MAAN,IAAgB,CAAhB,GAAoB,CAA9B;EACA4rB,IAAAA,SAAS,CAACE,aAAV,CAAwBD,KAAxB,EAA+B3N,MAA/B,EA5B0B;;EA8B1B0N,IAAAA,SAAS,CAACG,aAAV,GAA0B,KAAKC,iBAAL,CAAuB,KAAKxyB,MAAL,GAAcyyB,aAAd,EAAvB,CAA1B;EACA,QAAMlB,QAAQ,GAAG,EAAjB;EAAA,QAAqBmB,mBAAmB,GAAG,EAA3C;EACArB,IAAAA,KAAK,CAACE,QAAN,CAAezU,OAAf,CAAuB,UAAA2T,IAAI,EAAI;EAC3B,UAAMkC,MAAM,GAAGlC,IAAI,CAAC7sB,QAApB;;EACA,UAAI+uB,MAAM,IAAIA,MAAM,CAACnzB,UAArB,EAAiC;EAC7B,YAAMlC,WAAW,GAAGq1B,MAAM,CAACnzB,UAAP,GAAoBlC,WAAxC;;EACA,YAAIA,WAAW,IAAIq1B,MAAM,CAAC3xB,SAAP,EAAnB,EAAuC;EACnC;EACA,cAAI2xB,MAAM,CAACzN,QAAP,IAAmB9nB,aAAA,CAAcmF,UAAd,CAAyBowB,MAAM,CAACzN,QAAhC,CAAvB,EAAkE;EAC9DwN,YAAAA,mBAAmB,CAAC5tB,IAApB,CAAyB6tB,MAAzB;EACH,WAFD,MAEO;EACHpB,YAAAA,QAAQ,CAACzsB,IAAT,CAAc2rB,IAAd;EACH;EACJ;EACJ,OAVD,MAUO,IAAIA,IAAI,YAAYrvB,UAAhB,IAA8BqvB,IAAI,YAAYrvB,WAAlD,EAA+D;EAClEmwB,QAAAA,QAAQ,CAACzsB,IAAT,CAAc2rB,IAAd;EACH;EACJ,KAfD;EAgBA,QAAIrP,WAAW,GAAG,EAAlB;EACA,QAAM5V,UAAU,GAAG4mB,SAAS,CAACQ,gBAAV,CAA2BrB,QAA3B,EAAqC,IAArC,CAAnB;;EACA,QAAI/lB,UAAU,IAAIoQ,KAAK,CAACC,OAAN,CAAcrQ,UAAd,CAAd,IAA2CA,UAAU,CAAC3G,MAA1D,EAAkE;EAC9Duc,MAAAA,WAAW,GAAG5V,UAAU,CAACxD,GAAX,CAAe,UAAA6qB,SAAS,EAAI;EACtC,YAAIC,MAAM,GAAGD,SAAS,CAACC,MAAvB;EACAA,QAAAA,MAAM,GAAG,MAAI,CAACC,cAAL,CAAoBD,MAApB,CAAT;EACA,YAAMzR,UAAU,GAAGyR,MAAM,CAAClvB,QAAP,IAAmBkvB,MAAtC;EACAzR,QAAAA,UAAU,CAACwC,SAAX,GAAuBgP,SAAS,CAAChP,SAAjC;EACAxC,QAAAA,UAAU,CAACjc,KAAX,GAAmBytB,SAAS,CAACztB,KAA7B;EACA,eAAOic,UAAP;EACH,OAPa,CAAd;EAQH;;EACD,QAAIqR,mBAAmB,CAAC7tB,MAAxB,EAAgC;EAC5B6tB,MAAAA,mBAAmB,CAAC5V,OAApB,CAA4B,UAAAuE,UAAU,EAAI;EACtC;EACA,YAAIA,UAAU,CAAC6D,QAAX,CAAoBhlB,UAApB,CAAJ,EAAqC;EACjCkhB,UAAAA,WAAW,CAACtc,IAAZ,CAAiBuc,UAAjB;EACH;EACJ,OALD;EAMH;;EACDrjB,IAAAA,OAAO,GAAGZ,aAAA,CAAcsG,MAAd,CAAqB,EAArB,EAAyB1F,OAAzB,CAAV;EACA,QAAMqiB,KAAK,GAAGriB,OAAO,CAACqiB,KAAtB;EACA,WAAQjjB,aAAA,CAAcoD,QAAd,CAAuB6f,KAAvB,KAAiCA,KAAK,GAAG,CAAzC,GAA6Ce,WAAW,CAACvD,KAAZ,CAAkB,CAAlB,EAAqBwC,KAArB,CAA7C,GAA2Ee,WAAnF;EACH;EAED;;;;;;WAIA2R,yCAAetC,MAAM;EACjB,WAAOA,IAAI,IAAK,EAAEA,IAAI,CAACkC,MAAL,YAAuBvxB,WAAzB,CAAhB,EAAwD;EACpDqvB,MAAAA,IAAI,GAAGA,IAAI,CAACkC,MAAZ;EACH;;EACD,WAAOlC,IAAI,IAAI,EAAf;EACH;;;WAGD+B,+CAAkB7G,KAAU;EAAA,QAAVA,GAAU;EAAVA,MAAAA,GAAU,GAAJ,EAAI;EAAA;;EACxB,SAAK,IAAI/mB,CAAC,GAAG,CAAR,EAAWO,GAAG,GAAGiqB,cAAc,CAACvqB,MAArC,EAA6CD,CAAC,GAAGO,GAAjD,EAAsDP,CAAC,EAAvD,EAA2D;EAAA,8BACzBwqB,cAAc,CAACxqB,CAAD,CADW;EAAA,UAChDouB,QADgD;EAAA,UACtCC,SADsC;;EAEvD,UAAItH,GAAG,GAAGqH,QAAV,EAAoB;EAChB,eAAOC,SAAP;EACH;EACJ;;EACD,WAAO,IAAP;EACH;EAED;;;;;;WAIAC,+DAA0BjmB,GAAG;EACzB,QAAMjF,GAAG,GAAG,KAAKA,GAAL,IAAY,KAAKhI,MAAL,EAAxB,CADyB;EAGzB;EACA;EACA;;EACAgI,IAAAA,GAAG,CAACmrB,WAAJ,CAAgB,SAAhB;EANyB,QAOjB3Y,IAPiB,GAOIvN,CAPJ,CAOjBuN,IAPiB;EAAA,QAOXta,UAPW,GAOI+M,CAPJ,CAOX/M,UAPW;EAQzB,QAAMkhB,WAAW,GAAG,KAAK8D,QAAL,CAAchlB,UAAd,CAApB;EACA,QAAMmxB,KAAK,GAAG,KAAKC,QAAL,EAAd;;EACA,QAAIlQ,WAAW,CAACvc,MAAZ,KAAuB,CAAvB,IAA4BwsB,KAAhC,EAAuC;EACnC,WAAK,IAAIzsB,CAAC,GAAG,CAAR,EAAWO,GAAG,GAAGksB,KAAK,CAACE,QAAN,CAAe1sB,MAArC,EAA6CD,CAAC,GAAGO,GAAjD,EAAsDP,CAAC,EAAvD,EAA2D;EACvD,YAAMwuB,KAAK,GAAG/B,KAAK,CAACE,QAAN,CAAe3sB,CAAf,KAAqB,EAAnC;EACA,YAAM+tB,MAAM,GAAGS,KAAK,CAACxvB,QAArB;;EACA,YAAI+uB,MAAJ,EAAY;EACRA,UAAAA,MAAM,CAACz1B,IAAP,CAAY,OAAZ,EAAqB4C,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBkN,CAAlB,EAAqB;EAAEuU,YAAAA,MAAM,EAAEmR;EAAV,WAArB,CAArB;EACH;EACJ;EACJ;;EACD,QAAInY,IAAI,KAAK,WAAb,EAA0B;EACtB,UAAI4G,WAAW,CAACvc,MAAhB,EAAwB;EACpBmD,QAAAA,GAAG,CAACqrB,SAAJ,CAAc,SAAd;EACH,OAHqB;;;EAKtB,UAAMC,cAAc,GAAG,EAAvB;;EACA,UAAI,KAAKjP,YAAT,EAAuB;EACnB,aAAKA,YAAL,CAAkBvH,OAAlB,CAA0B,UAAAuE,UAAU,EAAI;EACpC,cAAIkS,KAAK,GAAG,IAAZ;EACAnS,UAAAA,WAAW,CAACtE,OAAZ,CAAoB,UAAA0W,KAAK,EAAI;EACzB,gBAAInS,UAAU,KAAKmS,KAAnB,EAA0B;EACtBD,cAAAA,KAAK,GAAG,KAAR;EACH;EACJ,WAJD;;EAKA,cAAIA,KAAJ,EAAW;EACPD,YAAAA,cAAc,CAACxuB,IAAf,CAAoBuc,UAApB;EACH;EACJ,SAVD;EAWH;;EACDiS,MAAAA,cAAc,CAACxW,OAAf,CAAuB,UAAAuE,UAAU,EAAI;EACjC,YAAIA,UAAU,YAAY1kB,aAA1B,EAAsC;EAClC;EACA;EACA,cAAI0kB,UAAU,CAACK,aAAf,EAA8B;EAC1B,gBAAI,CAACL,UAAU,CAACa,MAAhB,EAAwB;EACpBb,cAAAA,UAAU,CAACljB,UAAX,GAAwB,KAAxB;EACAkjB,cAAAA,UAAU,CAACnkB,IAAX,CAAgB,UAAhB,EAA4B4C,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBkN,CAAlB,EAAqB;EAAEuU,gBAAAA,MAAM,EAAEH,UAAV;EAAsB7G,gBAAAA,IAAI,EAAE,UAA5B;EAAwCiH,gBAAAA,UAAU,EAAE;EAApD,eAArB,CAA5B;EACAJ,cAAAA,UAAU,CAACnf,YAAX;EACH;EACJ,WAND,MAMO;EACHmf,YAAAA,UAAU,CAACljB,UAAX,GAAwB,KAAxB;EACAkjB,YAAAA,UAAU,CAACnkB,IAAX,CAAgB,UAAhB,EAA4B4C,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBkN,CAAlB,EAAqB;EAAEuU,cAAAA,MAAM,EAAEH,UAAV;EAAsB7G,cAAAA,IAAI,EAAE;EAA5B,aAArB,CAA5B;EACA6G,YAAAA,UAAU,CAACnf,YAAX;EACH;EACJ;EACJ,OAhBD;EAiBAkf,MAAAA,WAAW,CAACtE,OAAZ,CAAoB,UAAAuE,UAAU,EAAI;EAC9B,YAAIA,UAAU,YAAY1kB,aAA1B,EAAsC;EAClC,cAAI,CAAC0kB,UAAU,CAACljB,UAAhB,EAA4B;EACxBkjB,YAAAA,UAAU,CAACnkB,IAAX,CAAgB,WAAhB,EAA6B4C,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBkN,CAAlB,EAAqB;EAAEuU,cAAAA,MAAM,EAAEH,UAAV;EAAsB7G,cAAAA,IAAI,EAAE,WAA5B;EAAyCiH,cAAAA,UAAU,EAAGJ,UAAU,CAACK,aAAX,GAA2BL,UAAU,CAACK,aAAX,EAA3B,GAAwD;EAA9G,aAArB,CAA7B;EACAL,YAAAA,UAAU,CAACljB,UAAX,GAAwB,IAAxB;EACH;;EACDkjB,UAAAA,UAAU,CAACnkB,IAAX,CAAgBsd,IAAhB,EAAsB1a,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBkN,CAAlB,EAAqB;EAAEuU,YAAAA,MAAM,EAAEH,UAAV;EAAsBI,YAAAA,UAAU,EAAGJ,UAAU,CAACK,aAAX,GAA2BL,UAAU,CAACK,aAAX,EAA3B,GAAwD;EAA3F,WAArB,CAAtB,EALkC;;EAOlC,cAAM+R,OAAO,GAAGpS,UAAU,CAACrf,UAAX,EAAhB;;EACA,cAAIyxB,OAAO,IAAK,CAACA,OAAO,CAAC12B,MAAzB,EAAkC;EAC9B02B,YAAAA,OAAO,CAACh3B,KAAR,CAAc4kB,UAAd;EACH;;EACDA,UAAAA,UAAU,CAACpf,WAAX,CAAuB/B,UAAvB;EACH;EACJ,OAdD;EAeH,KAnDD,MAmDO;EACHkhB,MAAAA,WAAW,CAACtE,OAAZ,CAAoB,UAAAuE,UAAU,EAAI;EAC9B,YAAIA,UAAU,YAAY1kB,aAA1B,EAAsC;EAClC0kB,UAAAA,UAAU,CAACnkB,IAAX,CAAgBsd,IAAhB,EAAsB1a,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBkN,CAAlB,EAAqB;EAAEuU,YAAAA,MAAM,EAAEH,UAAV;EAAsBI,YAAAA,UAAU,EAAGJ,UAAU,CAACK,aAAX,GAA2BL,UAAU,CAACK,aAAX,EAA3B,GAAwD;EAA3F,WAArB,CAAtB;;EACA,cAAIlH,IAAI,KAAK,OAAb,EAAsB;EAClB,gBAAMtc,UAAU,GAAGmjB,UAAU,CAAC3f,aAAX,EAAnB;;EACA,gBAAIxD,UAAU,IAAK,CAACA,UAAU,CAACnB,MAA/B,EAAwC;EACpCmB,cAAAA,UAAU,CAACzB,KAAX,CAAiB4kB,UAAjB;EACH;;EACDA,YAAAA,UAAU,CAAC1f,cAAX,CAA0BzB,UAA1B;EACH;EACJ;EACJ,OAXD;EAYH;;EACD,SAAKmkB,YAAL,GAAoBjD,WAApB;EACA,WAAO,IAAP;EACH;EAED;;;;;WAGA4Q,+BAAW;EACP,QAAMX,KAAK,GAAG,KAAKC,QAAL,EAAd;;EACA,QAAI,CAACD,KAAL,EAAY;EACR;EACH;;EACD,QAAMzB,IAAI,GAAG,KAAK5vB,MAAL,GAAc0zB,OAAd,EAAb;EACArC,IAAAA,KAAK,CAACE,QAAN,CAAezU,OAAf,CAAuB,UAAA2T,IAAI,EAAI;EAC3B,UAAMkC,MAAM,GAAGlC,IAAI,CAAC7sB,QAApB;;EACA,UAAI+uB,MAAM,IAAIA,MAAM,CAACnzB,UAArB,EAAiC;EAC7B,YAAMhC,OAAO,GAAGm1B,MAAM,CAACzvB,UAAP,EAAhB;EAAA,YAAqCzF,OAAO,GAAGk1B,MAAM,CAACxvB,UAAP,EAA/C;;EACA,YAAI,CAACysB,IAAI,GAAGpyB,OAAP,IAAkBoyB,IAAI,GAAGnyB,OAA1B,KAAsCk1B,MAAM,CAAC3xB,SAAP,EAA1C,EAA8D;EAC1D2xB,UAAAA,MAAM,CAAC5xB,IAAP;EACH,SAFD,MAEO,IAAIvD,OAAO,IAAIoyB,IAAX,IAAmBA,IAAI,IAAInyB,OAA3B,IAAuC,CAACk1B,MAAM,CAAC3xB,SAAP,EAA5C,EAAiE;EACpE2xB,UAAAA,MAAM,CAAC9xB,IAAP;EACH;EACJ;EACJ,KAVD;EAWH;;WAGD5D,yBAAQ;EAAA;;EACJ,oCAAMA,KAAN;;EACA,QAAM+K,GAAG,GAAG,KAAKA,GAAL,IAAY,KAAKhI,MAAL,EAAxB;EACA,QAAI,CAACgI,GAAL,EAAU,OAAO,IAAP;EACViZ,IAAAA,QAAM,CAACnE,OAAP,CAAe,UAAA6W,KAAK,EAAI;EACpB3rB,MAAAA,GAAG,CAACpL,EAAJ,CAAO+2B,KAAP,EAAc,MAAI,CAACT,yBAAnB,EAA8C,MAA9C;EACH,KAFD;EAGA,SAAKU,YAAL,GAAoB,IAApB;;EACA,QAAI,CAAC,KAAK9B,uBAAV,EAAmC;EAC/B,WAAKA,uBAAL,GAA+B,EAA/B;EACH;;EACD9pB,IAAAA,GAAG,CAACpL,EAAJ,CAAO,iBAAP,EAA0B,KAAKo1B,QAA/B,EAAyC,IAAzC;EACA,WAAO,IAAP;EACH;;WAED6B,+BAAW;EAAA;;EACP,oCAAMA,QAAN;;EACA,QAAM7rB,GAAG,GAAG,KAAKA,GAAL,IAAY,KAAKhI,MAAL,EAAxB;EACA,QAAI,CAACgI,GAAL,EAAU,OAAO,IAAP;EACViZ,IAAAA,QAAM,CAACnE,OAAP,CAAe,UAAA6W,KAAK,EAAI;EACpB3rB,MAAAA,GAAG,CAACuR,GAAJ,CAAQoa,KAAR,EAAe,MAAI,CAACT,yBAApB,EAA+C,MAA/C;EACH,KAFD;EAGAlrB,IAAAA,GAAG,CAACuR,GAAJ,CAAQ,iBAAR,EAA2B,KAAKyY,QAAhC,EAA0C,IAA1C;EACA,WAAO,IAAP;EACH;;WAED8B,uEAA+B;EAC3B,QAAMt1B,KAAK,GAAG,IAAd;;EACA,QAAIA,KAAK,CAACszB,uBAAV,EAAmC;EAC/B,WAAK,IAAIC,IAAT,IAAiBvzB,KAAK,CAACszB,uBAAvB,EAAgD;EAC5C,YAAMzQ,UAAU,GAAG7iB,KAAK,CAACszB,uBAAN,CAA8BC,IAA9B,CAAnB;;EACA1Q,QAAAA,UAAU,CAACL,UAAX;EACH;EACJ;;EACD,WAAO,IAAP;EACH;EAED;;;;;;;;WAMA+S,uCAAe;EACX,QAAM/rB,GAAG,GAAG,KAAKhI,MAAL,EAAZ;EACA,QAAMg0B,GAAG,GAAGhsB,GAAG,CAACisB,MAAJ,EAAZ;EACA,WAAOntB,IAAI,CAAC8F,GAAL,CAASonB,GAAG,GAAG,CAAN,GAAU7E,MAAnB,CAAP;EACH;;;IAjpBoB/xB;;EAopBzBqB,UAAU,CAACy1B,YAAX,CAAwBl2B,OAAxB;;MAEMm2B;;;;;;;;;;;YAEFC,+CAAmB;EACf,WAAO,CAAC,KAAK/C,KAAN,EAAa,KAAK3M,MAAlB,CAAP;EACH;;YAED2P,yCAAgB;EACZ,WAAO,CAAC,KAAKhD,KAAN,EAAa,KAAK3M,MAAlB,CAAP;EACH;;YAED4P,mCAAa;EACT,oCAAMA,UAAN,CAAiBC,KAAjB,CAAuB,IAAvB,EAA6BC,SAA7B,EADS;;EAGZ;;YAEDC,iCAAY;EACR,WAAO,KAAP;EACH;;YAEDC,uCAAe;EACX,oCAAMA,YAAN;;EACA,SAAKC,aAAL;EACH;;YAEDA,yCAAgB;EACZ,QAAI,KAAK3L,MAAL,CAAY4L,EAAZ,IAAkB,KAAK5L,MAAL,CAAY4L,EAAZ,CAAeC,IAArC,EAA2C;EACvC,WAAKD,EAAL,GAAU,KAAK5L,MAAL,CAAY4L,EAAZ,CAAeC,IAAf,EAAV;EACH,KAFD,MAEO;EACH,UAAMr2B,KAAK,GAAG,KAAKA,KAAnB;EACA,UAAMmG,UAAU,GAAGnG,KAAK,CAACR,OAAN,CAAc82B,SAAd,IAA2B;EAC1CC,QAAAA,KAAK,EAAE,IADmC;EAE1CjgB,QAAAA,KAAK,EAAE,IAFmC;EAG1CkgB,QAAAA,SAAS,EAAE,IAH+B;EAI1CC,QAAAA,OAAO,EAAE;EAJiC,OAA9C;EAMAtwB,MAAAA,UAAU,CAACuwB,qBAAX,GAAmC,IAAnC;EACA,WAAKN,EAAL,GAAU,KAAKA,EAAL,IAAW,KAAKO,gBAAL,CAAsB,KAAKnM,MAA3B,EAAmCrkB,UAAnC,CAArB;EACH;;EACD,SAAKywB,kBAAL;;EACA,SAAK52B,KAAL,CAAW62B,cAAX,CAA0B,KAAK3D,OAA/B,EAAwC,KAAKL,KAA7C,EAAoD,KAAK3M,MAAzD;EACH;;YAED0Q,mDAAqB;EACjB,QAAM9H,QAAQ,GAAG,IAAIlsB,mBAAJ,CAAwB;EAAE,iBAAW,KAAKwzB,EAAlB;EAAsBG,MAAAA,KAAK,EAAE;EAA7B,KAAxB,CAAjB;EACAzH,IAAAA,QAAQ,CAACgI,SAAT,GAAqB,KAArB;EACAhI,IAAAA,QAAQ,CAACiI,aAAT,CAAuB,IAAIn0B,WAAJ,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAAvB,EAAiD,CAAjD;EACAksB,IAAAA,QAAQ,CAACkI,OAAT,CAAiB,KAAKxM,MAAL,CAAYtT,KAA7B,EAAoC,KAAKsT,MAAL,CAAYxiB,MAAhD;EACA8mB,IAAAA,QAAQ,CAACmI,KAAT;EACAnI,IAAAA,QAAQ,CAACtE,MAAT,GAAkB,KAAKA,MAAvB;EACA,SAAK0I,OAAL,GAAepE,QAAf;EAEA,QAAM+D,KAAK,GAAG,KAAKA,KAAL,GAAa,IAAIjwB,WAAJ,EAA3B;EACA,QAAM4G,GAAG,GAAG,KAAKxJ,KAAL,CAAWwB,MAAX,EAAZ;EACA,QAAMg0B,GAAG,GAAGhsB,GAAG,CAACisB,MAAJ,KAAentB,IAAI,CAACC,EAApB,GAAyB,GAArC;EACA,QAAM2d,MAAM,GAAG,KAAKA,MAAL,GAAc,IAAItjB,uBAAJ,CAA4B4yB,GAA5B,EAAiChsB,GAAG,CAAC0N,KAAJ,GAAY1N,GAAG,CAACxB,MAAjD,EAAyDwB,GAAG,CAAC0tB,UAA7D,EAAyE1tB,GAAG,CAAC2tB,SAA7E,CAA7B;EACAjR,IAAAA,MAAM,CAACkR,gBAAP,GAA0B,KAA1B;;EACA,SAAKC,WAAL;;EACAxE,IAAAA,KAAK,CAAC7S,GAAN,CAAUkG,MAAV;EACH;;YAED2Q,2CAAiB;EACb,oCAAMA,cAAN;EAEH;;YAEDS,qCAAaC,YAAY;EACrB,QAAI,CAAC,KAAK/M,MAAV,EAAkB;EACd;EACH;;EACD,QAAI/R,IAAJ;;EACA,QAAI,CAAC8e,UAAL,EAAiB;EACb9e,MAAAA,IAAI,GAAG,KAAKjX,MAAL,GAAcmlB,OAAd,EAAP;EACH,KAFD,MAEO;EACHlO,MAAAA,IAAI,GAAG8e,UAAP;EACH;;EACD,QAAMruB,CAAC,GAAGtK,gBAAA,CAAiB44B,MAAjB,GAA0B,CAA1B,GAA8B,CAAxC;EACA,QAAMhN,MAAM,GAAG,KAAKA,MAApB,CAXqB;;EAarBA,IAAAA,MAAM,CAACxiB,MAAP,GAAgBkB,CAAC,GAAGuP,IAAI,CAAC,QAAD,CAAxB;EACA+R,IAAAA,MAAM,CAACtT,KAAP,GAAehO,CAAC,GAAGuP,IAAI,CAAC,OAAD,CAAvB;EACA,SAAKya,OAAL,CAAa8D,OAAb,CAAqBxM,MAAM,CAACtT,KAA5B,EAAmCsT,MAAM,CAACxiB,MAA1C;EACH;;YAEDyvB,qCAAc;EACV,QAAI,CAAC,KAAKjN,MAAV,EAAkB;EACd;EACH;;EAED,SAAK0I,OAAL,CAAa+D,KAAb;EACH;;YAEDS,yCAAgB;EACZ,QAAI,CAAC,KAAKlN,MAAV,EAAkB;EACd,WAAK0L,YAAL;EACH,KAFD,MAEO;EACH,WAAKuB,WAAL;EACH;;EACD,SAAKz3B,KAAL,CAAWtB,IAAX,CAAgB,aAAhB,EAA+B;EAAE,iBAAW,KAAKw0B;EAAlB,KAA/B;EACA,WAAO,IAAP;EACH;;YAEDnC,qCAAc;EACV,SAAK/wB,KAAL,CAAWs1B,4BAAX;;EACA,SAAK+B,WAAL;;EACA,SAAKnE,OAAL,CAAaG,MAAb,CAAoB,KAAKR,KAAzB,EAAgC,KAAK3M,MAArC;EACA,SAAKyR,cAAL;EACH;;YAEDt3B,2BAAS;EACL,WAAO,KAAKu3B,YAAZ;;EACA,oCAAMv3B,MAAN;EACH;;YAEDg3B,qCAAc;EACV,QAAM7tB,GAAG,GAAG,KAAKhI,MAAL,EAAZ;EACA,QAAM0kB,MAAM,GAAG,KAAKA,MAApB;EACAA,IAAAA,MAAM,CAAC2R,MAAP,CAAcC,QAAd,GAAyBtuB,GAAG,CAACuuB,iBAA7B;EACA7R,IAAAA,MAAM,CAAC8R,gBAAP,CAAwBF,QAAxB,GAAmCtuB,GAAG,CAACyuB,UAAvC;EACA/R,IAAAA,MAAM,CAACgS,uBAAP,CAA+BJ,QAA/B,GAA0CjH,OAAO,CAACsH,UAAR,CAAmBjS,MAAM,CAAC8R,gBAA1B,EAA4CF,QAAtF;EACH;;YAEDnB,6CAAiBnM,QAAQhrB,SAAS;EAC9B,QAAM44B,KAAK,GAAG,CAAC,OAAD,EAAU,oBAAV,CAAd;EACA,QAAIlF,OAAO,GAAG,IAAd;EACA;;EACA,SAAK,IAAI9sB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgyB,KAAK,CAAC/xB,MAA1B,EAAkC,EAAED,CAApC,EAAuC;EACnC,UAAI;EACA8sB,QAAAA,OAAO,GAAG1I,MAAM,CAACM,UAAP,CAAkBsN,KAAK,CAAChyB,CAAD,CAAvB,EAA4B5G,OAA5B,CAAV;EACH,OAFD,CAEE,OAAOiP,CAAP,EAAU;;EACZ,UAAIykB,OAAJ,EAAa;EACT;EACH;EACJ;;EACD,WAAOA,OAAP;EACA;EACH;;;IAvIuBt0B,iBAAA,CAAkBy5B;;EA0I9Cp4B,UAAU,CAACq4B,gBAAX,CAA4B,IAA5B,EAAkC3C,aAAlC;;EAEA,SAASzE,aAAT,CAAuB1nB,GAAvB,EAA4B;EACxB,SAAOA,GAAG,CAAC+uB,SAAJ,EAAP;EACH;;;;;;;;;;;;;;;;;;"}