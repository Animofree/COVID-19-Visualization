{"remainingRequest":"C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization-master\\www\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization-master\\www\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization-master\\www\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization-master\\www\\src\\js\\lines3D.js","dependencies":[{"path":"C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization-master\\www\\src\\js\\lines3D.js","mtime":1584631036000},{"path":"C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization-master\\www\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization-master\\www\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization-master\\www\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization-master\\www\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Meng Yin/Desktop/COVID-19-Visualization-master/www/src/js/lines3D.js"],"names":["maptalks","THREE","ThreeLayer","BaseObject","InitBloom","threeLayer","loadLines3D","map","data","labelMeshes","getLayer","remove","forceRenderOnMoving","forceRenderOnRotating","prepareToDraw","gl","scene","light","DirectionalLight","position","set","normalize","add","initBloom","setRendererRenderScene","features","forEach","g","name","properties","length","labelMaterial","getMaterial","label","Circle","cp","len","push","addMesh","addLines","addTo","translate","geojson","geometry","type","coordinates","cache","Set","c","j","has","join","d","date","baseLineMaterial","LineBasicMaterial","linewidth","color","blending","AdditiveBlending","transparent","lineStrings","GeoJSON","toGeometry","baseLines","line","toLine","getObject3d","layers","enable","addExtrudeLine","material","MeshBasicMaterial","highlightmaterial","lines","toExtrudeLine","altitude","width","height","lineTrails","toExtrudeLineTrail","chunkLength","speed","trail","animation","fontSize","text","SIZE","canvas","document","createElement","ctx","getContext","gradient","createLinearGradient","addColorStop","strokeStyle","font","textAlign","textBaseline","fillStyle","fillText","texture","Texture","needsUpdate","MeshPhongMaterial","side","FrontSide","OPTIONS","coordinate","options","layer","Util","extend","_initOptions","PlaneGeometry","_createMesh","coordinateToVector3","copy","cb","_showPlayer","cancel","isFunction","duration","easing","player","Animation","animate","frame","scale","styles","play","_needsUpdate","getRenderer","clearCanvas","renderScene","requestAnimationFrame"],"mappings":"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","sourcesContent":["import * as maptalks from 'maptalks';\nimport * as THREE from \"three\";\nimport { ThreeLayer, BaseObject } from 'maptalks.three';\nimport { InitBloom } from \"./bloom\";\n\n\nlet threeLayer;\n\nfunction loadLines3D (map, data) {\n    var labelMeshes = [];\n    if (map.getLayer('lines')) threeLayer.remove();\n    threeLayer = new ThreeLayer('lines', {\n        forceRenderOnMoving: true, forceRenderOnRotating: true\n    });\n\n    threeLayer.prepareToDraw = function (gl, scene) {\n        var light = new THREE.DirectionalLight(0xffffff);\n        light.position.set(0, -10, 10).normalize();\n        scene.add(light);\n        \n        this.initBloom();\n        this.setRendererRenderScene();\n\n        data.features.forEach(function (g) {\n            // if (g.geometry.type == \"MultiPolygon\") return;\n            let name = g.properties.name;\n            if (name.length < 5) name += \"   \"\n            let labelMaterial = getMaterial(50, name);\n            let label = new Circle(g.properties.cp, {\n                len: name.length\n            }, labelMaterial, threeLayer);\n            labelMeshes.push(label);\n        });\n        threeLayer.addMesh(labelMeshes);\n        addLines(data);\n    };\n    threeLayer.addTo(map);\n    InitBloom();\n}\n\n// Polygon to LineString\nfunction translate (data) {\n    let geojson = {\"features\": [], \"type\": \"FeatureCollection\"};\n    data.features.forEach((g) => {\n        // TODO: 处理MultiPolygon\n        if (g.geometry.type == \"MultiPolygon\") return;\n        // 框架有一个奇葩的BUG，坐标点序列中不能有连续相同的点，在此简单去重。\n        let coordinates = [];\n        let cache = new Set();\n        g.geometry.coordinates[0].forEach((c, j) => {\n            if (!cache.has(c.join(\"_\"))) {\n                if (j > 0) cache.add(c.join(\"_\"))\n                coordinates.push(c);\n            }\n        });\n        let d = {\n            \"type\": \"Feature\",\n            \"properties\": {\n                \"name\": g.properties.name, \n                \"date\": g.properties.date\n            },\n            \"geometry\": {\"type\": \"LineString\", \"coordinates\": coordinates}\n        }\n        geojson.features.push(d);\n    })\n    return geojson;\n}\n\nfunction addLines(data) {\n    var baseLineMaterial = new THREE.LineBasicMaterial({\n        linewidth: 1,\n        color: 'rgb(255,90,0)',\n        // opacity: 0.5,\n        blending: THREE.AdditiveBlending,\n        transparent: true\n    });\n    let geojson = translate(data);\n    var lineStrings = maptalks.GeoJSON.toGeometry(geojson);\n    let baseLines = lineStrings.map(function (d) {\n        var line = threeLayer.toLine(d, {}, baseLineMaterial);\n        line.getObject3d().layers.enable(1);\n        return line;\n    });\n    threeLayer.addMesh(baseLines);\n\n    addExtrudeLine(lineStrings);\n}\n\n\nfunction addExtrudeLine(lineStrings) {\n    var material = new THREE.MeshBasicMaterial({\n        color: 'rgb(255,45,0)', transparent: true, blending: THREE.AdditiveBlending\n    });\n    var highlightmaterial = new THREE.MeshBasicMaterial({ color: '#ffffff', transparent: true });\n    var lines = [];\n    lineStrings.forEach((d) => {\n        let line = threeLayer.toExtrudeLine(d, { altitude: 0, width: 10, height: 50 }, material);\n        line.getObject3d().layers.enable(1);\n        lines.push(line);\n    });\n    let lineTrails = [];\n    lineStrings.forEach((d) => {\n        var line = threeLayer.toExtrudeLineTrail(d, { altitude: 0, width: 10, height: 30, chunkLength: 50, speed: 1, trail: 6 }, highlightmaterial);\n        line.getObject3d().layers.enable(1);\n        lineTrails.push(line);\n    });\n    threeLayer.addMesh(lines);\n    threeLayer.addMesh(lineTrails);\n    animation();\n}\n\nfunction getMaterial(fontSize, text) {\n    var SIZE = 400;\n    var canvas = document.createElement('canvas');\n    canvas.width = SIZE;\n    canvas.height = 16 * text.length;\n    var ctx = canvas.getContext('2d');\n    var gradient = ctx.createLinearGradient(0, 0, SIZE, 0);\n    // gradient.addColorStop(\"0\", \"#ffffff\");\n    gradient.addColorStop(\"0.0\", \"#ff0000\");\n    gradient.addColorStop(\"1.0\", \"#ff0000\");\n    // gradient.addColorStop(\"0.66\", \"white\");\n    // gradient.addColorStop(\"1.0\", \"red\");\n\n    ctx.strokeStyle = gradient;\n    // ctx.lineWidth = 20;\n    ctx.font = `${fontSize}px Aria`;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'top';\n    ctx.fillStyle = \"#f00\";\n    ctx.fillText(text, 5, 10);\n    // ctx.rect(0, 0, SIZE * 3, SIZE);\n    var texture = new THREE.Texture(canvas);\n    texture.needsUpdate = true; //使用贴图时进行更新\n\n    var material = new THREE.MeshPhongMaterial({\n        map: texture,\n        side: THREE.FrontSide,\n        transparent: false\n    });\n    return material;\n}\n\nvar OPTIONS = {\n    len: 4,\n    altitude: 0\n};\n\nclass Circle extends BaseObject {\n    constructor(coordinate, options, material, layer) {\n        options = maptalks.Util.extend({}, OPTIONS, options, { layer, coordinate });\n        super();\n        //Initialize internal configuration\n        // https://github.com/maptalks/maptalks.three/blob/1e45f5238f500225ada1deb09b8bab18c1b52cf2/src/BaseObject.js#L135\n        this._initOptions(options);\n        // const { altitude } = options;\n        // debugger\n        //generate geometry\n        // const r = layer.distanceToVector3(radius, radius).x\n        const geometry = new THREE.PlaneGeometry(options.len * 1.5, 4.5);\n\n        //Initialize internal object3d\n        // https://github.com/maptalks/maptalks.three/blob/1e45f5238f500225ada1deb09b8bab18c1b52cf2/src/BaseObject.js#L140\n        this._createMesh(geometry, material);\n\n        //set object3d position\n        // const z = layer.distanceToVector3(altitude, altitude).x;\n        const position = layer.coordinateToVector3(coordinate, 0);\n        this.getObject3d().position.copy(position);\n        // this.getObject3d().rotation.x = -Math.PI;\n    }\n    /**\n     * animateShow test\n     * \n     * */\n    animateShow(options = {}, cb) {\n        if (this._showPlayer) {\n            this._showPlayer.cancel();\n        }\n        if (maptalks.Util.isFunction(options)) {\n            options = {};\n            cb = options;\n        }\n        const duration = options['duration'] || 1000,\n            easing = options['easing'] || 'out';\n        const player = this._showPlayer = maptalks.animation.Animation.animate({\n            'scale': 1\n        }, {\n            'duration': duration,\n            'easing': easing\n        }, frame => {\n            const scale = frame.styles.scale;\n            if (scale > 0) {\n                this.getObject3d().scale.set(scale, scale, scale);\n            }\n            if (cb) {\n                cb(frame, scale);\n            }\n        });\n        player.play();\n        return player;\n    }\n}\n\nfunction animation() {\n    // layer animation support Skipping frames\n    threeLayer._needsUpdate = !threeLayer._needsUpdate;\n    if (threeLayer._needsUpdate) {\n        threeLayer.getRenderer().clearCanvas();\n        threeLayer.renderScene();\n    }\n    requestAnimationFrame(animation);\n}\n\n\nexport {loadLines3D};"]}]}