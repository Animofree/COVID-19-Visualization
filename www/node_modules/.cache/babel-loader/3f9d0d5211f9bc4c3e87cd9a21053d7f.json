{"remainingRequest":"C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization-master\\www\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization-master\\www\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization-master\\www\\src\\js\\libs\\LuminosityHighPassShader.js","dependencies":[{"path":"C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization-master\\www\\src\\js\\libs\\LuminosityHighPassShader.js","mtime":1584631036000},{"path":"C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization-master\\www\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization-master\\www\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization-master\\www\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CgovKioKICogQGF1dGhvciBiaG91c3RvbiAvIGh0dHA6Ly9jbGFyYS5pby8KICoKICogTHVtaW5vc2l0eQogKiBodHRwOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0x1bWlub3NpdHkKICovCmltcG9ydCAqIGFzIFRIUkVFIGZyb20gInRocmVlIjsKVEhSRUUuTHVtaW5vc2l0eUhpZ2hQYXNzU2hhZGVyID0gewogIHNoYWRlcklEOiAibHVtaW5vc2l0eUhpZ2hQYXNzIiwKICB1bmlmb3JtczogewogICAgInREaWZmdXNlIjogewogICAgICB2YWx1ZTogbnVsbAogICAgfSwKICAgICJsdW1pbm9zaXR5VGhyZXNob2xkIjogewogICAgICB2YWx1ZTogMS4wCiAgICB9LAogICAgInNtb290aFdpZHRoIjogewogICAgICB2YWx1ZTogMS4wCiAgICB9LAogICAgImRlZmF1bHRDb2xvciI6IHsKICAgICAgdmFsdWU6IG5ldyBUSFJFRS5Db2xvcigweDAwMDAwMCkKICAgIH0sCiAgICAiZGVmYXVsdE9wYWNpdHkiOiB7CiAgICAgIHZhbHVlOiAwLjAKICAgIH0KICB9LAogIHZlcnRleFNoYWRlcjogWyJ2YXJ5aW5nIHZlYzIgdlV2OyIsICJ2b2lkIG1haW4oKSB7IiwgInZVdiA9IHV2OyIsICJnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiBtb2RlbFZpZXdNYXRyaXggKiB2ZWM0KCBwb3NpdGlvbiwgMS4wICk7IiwgIn0iXS5qb2luKCJcbiIpLAogIGZyYWdtZW50U2hhZGVyOiBbInVuaWZvcm0gc2FtcGxlcjJEIHREaWZmdXNlOyIsICJ1bmlmb3JtIHZlYzMgZGVmYXVsdENvbG9yOyIsICJ1bmlmb3JtIGZsb2F0IGRlZmF1bHRPcGFjaXR5OyIsICJ1bmlmb3JtIGZsb2F0IGx1bWlub3NpdHlUaHJlc2hvbGQ7IiwgInVuaWZvcm0gZmxvYXQgc21vb3RoV2lkdGg7IiwgInZhcnlpbmcgdmVjMiB2VXY7IiwgInZvaWQgbWFpbigpIHsiLCAidmVjNCB0ZXhlbCA9IHRleHR1cmUyRCggdERpZmZ1c2UsIHZVdiApOyIsICJ2ZWMzIGx1bWEgPSB2ZWMzKCAwLjI5OSwgMC41ODcsIDAuMTE0ICk7IiwgImZsb2F0IHYgPSBkb3QoIHRleGVsLnh5eiwgbHVtYSApOyIsICJ2ZWM0IG91dHB1dENvbG9yID0gdmVjNCggZGVmYXVsdENvbG9yLnJnYiwgZGVmYXVsdE9wYWNpdHkgKTsiLCAiZmxvYXQgYWxwaGEgPSBzbW9vdGhzdGVwKCBsdW1pbm9zaXR5VGhyZXNob2xkLCBsdW1pbm9zaXR5VGhyZXNob2xkICsgc21vb3RoV2lkdGgsIHYgKTsiLCAiZ2xfRnJhZ0NvbG9yID0gbWl4KCBvdXRwdXRDb2xvciwgdGV4ZWwsIGFscGhhICk7IiwgIn0iXS5qb2luKCJcbiIpCn07CnZhciBMdW1pbm9zaXR5SGlnaFBhc3NTaGFkZXIgPSBUSFJFRS5MdW1pbm9zaXR5SGlnaFBhc3NTaGFkZXI7CmV4cG9ydCBkZWZhdWx0IEx1bWlub3NpdHlIaWdoUGFzc1NoYWRlcjs="},{"version":3,"sources":["C:/Users/Meng Yin/Desktop/COVID-19-Visualization-master/www/src/js/libs/LuminosityHighPassShader.js"],"names":["THREE","LuminosityHighPassShader","shaderID","uniforms","value","Color","vertexShader","join","fragmentShader"],"mappings":";;AAAA;;;;;;AAMA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEAA,KAAK,CAACC,wBAAN,GAAiC;AAE/BC,EAAAA,QAAQ,EAAE,oBAFqB;AAIhCC,EAAAA,QAAQ,EAAE;AAET,gBAAY;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAFH;AAGT,2BAAuB;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAHd;AAIT,mBAAe;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAJN;AAKT,oBAAgB;AAAEA,MAAAA,KAAK,EAAE,IAAIJ,KAAK,CAACK,KAAV,CAAiB,QAAjB;AAAT,KALP;AAMT,sBAAmB;AAAED,MAAAA,KAAK,EAAE;AAAT;AANV,GAJsB;AAchCE,EAAAA,YAAY,EAAE,CAEb,mBAFa,EAIb,eAJa,EAMZ,WANY,EAQZ,2EARY,EAUb,GAVa,EAYZC,IAZY,CAYP,IAZO,CAdkB;AA4BhCC,EAAAA,cAAc,EAAE,CAEf,6BAFe,EAGf,4BAHe,EAIf,+BAJe,EAKf,oCALe,EAMf,4BANe,EAQf,mBARe,EAUf,eAVe,EAYd,0CAZc,EAcd,0CAdc,EAgBd,mCAhBc,EAkBd,8DAlBc,EAoBd,wFApBc,EAsBd,kDAtBc,EAwBf,GAxBe,EA0BdD,IA1Bc,CA0BT,IA1BS;AA5BgB,CAAjC;AA0DA,IAAIN,wBAAwB,GAAGD,KAAK,CAACC,wBAArC;AACA,eAAeA,wBAAf","sourcesContent":["/**\n * @author bhouston / http://clara.io/\n *\n * Luminosity\n * http://en.wikipedia.org/wiki/Luminosity\n */\nimport * as THREE from \"three\";\n\nTHREE.LuminosityHighPassShader = {\n\n  shaderID: \"luminosityHighPass\",\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"luminosityThreshold\": { value: 1.0 },\n\t\t\"smoothWidth\": { value: 1.0 },\n\t\t\"defaultColor\": { value: new THREE.Color( 0x000000 ) },\n\t\t\"defaultOpacity\":  { value: 0.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform vec3 defaultColor;\",\n\t\t\"uniform float defaultOpacity;\",\n\t\t\"uniform float luminosityThreshold;\",\n\t\t\"uniform float smoothWidth;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\n\t\t\t\"vec3 luma = vec3( 0.299, 0.587, 0.114 );\",\n\n\t\t\t\"float v = dot( texel.xyz, luma );\",\n\n\t\t\t\"vec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );\",\n\n\t\t\t\"float alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\",\n\n\t\t\t\"gl_FragColor = mix( outputColor, texel, alpha );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\")\n\n};\n\nlet LuminosityHighPassShader = THREE.LuminosityHighPassShader;\nexport default LuminosityHighPassShader;"]}]}