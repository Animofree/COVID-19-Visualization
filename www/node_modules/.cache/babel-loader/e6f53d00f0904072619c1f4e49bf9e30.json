{"remainingRequest":"C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization\\www\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization\\www\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization\\www\\src\\js\\map.js","dependencies":[{"path":"C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization\\www\\src\\js\\map.js","mtime":1584631036000},{"path":"C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization\\www\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization\\www\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization\\www\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCB7IFV0aWxzIH0gZnJvbSAiLi91dGlscyI7CmltcG9ydCB7IEFQSSB9IGZyb20gIi4vc2VydmVyIjsKaW1wb3J0IHsgTUFQUyB9IGZyb20gJy4vbWFwcyc7CmltcG9ydCB7IGdldEluZm8gfSBmcm9tICIuL2J1aWxkaW5nIjsKaW1wb3J0ICogYXMgbWFwdGFsa3MgZnJvbSAnbWFwdGFsa3MnOwp2YXIgUE9MWUdPTiA9IHsKICAiUG9seWdvbiI6IDEsCiAgIk11bHRpUG9seWdvbiI6IDEKfTsKdmFyIEdSQVBIUyA9IHsKICAnUG9seWdvbic6IG1hcHRhbGtzLlBvbHlnb24sCiAgJ011bHRpUG9seWdvbic6IG1hcHRhbGtzLk11bHRpUG9seWdvbgp9Owp2YXIgTWFwQ3RsID0gewogICR0aGlzOiBudWxsLAogIG1hcFR5cGU6IHsKICAgIG1hcDogIkdhb2RlIiwKICAgIC8vICBCYWlkdSBPcGVuU3RyZWV0TWFwICBNYXBib3ggIEdhb2RlCiAgICB0eXBlOiAiMSIKICB9LAogIG1hcENvbmZpZzogewogICAgY2VudGVyOiBbMTA0LjA3MTkyNywgMzAuNjY1MTMyXSwKICAgIHpvb206IDE0LAogICAgcGl0Y2g6IDUyLAogICAgYmFzZUxheWVyOiBudWxsCiAgfSwKICBpbml0OiBmdW5jdGlvbiBpbml0KHRoYXQpIHsKICAgIHRoaXMuJHRoaXMgPSB0aGF0OwogIH0sCiAgZ2V0QmFzZTogZnVuY3Rpb24gZ2V0QmFzZSgpIHsKICAgIC8vIOS7jue8k+WtmOWKoOi9veWcsOWbvgogICAgdmFyIG1hcFN0eWxlID0gVXRpbHMuZ2V0Q29va2llKCJtYXBTdHlsZSIpOwoKICAgIGlmIChtYXBTdHlsZSkgewogICAgICB2YXIgcHMgPSBtYXBTdHlsZS5zcGxpdCgiXyIpOwogICAgICB0aGlzLm1hcFR5cGUgPSB7CiAgICAgICAgbWFwOiBwc1swXSwKICAgICAgICB0eXBlOiBwc1sxXQogICAgICB9OwogICAgICB0aGlzLm1hcFR5cGVzID0gbWFwU3R5bGU7CiAgICB9CgogICAgdmFyIHRpbGUgPSBNQVBTW3RoaXMubWFwVHlwZS5tYXBdOwogICAgdmFyIGJhc2UgPSB7CiAgICAgIHVybFRlbXBsYXRlOiBwYXJzZUludCh0aGlzLm1hcFR5cGUudHlwZSkgPyB0aWxlLndlaXhpbmcgOiB0aWxlLnVybFRlbXBsYXRlLAogICAgICBzdWJkb21haW5zOiB0aWxlLnN1YmRvbWFpbnMsCiAgICAgIGF0dHJpYnV0aW9uOiB0aWxlLmF0dHJpYnV0aW9uLAogICAgICBvcGFjaXR5OiAxLAogICAgICBzcGF0aWFsUmVmZXJlbmNlOiB0aWxlWydzcGF0aWFsUmVmZXJlbmNlJ10gfHwgbnVsbAogICAgfTsgLy8g6auY5b63MuWbvuS9v+eUqOaal+iJsuezuwoKICAgIGlmICh0aGlzLm1hcFR5cGUubWFwID09PSAiR2FvZGUiICYmIHRoaXMubWFwVHlwZS50eXBlID09ICIxIikgewogICAgICBiYXNlWydjc3NGaWx0ZXInXSA9ICdzZXBpYSg4MCUpIGludmVydCg5MCUpJzsKICAgIH0KCiAgICByZXR1cm4gYmFzZTsKICB9LAogIGdldENvbmZpZzogZnVuY3Rpb24gZ2V0Q29uZmlnKGJhc2UpIHsKICAgIGJhc2UgPSBiYXNlIHx8IHRoaXMuZ2V0QmFzZSgpOwogICAgdGhpcy5tYXBDb25maWcuYmFzZUxheWVyID0gbmV3IG1hcHRhbGtzLlRpbGVMYXllcignYmFzZScsIGJhc2UpOyAvLyDku47nvJPlrZjliqDovb3lnLDlm77kv6Hmga8KCiAgICB2YXIgbWFwSW5mbyA9IFV0aWxzLmdldENvb2tpZSgnbWFwSW5mbycpOwoKICAgIGlmIChtYXBJbmZvICYmIG1hcEluZm8gIT09ICd1bmRlZmluZWQnKSB7CiAgICAgIHZhciBwcyA9IG1hcEluZm8uc3BsaXQoIl8iKTsKICAgICAgdGhpcy5tYXBDb25maWcuY2VudGVyID0gW3BhcnNlRmxvYXQocHNbMF0pLCBwYXJzZUZsb2F0KHBzWzFdKV07CiAgICAgIHRoaXMubWFwQ29uZmlnLnpvb20gPSBwYXJzZUludChwc1syXSk7CiAgICB9IC8vIOaYr+WQpuS9v+eUqOinhuinkuWAvuaWnAoKCiAgICBpZiAodGhpcy5tYXBUeXBlLm1hcCA9PT0gIkdhb2RlIiAmJiB0aGlzLm1hcFR5cGUudHlwZSA9PSAiMCIpIHRoaXMubWFwQ29uZmlnLnBpdGNoID0gMDtlbHNlIHRoaXMubWFwQ29uZmlnLnBpdGNoID0gNTI7CiAgICByZXR1cm4gdGhpcy5tYXBDb25maWc7CiAgfSwKICBoYW5kbGVNYXBNb3ZlOiBmdW5jdGlvbiBoYW5kbGVNYXBNb3ZlKHApIHsKICAgIGNvbnNvbGUubG9nKDEpOyAvLyDorrDlvZXnlKjmiLfljoblj7LkvY3nva4KCiAgICB2YXIgbWFwID0gcC50YXJnZXQ7CiAgICB2YXIgY2VudGVyID0gbWFwLmdldENlbnRlcigpOwogICAgdmFyIGluZm8gPSBbY2VudGVyLngsIGNlbnRlci55LCBtYXAuZ2V0Wm9vbSgpXS5qb2luKCJfIik7CiAgICBVdGlscy5zZXRDb29raWUoJ21hcEluZm8nLCBpbmZvKTsKICB9LAogIGxvYWREYXRhOiBmdW5jdGlvbiBsb2FkRGF0YShjb2RlLCBjYWxsYmFjaykgewogICAgVXRpbHMuYWpheERhdGEoQVBJLkdldERhdGFQb3MsIHsKICAgICAgJ2NvZGUnOiBjb2RlCiAgICB9LCBmdW5jdGlvbiAocnN0KSB7CiAgICAgIHZhciBmZWF0dXJlcyA9IFtdOwogICAgICByc3QuZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgaWYgKCEoZFsxXSBpbiBQT0xZR09OKSkgcmV0dXJuOwogICAgICAgIHZhciBnID0gewogICAgICAgICAgInR5cGUiOiAiRmVhdHVyZSIsCiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgIm5hbWUiOiBkWzBdLAogICAgICAgICAgICAiY3AiOiBkWzNdID09PSAiUG9pbnQiID8gSlNPTi5wYXJzZShkWzRdKSA6IFtdLAogICAgICAgICAgICAibGV2ZWxzIjogMTAsCiAgICAgICAgICAgICJkYXRlIjogZFtkLmxlbmd0aCAtIDFdLnN1YnN0cigwLCAxMCkKICAgICAgICAgIH0sCiAgICAgICAgICAiZ2VvbWV0cnkiOiB7CiAgICAgICAgICAgICJ0eXBlIjogZFsxXSwKICAgICAgICAgICAgImNvb3JkaW5hdGVzIjogSlNPTi5wYXJzZShkWzJdKQogICAgICAgICAgfQogICAgICAgIH07CiAgICAgICAgZmVhdHVyZXMucHVzaChnKTsKICAgICAgfSk7CiAgICAgIGNhbGxiYWNrKHsKICAgICAgICAiZmVhdHVyZXMiOiBmZWF0dXJlcywKICAgICAgICAidHlwZSI6ICJGZWF0dXJlQ29sbGVjdGlvbiIKICAgICAgfSk7CiAgICB9KTsKICB9Cn07IC8vIOW4uOinhOWcsOWbvuWPr+inhuWMlgoKZnVuY3Rpb24gbG9hZFBvbHlnb24obWFwLCBkYXRhKSB7CiAgdmFyIHBsYW5lTGF5ZXIgPSBtYXAuZ2V0TGF5ZXIoJ3BvbHlnb24nKTsKICBpZiAoIXBsYW5lTGF5ZXIpIHBsYW5lTGF5ZXIgPSBuZXcgbWFwdGFsa3MuVmVjdG9yTGF5ZXIoInBvbHlnb24iKS5hZGRUbyhtYXApOwogIHZhciBvcHRpb25zID0gewogICAgJ3BvbHlnb24nOiB7CiAgICAgIHZpc2libGU6IHRydWUsCiAgICAgIGN1cnNvcjogJ3BvaW50ZXInLAogICAgICBzaGFkb3dCbHVyOiAwLAogICAgICBzaGFkb3dDb2xvcjogJ2JsYWNrJywKICAgICAgZHJhZ2dhYmxlOiBmYWxzZSwKICAgICAgZHJhZ1NoYWRvdzogZmFsc2UsCiAgICAgIGRyYXdPbkF4aXM6IG51bGwsCiAgICAgIHN5bWJvbDogewogICAgICAgICdsaW5lQ29sb3InOiAnI2YwMCcsCiAgICAgICAgJ2xpbmVXaWR0aCc6IDEsCiAgICAgICAgJ3BvbHlnb25GaWxsJzogJyNGNTUyNTMnLAogICAgICAgICdwb2x5Z29uT3BhY2l0eSc6IDAuNSwKICAgICAgICAnbGluZUNvbG9ySGlnaGxpZ2h0JzogJyNmMDAnLAogICAgICAgICdwb2x5Z29uRmlsbEhpZ2hsaWdodCc6ICcjZjAwJwogICAgICB9CiAgICB9CiAgfTsKICB2YXIgb3B0aW9uID0gb3B0aW9uc1sncG9seWdvbiddOwogIGRhdGEuZmVhdHVyZXMuZm9yRWFjaChmdW5jdGlvbiAoZikgewogICAgdmFyIHRwID0gZi5nZW9tZXRyeS50eXBlOwogICAgaWYgKCFQT0xZR09OW3RwXSkgcmV0dXJuOwogICAgdmFyIHBvbHlnb24gPSBuZXcgR1JBUEhTW3RwXShmLmdlb21ldHJ5LmNvb3JkaW5hdGVzLCBvcHRpb24pOwogICAgcG9seWdvbi5hZGRUbyhwbGFuZUxheWVyKTsKICAgIGNyZWF0ZUxhYmVsKGYpLmFkZFRvKHBsYW5lTGF5ZXIpOyAvLyBwb2x5Z29uLm9uKCdjbGljaycsICwgdGhpcyk7CiAgfSk7Cn0KCmZ1bmN0aW9uIGNyZWF0ZUxhYmVsKGZlYXR1cmUpIHsKICB2YXIgcG9zID0gZmVhdHVyZS5wcm9wZXJ0aWVzLmNwOwogIHZhciBuYW1lID0gZmVhdHVyZS5wcm9wZXJ0aWVzLm5hbWU7CiAgdmFyIGNvb3JkID0gW3Bvc1swXSwgcG9zWzFdIC0gMC4wMDEyXTsKICB2YXIgbGFiZWwgPSBuZXcgbWFwdGFsa3MuTGFiZWwobmFtZSwgY29vcmQsIHsKICAgICdkcmFnZ2FibGUnOiB0cnVlLAogICAgJ3RleHRTeW1ib2wnOiB7CiAgICAgICd0ZXh0RmFjZU5hbWUnOiAnbW9ub3NwYWNlJywKICAgICAgJ3RleHRGaWxsJzogJyNmMDAnLAogICAgICAndGV4dEhhbG9GaWxsJzogJyNmZmYnLAogICAgICAndGV4dEhhbG9SYWRpdXMnOiA0LAogICAgICAndGV4dFNpemUnOiAxOCwKICAgICAgJ3RleHRXZWlnaHQnOiAnYm9sZCcsCiAgICAgICd0ZXh0VmVydGljYWxBbGlnbm1lbnQnOiAndG9wJwogICAgfSwKICAgICdib3hTdHlsZSc6IHsKICAgICAgJ3BhZGRpbmcnOiBbMTIsIDhdLAogICAgICAnc3ltYm9sJzogewogICAgICAgICdtYXJrZXJGaWxsJzogJyNGRjdGNTAnCiAgICAgIH0KICAgIH0KICB9KTsKICBsYWJlbC5zZXRJbmZvV2luZG93KGdldEluZm8oZmVhdHVyZSkpOwogIGxhYmVsLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHsKICAgIHRoaXMub3BlbkluZm9XaW5kb3coKTsKICB9KTsKICByZXR1cm4gbGFiZWw7Cn0KCmV4cG9ydCB7IE1hcEN0bCwgUE9MWUdPTiwgR1JBUEhTLCBsb2FkUG9seWdvbiB9Ow=="},{"version":3,"sources":["C:/Users/Meng Yin/Desktop/COVID-19-Visualization/www/src/js/map.js"],"names":["Utils","API","MAPS","getInfo","maptalks","POLYGON","GRAPHS","Polygon","MultiPolygon","MapCtl","$this","mapType","map","type","mapConfig","center","zoom","pitch","baseLayer","init","that","getBase","mapStyle","getCookie","ps","split","mapTypes","tile","base","urlTemplate","parseInt","weixing","subdomains","attribution","opacity","spatialReference","getConfig","TileLayer","mapInfo","parseFloat","handleMapMove","p","console","log","target","getCenter","info","x","y","getZoom","join","setCookie","loadData","code","callback","ajaxData","GetDataPos","rst","features","data","forEach","d","g","JSON","parse","length","substr","push","loadPolygon","planeLayer","getLayer","VectorLayer","addTo","options","visible","cursor","shadowBlur","shadowColor","draggable","dragShadow","drawOnAxis","symbol","option","f","tp","geometry","polygon","coordinates","createLabel","feature","pos","properties","cp","name","coord","label","Label","setInfoWindow","on","openInfoWindow"],"mappings":"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","sourcesContent":["import {Utils} from \"./utils\";\nimport {API} from \"./server\";\nimport {MAPS} from './maps';\nimport {getInfo} from \"./building\";\n\nimport * as maptalks from 'maptalks';\n\n\nlet POLYGON = {\"Polygon\": 1, \"MultiPolygon\": 1};\nlet GRAPHS = {'Polygon': maptalks.Polygon, 'MultiPolygon': maptalks.MultiPolygon};\n\n\nlet MapCtl = {\n    $this: null,\n    mapType: {\n        map: \"Gaode\", //  Baidu OpenStreetMap  Mapbox  Gaode\n        type: \"1\"\n    },\n    mapConfig: {\n        center: [104.071927,30.665132],\n        zoom: 14,\n        pitch : 52,\n        baseLayer: null\n    },\n    init (that) {\n        this.$this = that;\n    },\n    getBase () {\n        // 从缓存加载地图\n        let mapStyle = Utils.getCookie(\"mapStyle\");\n        if (mapStyle) {\n            let ps = mapStyle.split(\"_\");\n            this.mapType = {map: ps[0], type: ps[1]};\n            this.mapTypes = mapStyle;\n        }\n        let tile = MAPS[this.mapType.map];\n        let base = {\n            urlTemplate: parseInt(this.mapType.type) ? tile.weixing : tile.urlTemplate,\n            subdomains: tile.subdomains,\n            attribution: tile.attribution,\n            opacity : 1,\n            spatialReference: tile['spatialReference'] || null\n        };\n        // 高德2图使用暗色系\n        if (this.mapType.map === \"Gaode\" && this.mapType.type == \"1\") {\n            base['cssFilter'] = 'sepia(80%) invert(90%)';\n        }\n        return base;\n    },\n    getConfig (base) {\n        base = base || this.getBase();\n        this.mapConfig.baseLayer = new maptalks.TileLayer('base', base);\n        // 从缓存加载地图信息\n        let mapInfo = Utils.getCookie('mapInfo');\n        if (mapInfo && mapInfo !== 'undefined') {\n            let ps = mapInfo.split(\"_\");\n            this.mapConfig.center = [parseFloat(ps[0]), parseFloat(ps[1])];\n            this.mapConfig.zoom = parseInt(ps[2]);\n        }\n\n        // 是否使用视角倾斜\n        if (this.mapType.map === \"Gaode\" && this.mapType.type == \"0\") \n            this.mapConfig.pitch = 0;\n        else\n            this.mapConfig.pitch = 52;\n        return this.mapConfig;\n    },\n    handleMapMove (p) {\n        console.log(1);\n        // 记录用户历史位置\n        let map = p.target;\n        let center = map.getCenter();\n        let info = [center.x, center.y, map.getZoom()].join(\"_\");\n        Utils.setCookie('mapInfo', info);\n    },\n    loadData (code, callback) {\n        Utils.ajaxData(API.GetDataPos, {'code': code}, function (rst) {\n            let features = [];\n            rst.data.forEach(d => {\n                if (!(d[1] in POLYGON)) return;\n                let g = {\n                    \"type\": \"Feature\",\n                    \"properties\": {\n                        \"name\": d[0], \n                        \"cp\": d[3] === \"Point\" ? JSON.parse(d[4]) : [],\n                        \"levels\": 10,\n                        \"date\": d[d.length - 1].substr(0, 10)\n                    },\n                    \"geometry\": {\"type\": d[1], \"coordinates\": JSON.parse(d[2])}\n                };\n                features.push(g);\n            });\n            callback({\"features\": features, \"type\": \"FeatureCollection\"});\n        });\n    }\n}\n\n// 常规地图可视化\nfunction loadPolygon (map, data) {\n    let planeLayer = map.getLayer('polygon');\n    if (!planeLayer) planeLayer = new maptalks.VectorLayer(\"polygon\").addTo(map);\n    let options = {\n        'polygon': {\n            visible : true,\n            cursor : 'pointer',\n            shadowBlur : 0,\n            shadowColor : 'black',\n            draggable : false,\n            dragShadow : false,\n            drawOnAxis : null,\n            symbol: {\n                'lineColor' : '#f00',\n                'lineWidth' : 1,\n                'polygonFill' : '#F55253',\n                'polygonOpacity' : 0.5,\n                'lineColorHighlight' : '#f00',\n                'polygonFillHighlight' : '#f00',\n            }\n        }\n    };\n    let option = options['polygon'];\n    data.features.forEach(function (f) {\n        let tp = f.geometry.type;\n        if (!POLYGON[tp]) return;\n        let polygon = new GRAPHS[tp](f.geometry.coordinates, option);\n        polygon.addTo(planeLayer);\n        createLabel(f).addTo(planeLayer);\n        // polygon.on('click', , this);\n    });\n}\n\nfunction createLabel (feature) {\n    let pos = feature.properties.cp;\n    let name = feature.properties.name;\n    let coord = [pos[0], pos[1] - 0.0012];\n    let label = new maptalks.Label(name,\n        coord,\n        {\n            'draggable' : true,\n            'textSymbol': {\n                'textFaceName' : 'monospace',\n                'textFill' : '#f00',\n                'textHaloFill' : '#fff',\n                'textHaloRadius' : 4,\n                'textSize' : 18,\n                'textWeight' : 'bold',\n                'textVerticalAlignment' : 'top'\n            },\n            'boxStyle' : {\n                'padding' : [12, 8],\n                'symbol' : {\n                    'markerFill' : '#FF7F50'\n                }\n            }\n        }\n    );\n    label.setInfoWindow(getInfo(feature));\n    label.on('click', function () {\n        this.openInfoWindow();\n    });\n    return label;\n}\n\nexport {MapCtl, POLYGON, GRAPHS, loadPolygon};"]}]}