{"remainingRequest":"C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization\\www\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization\\www\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization\\www\\src\\js\\mapChina.js","dependencies":[{"path":"C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization\\www\\src\\js\\mapChina.js","mtime":1587027806882},{"path":"C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization\\www\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization\\www\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization\\www\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucmVkdWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzIjsKaW1wb3J0IHsgVXRpbHMgfSBmcm9tICIuLi9qcy91dGlscyI7CmltcG9ydCBnZXRUaW1lbGluZSBmcm9tICIuL3RpbWVsaW5lIjsKdmFyIG9wdGlvbiA9IHsKICB0aXRsZTogewogICAgdGV4dDogJycsCiAgICB0b3A6IDE1LAogICAgc3VidGV4dDogIueCueWHu+WQhOecgeW4guWcsOWbvuWPr+S4i+mSuyIsCiAgICB0ZXh0U3R5bGU6IHsKICAgICAgY29sb3I6ICcjNDE5N0ZEJywKICAgICAgZm9udFNpemU6IDE2CiAgICB9CiAgfSwKICB2aXN1YWxNYXA6IHsKICAgIG1pbjogMCwKICAgIGxlZnQ6ICdsZWZ0JywKICAgIHRvcDogJ2JvdHRvbScsCiAgICB0ZXh0OiBbJ+mrmCcsICfkvY4nXSwKICAgIGNhbGN1bGFibGU6IHRydWUsCiAgICBpblJhbmdlOiB7CiAgICAgIGNvbG9yOiBbJyNGRkFBODUnLCAnI0ZGN0I2OScsICcjQkYyMTIxJywgJyM3RjE4MTgnXSwKICAgICAgc3ltYm9sU2l6ZTogWzQwLCA0MF0KICAgIH0KICB9LAogIHNlcmllczogW3sKICAgIG5hbWU6ICdjaGluYScsCiAgICB0eXBlOiAnbWFwJywKICAgIG1hcFR5cGU6ICdjaGluYScsCiAgICByb2FtOiBmYWxzZSwKICAgIGxhYmVsOiB7CiAgICAgIGVtcGhhc2lzOiB7CiAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICBmb3JtYXR0ZXI6IGZ1bmN0aW9uIGZvcm1hdHRlcihwKSB7CiAgICAgICAgICB2YXIgdiA9IHAuZGF0YSA/IHAuZGF0YS50YWdzWzJdIDogMDsKICAgICAgICAgIHJldHVybiAne2ZsaW5lfCcgKyBwLm5hbWUgKyAnfVxue3RsaW5lfOehruivijogJyArIHAudmFsdWUgKyAnXG7mrbvkuqHvvJonICsgdiArICd9XG4nOwogICAgICAgIH0sCiAgICAgICAgcG9zaXRpb246ICd0b3AnLAogICAgICAgIGFsaWduOiAnbGVmdCcsCiAgICAgICAgZm9udFNpemU6IDE0LAogICAgICAgIHdpZHRoOiAxNTAsCiAgICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiYSg1MCwgNTAsIDUwLCAwLjgpJywKICAgICAgICBwYWRkaW5nOiBbMCwgMF0sCiAgICAgICAgYm9yZGVyUmFkaXVzOiAzLAogICAgICAgIGNvbG9yOiAnI2Y3ZmFmYicsCiAgICAgICAgcmljaDogewogICAgICAgICAgZmxpbmU6IHsKICAgICAgICAgICAgcGFkZGluZzogWzAsIDUsIDUsIDEwXSwKICAgICAgICAgICAgaGVpZ2h0OiAyMCwKICAgICAgICAgICAgZm9udFNpemU6IDE2LAogICAgICAgICAgICBmb250V2VpZ2h0OiA0MDAsCiAgICAgICAgICAgIGNvbG9yOiAnI0ZGRkZGRicKICAgICAgICAgIH0sCiAgICAgICAgICB0bGluZTogewogICAgICAgICAgICBwYWRkaW5nOiBbMCwgNSwgNSwgMTBdLAogICAgICAgICAgICBjb2xvcjogJyNGNTUyNTMnCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LAogICAgICBub3JtYWw6IHsKICAgICAgICBzaG93OiBmYWxzZQogICAgICB9CiAgICB9LAogICAgaXRlbVN0eWxlOiB7CiAgICAgIG5vcm1hbDogewogICAgICAgIGxhYmVsOiB7CiAgICAgICAgICBzaG93OiBmYWxzZQogICAgICAgIH0KICAgICAgfSwKICAgICAgZW1waGFzaXM6IHsKICAgICAgICBhcmVhQ29sb3I6IG51bGwsCiAgICAgICAgYm9yZGVyQ29sb3I6ICcjQkYyMTIxJywKICAgICAgICBib3JkZXJXaWR0aDogMS41LAogICAgICAgIHNoYWRvd0NvbG9yOiAncmVkJywKICAgICAgICBzaGFkb3dPZmZzZXRYOiAtMSwKICAgICAgICBzaGFkb3dPZmZzZXRZOiAtMSwKICAgICAgICBsYWJlbDogewogICAgICAgICAgc2hvdzogdHJ1ZQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIGRhdGE6IFt7CiAgICAgIG5hbWU6ICfljJfkuqwnLAogICAgICB2YWx1ZTogTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogMTAwMCkKICAgIH1dCiAgfV0KfTsgLy8g5YWo5bGA5Y+Y6YeP77yM6YeN5paw5Yqg6L295pe26ZyA6YeN5paw5Yid5aeL5YyWCgp2YXIgc2Vjb25kTWF4VmFsdWVzID0gW107CnZhciBzdXBlck9wdGlvbiA9IHsKICBiYXNlT3B0aW9uOiB7CiAgICB0aW1lbGluZTogZ2V0VGltZWxpbmUoKSwKICAgIHZpc3VhbE1hcDogb3B0aW9uLnZpc3VhbE1hcCwKICAgIHNlcmllczogb3B0aW9uLnNlcmllcwogIH0sCiAgb3B0aW9uczogW10KfTsKdmFyIGNoYXJ0ID0gewogIG5hbWU6ICJjaGluYSIsCiAgb3B0aW9uOiBvcHRpb24sCiAgc3VwZXJPcHRpb246IHN1cGVyT3B0aW9uLAogIGluaXREYXRhOiBudWxsLAogIGluc3RhbmNlOiBudWxsLAogIHVzZU1heFZhbHVlOiB0cnVlCn07CgpmdW5jdGlvbiBnZXRPcHRpb24oc3JjRGF0YSwgbWFwTmFtZSwgX29wdGlvbikgewogIHZhciBkYXRhID0gVXRpbHMuZm9ybWF0UmVnaW9uKG1hcE5hbWUsIHNyY0RhdGEpOwogIHZhciBzdW0gPSBkYXRhLnJlZHVjZShmdW5jdGlvbiAoYSwgYikgewogICAgcmV0dXJuIGEgKyBiLnZhbHVlOwogIH0sIDApOwogIGRhdGEuc29ydChmdW5jdGlvbiAoYSwgYikgewogICAgcmV0dXJuIGIudmFsdWUgLSBhLnZhbHVlOwogIH0pOwogIF9vcHRpb24udGl0bGUudGV4dCA9ICLlhbHnoa7or4rvvJoiICsgc3VtOwogIGlmIChkYXRhLmxlbmd0aCA+IDApIF9vcHRpb24udGl0bGUuc3VidGV4dCA9IGRhdGFbMF0ubmFtZSArICLvvJoiICsgZGF0YVswXS52YWx1ZTsKICBzZWNvbmRNYXhWYWx1ZXMucHVzaChkYXRhLmxlbmd0aCA8IDIgPyAxMCA6IGRhdGFbMV0udmFsdWUpOwogIF9vcHRpb24uc2VyaWVzWzBdWydkYXRhJ10gPSBkYXRhOwogIGlmICghY2hhcnQudXNlTWF4VmFsdWUpIF9vcHRpb25bJ3Zpc3VhbE1hcCddID0gewogICAgJ21heCc6IHBhcnNlSW50KDEuMjUgKiBzZWNvbmRNYXhWYWx1ZXNbc2Vjb25kTWF4VmFsdWVzLmxlbmd0aCAtIDFdKQogIH07CiAgcmV0dXJuIF9vcHRpb247Cn0gLy8g6ZKI5a+55LqL5Lu25bqP5YiX5pWw5o2u77yM5pWw5o2u5LiK5Y2H5LiA5Liq57u05bqmCi8vIHBhcmFtOiAgIGR0cyA6IHsnMjAyMC0wMi0wMSc6IFtdfQoKCmZ1bmN0aW9uIGdldE9wdGlvbnMoZHRzLCBtYXBOYW1lKSB7CiAgLy8g55CG6K665LiK6K6ydG1z5piv5pyJ5bqP55qE77yM6Iul5LiN5piv5YiZ5bqU5Zyo5q2k5aSE5o6S5bqPCiAgdmFyIHRtcyA9IE9iamVjdC5rZXlzKGR0cyk7CiAgc3VwZXJPcHRpb24uYmFzZU9wdGlvbi50aW1lbGluZS5kYXRhID0gdG1zOwogIHN1cGVyT3B0aW9uLm9wdGlvbnMgPSB0bXMubWFwKGZ1bmN0aW9uIChrKSB7CiAgICB2YXIgX29wdGlvbiA9IHsKICAgICAgdGl0bGU6IHsKICAgICAgICB0ZXh0OiAnJywKICAgICAgICB0b3A6IDU1LAogICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgY29sb3I6ICcjYmJiJywKICAgICAgICAgIGZvbnRTaXplOiAxNgogICAgICAgIH0KICAgICAgfSwKICAgICAgc2VyaWVzOiBbe31dCiAgICB9OwogICAgcmV0dXJuIGdldE9wdGlvbihkdHNba10sIG1hcE5hbWUsIF9vcHRpb24pOwogIH0pOwogIHN1cGVyT3B0aW9uLmJhc2VPcHRpb24udGltZWxpbmUuYXV0b1BsYXkgPSBmYWxzZTsKICBzdXBlck9wdGlvbi5iYXNlT3B0aW9uLnRpbWVsaW5lLmN1cnJlbnRJbmRleCA9IHRtcy5sZW5ndGggLSAxOwogIHJldHVybiBzdXBlck9wdGlvbjsKfSAvLyDpnIDlnKjlnLDlm77ms6jlhozlkI7osIPnlKjvvIzms6jlhozlnLDlm77ml7blupTkvb/nlKhuYW1l5Li65ZCN56ewCgoKY2hhcnQuaW5pdERhdGEgPSBmdW5jdGlvbiAoc3JjRGF0YSwgaWQsIG1hcE5hbWUsIGFsbFRpbWUpIHsKICBtYXBOYW1lID0gbWFwTmFtZSB8fCAiY2hpbmEiOwogIG9wdGlvbi5zZXJpZXNbMF0ubWFwVHlwZSA9IG1hcE5hbWU7CiAgb3B0aW9uLnNlcmllc1swXS5sYWJlbC5ub3JtYWwuc2hvdyA9IG1hcE5hbWUgIT0gImNoaW5hIjsKICBzZWNvbmRNYXhWYWx1ZXMgPSBbXTsKICB2YXIgX29wdGlvbiA9IG9wdGlvbjsKCiAgaWYgKCFhbGxUaW1lKSB7CiAgICBfb3B0aW9uID0gZ2V0T3B0aW9uKHNyY0RhdGEsIG1hcE5hbWUsIF9vcHRpb24pOwogIH0gZWxzZSB7CiAgICBfb3B0aW9uID0gZ2V0T3B0aW9ucyhzcmNEYXRhLCBtYXBOYW1lKTsKICB9IC8vIOminOiJsua4suafk+acgOWkp+WAvO+8jHNlY29uZCAqIDEuMjUKCgogIHZhciBtYXhDb2xvclZhbHVlID0gcGFyc2VJbnQoMS4yNSAqIHNlY29uZE1heFZhbHVlcy5yZWR1Y2UoZnVuY3Rpb24gKGEsIGIpIHsKICAgIHJldHVybiBhID4gYiA/IGEgOiBiOwogIH0pKTsKICBvcHRpb24udmlzdWFsTWFwLm1heCA9IG1heENvbG9yVmFsdWU7CiAgY2hhcnQuaW5zdGFuY2UgPSBVdGlscy5kcmF3R3JhcGgoX29wdGlvbiwgaWQpOwogIHJldHVybiBjaGFydC5pbnN0YW5jZTsKfTsKCnZhciBjaGFydE1hcCA9IGNoYXJ0OwpleHBvcnQgZGVmYXVsdCBjaGFydE1hcDs="},{"version":3,"sources":["C:/Users/Meng Yin/Desktop/COVID-19-Visualization/www/src/js/mapChina.js"],"names":["Utils","getTimeline","option","title","text","top","subtext","textStyle","color","fontSize","visualMap","min","left","calculable","inRange","symbolSize","series","name","type","mapType","roam","label","emphasis","show","formatter","p","v","data","tags","value","position","align","width","backgroundColor","padding","borderRadius","rich","fline","height","fontWeight","tline","normal","itemStyle","areaColor","borderColor","borderWidth","shadowColor","shadowOffsetX","shadowOffsetY","Math","round","random","secondMaxValues","superOption","baseOption","timeline","options","chart","initData","instance","useMaxValue","getOption","srcData","mapName","_option","formatRegion","sum","reduce","a","b","sort","length","push","parseInt","getOptions","dts","tms","Object","keys","map","k","autoPlay","currentIndex","id","allTime","maxColorValue","max","drawGraph","chartMap"],"mappings":"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","sourcesContent":["import {Utils} from \"../js/utils\";\nimport getTimeline from \"./timeline\";\n\nlet option = {\n    title: {\n        text: '', top: 15, subtext: \"点击各省市地图可下钻\",\n        textStyle: {color: '#4197FD', fontSize: 16},\n    },\n    visualMap: {\n        min: 0,\n        left: 'left',\n        top: 'bottom',\n        text: ['高', '低'],\n        calculable: true,\n        inRange: {\n            color: ['#FFAA85', '#FF7B69', '#BF2121', '#7F1818'],\n            symbolSize: [40, 40]\n        }\n    },\n    series: [{\n        name: 'china',\n        type: 'map',\n        mapType: 'china',\n        roam: false,\n        label: {\n            emphasis: {\n                show: true,\n                formatter: function (p) {\n                    let v = p.data ? p.data.tags[2] : 0;\n                    return '{fline|' + p.name + '}\\n{tline|确诊: ' + p.value + '\\n死亡：' + v + '}\\n';\n                },\n                position: 'top',\n                align: 'left',\n                fontSize: 14,\n                width: 150,\n                backgroundColor: 'rgba(50, 50, 50, 0.8)',\n                padding: [0, 0],\n                borderRadius: 3,\n                color: '#f7fafb',\n                rich: {\n                    fline: {\n                        padding: [0, 5, 5, 10],\n                        height: 20,\n                        fontSize: 16,\n                        fontWeight: 400,\n                        color: '#FFFFFF'\n                    },\n                    tline: {\n                        padding: [0, 5, 5, 10],\n                        color: '#F55253'\n                    }\n                }\n            },\n            normal: {\n                show: false\n            }\n        },\n        itemStyle: {\n            normal: {\n                label: {\n                    show: false\n                }\n            },\n            emphasis: {\n                areaColor: null,\n                borderColor: '#BF2121',\n                borderWidth: 1.5,\n                shadowColor: 'red',\n                shadowOffsetX: -1,\n                shadowOffsetY: -1,\n                label: {\n                    show: true\n                }\n            }\n        },\n        data: [\n            {\n                name: '北京',\n                value: Math.round(Math.random() * 1000)\n            }\n        ]\n    }]\n}\n// 全局变量，重新加载时需重新初始化\nlet secondMaxValues = [];\nlet superOption = {\n    baseOption: {\n        timeline: getTimeline(),\n        visualMap: option.visualMap,\n        series: option.series\n    },\n    options: []\n};\n\nlet chart = {\n    name: \"china\",\n    option: option,\n    superOption: superOption,\n    initData: null,\n    instance: null,\n    useMaxValue: true\n}\n\nfunction getOption(srcData, mapName, _option) {\n    let data = Utils.formatRegion(mapName, srcData);\n    let sum = data.reduce((a, b) => a + b.value, 0);\n    data.sort((a, b) => b.value - a.value);\n    _option.title.text = \"共确诊：\" + sum;\n    if (data.length > 0) _option.title.subtext = data[0].name + \"：\" + data[0].value;\n    secondMaxValues.push(data.length < 2 ? 10 : data[1].value);\n    _option.series[0]['data'] = data;\n\n    if (!chart.useMaxValue) _option['visualMap'] = {\n        'max': parseInt(1.25 * secondMaxValues[secondMaxValues.length - 1])\n    };\n    return _option;\n}\n\n// 针对事件序列数据，数据上升一个维度\n// param:   dts : {'2020-02-01': []}\nfunction getOptions(dts, mapName) {\n    // 理论上讲tms是有序的，若不是则应在此处排序\n    let tms = Object.keys(dts);\n    superOption.baseOption.timeline.data = tms;\n    superOption.options = tms.map(k => {\n        let _option = {title: {text: '', top: 55, textStyle: {color: '#bbb', fontSize: 16}}, series: [{}]};\n        return getOption(dts[k], mapName, _option);\n    });\n    superOption.baseOption.timeline.autoPlay = false;\n    superOption.baseOption.timeline.currentIndex = tms.length - 1;\n    return superOption;\n}\n\n// 需在地图注册后调用，注册地图时应使用name为名称\nchart.initData = function (srcData, id, mapName, allTime) {\n    mapName = mapName || \"china\";\n    option.series[0].mapType = mapName;\n    option.series[0].label.normal.show = mapName != \"china\";\n    secondMaxValues = [];\n\n    let _option = option;\n    if (!allTime) {\n        _option = getOption(srcData, mapName, _option);\n    } else {\n        _option = getOptions(srcData, mapName);\n    }\n\n    // 颜色渲染最大值，second * 1.25\n    let maxColorValue = parseInt(1.25 * secondMaxValues.reduce((a, b) => a > b ? a : b));\n    option.visualMap.max = maxColorValue;\n\n    chart.instance = Utils.drawGraph(_option, id);\n    return chart.instance;\n};\n\nlet chartMap = chart;\nexport default chartMap;"]}]}