{"remainingRequest":"C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization-master\\www\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization-master\\www\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization-master\\www\\src\\js\\libs\\ShaderPass.js","dependencies":[{"path":"C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization-master\\www\\src\\js\\libs\\ShaderPass.js","mtime":1584631036000},{"path":"C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization-master\\www\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization-master\\www\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Meng Yin\\Desktop\\COVID-19-Visualization-master\\www\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBhdXRob3IgYWx0ZXJlZHEgLyBodHRwOi8vYWx0ZXJlZHF1YWxpYS5jb20vCiAqLwppbXBvcnQgKiBhcyBUSFJFRSBmcm9tICJ0aHJlZSI7CgpUSFJFRS5TaGFkZXJQYXNzID0gZnVuY3Rpb24gKHNoYWRlciwgdGV4dHVyZUlEKSB7CiAgVEhSRUUuUGFzcy5jYWxsKHRoaXMpOwogIHRoaXMudGV4dHVyZUlEID0gdGV4dHVyZUlEICE9PSB1bmRlZmluZWQgPyB0ZXh0dXJlSUQgOiAidERpZmZ1c2UiOwoKICBpZiAoc2hhZGVyIGluc3RhbmNlb2YgVEhSRUUuU2hhZGVyTWF0ZXJpYWwpIHsKICAgIHRoaXMudW5pZm9ybXMgPSBzaGFkZXIudW5pZm9ybXM7CiAgICB0aGlzLm1hdGVyaWFsID0gc2hhZGVyOwogIH0gZWxzZSBpZiAoc2hhZGVyKSB7CiAgICB0aGlzLnVuaWZvcm1zID0gVEhSRUUuVW5pZm9ybXNVdGlscy5jbG9uZShzaGFkZXIudW5pZm9ybXMpOwogICAgdGhpcy5tYXRlcmlhbCA9IG5ldyBUSFJFRS5TaGFkZXJNYXRlcmlhbCh7CiAgICAgIGRlZmluZXM6IE9iamVjdC5hc3NpZ24oe30sIHNoYWRlci5kZWZpbmVzKSwKICAgICAgdW5pZm9ybXM6IHRoaXMudW5pZm9ybXMsCiAgICAgIHZlcnRleFNoYWRlcjogc2hhZGVyLnZlcnRleFNoYWRlciwKICAgICAgZnJhZ21lbnRTaGFkZXI6IHNoYWRlci5mcmFnbWVudFNoYWRlcgogICAgfSk7CiAgfQoKICB0aGlzLmZzUXVhZCA9IG5ldyBUSFJFRS5QYXNzLkZ1bGxTY3JlZW5RdWFkKHRoaXMubWF0ZXJpYWwpOwp9OwoKVEhSRUUuU2hhZGVyUGFzcy5wcm90b3R5cGUgPSBPYmplY3QuYXNzaWduKE9iamVjdC5jcmVhdGUoVEhSRUUuUGFzcy5wcm90b3R5cGUpLCB7CiAgY29uc3RydWN0b3I6IFRIUkVFLlNoYWRlclBhc3MsCiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIocmVuZGVyZXIsIHdyaXRlQnVmZmVyLCByZWFkQnVmZmVyLCBkZWx0YVRpbWUsIG1hc2tBY3RpdmUpIHsKICAgIGlmICh0aGlzLnVuaWZvcm1zW3RoaXMudGV4dHVyZUlEXSkgewogICAgICB0aGlzLnVuaWZvcm1zW3RoaXMudGV4dHVyZUlEXS52YWx1ZSA9IHJlYWRCdWZmZXIudGV4dHVyZTsKICAgIH0KCiAgICB0aGlzLmZzUXVhZC5tYXRlcmlhbCA9IHRoaXMubWF0ZXJpYWw7CgogICAgaWYgKHRoaXMucmVuZGVyVG9TY3JlZW4pIHsKICAgICAgcmVuZGVyZXIuc2V0UmVuZGVyVGFyZ2V0KG51bGwpOwogICAgICB0aGlzLmZzUXVhZC5yZW5kZXIocmVuZGVyZXIpOwogICAgfSBlbHNlIHsKICAgICAgcmVuZGVyZXIuc2V0UmVuZGVyVGFyZ2V0KHdyaXRlQnVmZmVyKTsgLy8gVE9ETzogQXZvaWQgdXNpbmcgYXV0b0NsZWFyIHByb3BlcnRpZXMsIHNlZSBodHRwczovL2dpdGh1Yi5jb20vbXJkb29iL3RocmVlLmpzL3B1bGwvMTU1NzEjaXNzdWVjb21tZW50LTQ2NTY2OTYwMAoKICAgICAgaWYgKHRoaXMuY2xlYXIpIHJlbmRlcmVyLmNsZWFyKHJlbmRlcmVyLmF1dG9DbGVhckNvbG9yLCByZW5kZXJlci5hdXRvQ2xlYXJEZXB0aCwgcmVuZGVyZXIuYXV0b0NsZWFyU3RlbmNpbCk7CiAgICAgIHRoaXMuZnNRdWFkLnJlbmRlcihyZW5kZXJlcik7CiAgICB9CiAgfQp9KTsKdmFyIFNoYWRlclBhc3MgPSBUSFJFRS5TaGFkZXJQYXNzOwpleHBvcnQgZGVmYXVsdCBTaGFkZXJQYXNzOw=="},{"version":3,"sources":["C:/Users/Meng Yin/Desktop/COVID-19-Visualization-master/www/src/js/libs/ShaderPass.js"],"names":["THREE","ShaderPass","shader","textureID","Pass","call","undefined","ShaderMaterial","uniforms","material","UniformsUtils","clone","defines","Object","assign","vertexShader","fragmentShader","fsQuad","FullScreenQuad","prototype","create","constructor","render","renderer","writeBuffer","readBuffer","deltaTime","maskActive","value","texture","renderToScreen","setRenderTarget","clear","autoClearColor","autoClearDepth","autoClearStencil"],"mappings":"AAAA;;;AAGA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEAA,KAAK,CAACC,UAAN,GAAmB,UAAWC,MAAX,EAAmBC,SAAnB,EAA+B;AAEjDH,EAAAA,KAAK,CAACI,IAAN,CAAWC,IAAX,CAAiB,IAAjB;AAEA,OAAKF,SAAL,GAAmBA,SAAS,KAAKG,SAAhB,GAA8BH,SAA9B,GAA0C,UAA3D;;AAEA,MAAKD,MAAM,YAAYF,KAAK,CAACO,cAA7B,EAA8C;AAE7C,SAAKC,QAAL,GAAgBN,MAAM,CAACM,QAAvB;AAEA,SAAKC,QAAL,GAAgBP,MAAhB;AAEA,GAND,MAMO,IAAKA,MAAL,EAAc;AAEpB,SAAKM,QAAL,GAAgBR,KAAK,CAACU,aAAN,CAAoBC,KAApB,CAA2BT,MAAM,CAACM,QAAlC,CAAhB;AAEA,SAAKC,QAAL,GAAgB,IAAIT,KAAK,CAACO,cAAV,CAA0B;AAEzCK,MAAAA,OAAO,EAAEC,MAAM,CAACC,MAAP,CAAe,EAAf,EAAmBZ,MAAM,CAACU,OAA1B,CAFgC;AAGzCJ,MAAAA,QAAQ,EAAE,KAAKA,QAH0B;AAIzCO,MAAAA,YAAY,EAAEb,MAAM,CAACa,YAJoB;AAKzCC,MAAAA,cAAc,EAAEd,MAAM,CAACc;AALkB,KAA1B,CAAhB;AASA;;AAED,OAAKC,MAAL,GAAc,IAAIjB,KAAK,CAACI,IAAN,CAAWc,cAAf,CAA+B,KAAKT,QAApC,CAAd;AACA,CA5BD;;AA8BAT,KAAK,CAACC,UAAN,CAAiBkB,SAAjB,GAA6BN,MAAM,CAACC,MAAP,CAAeD,MAAM,CAACO,MAAP,CAAepB,KAAK,CAACI,IAAN,CAAWe,SAA1B,CAAf,EAAsD;AAElFE,EAAAA,WAAW,EAAErB,KAAK,CAACC,UAF+D;AAIlFqB,EAAAA,MAAM,EAAE,gBAAWC,QAAX,EAAqBC,WAArB,EAAkCC,UAAlC,EAA8CC,SAA9C,EAAyDC,UAAzD,EAAsE;AAE7E,QAAK,KAAKnB,QAAL,CAAe,KAAKL,SAApB,CAAL,EAAuC;AAEtC,WAAKK,QAAL,CAAe,KAAKL,SAApB,EAAgCyB,KAAhC,GAAwCH,UAAU,CAACI,OAAnD;AAEA;;AAED,SAAKZ,MAAL,CAAYR,QAAZ,GAAuB,KAAKA,QAA5B;;AAEA,QAAK,KAAKqB,cAAV,EAA2B;AAE1BP,MAAAA,QAAQ,CAACQ,eAAT,CAA0B,IAA1B;AACA,WAAKd,MAAL,CAAYK,MAAZ,CAAoBC,QAApB;AAEA,KALD,MAKO;AAENA,MAAAA,QAAQ,CAACQ,eAAT,CAA0BP,WAA1B,EAFM,CAGN;;AACA,UAAK,KAAKQ,KAAV,EAAkBT,QAAQ,CAACS,KAAT,CAAgBT,QAAQ,CAACU,cAAzB,EAAyCV,QAAQ,CAACW,cAAlD,EAAkEX,QAAQ,CAACY,gBAA3E;AAClB,WAAKlB,MAAL,CAAYK,MAAZ,CAAoBC,QAApB;AAEA;AAED;AA5BiF,CAAtD,CAA7B;AAgCA,IAAItB,UAAU,GAAGD,KAAK,CAACC,UAAvB;AACA,eAAeA,UAAf","sourcesContent":["/**\n * @author alteredq / http://alteredqualia.com/\n */\nimport * as THREE from \"three\";\n\nTHREE.ShaderPass = function ( shader, textureID ) {\n\n\tTHREE.Pass.call( this );\n\n\tthis.textureID = ( textureID !== undefined ) ? textureID : \"tDiffuse\";\n\n\tif ( shader instanceof THREE.ShaderMaterial ) {\n\n\t\tthis.uniforms = shader.uniforms;\n\n\t\tthis.material = shader;\n\n\t} else if ( shader ) {\n\n\t\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\t\tthis.material = new THREE.ShaderMaterial( {\n\n\t\t\tdefines: Object.assign( {}, shader.defines ),\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t} );\n\n\t}\n\n\tthis.fsQuad = new THREE.Pass.FullScreenQuad( this.material );\n};\n\nTHREE.ShaderPass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\n\n\tconstructor: THREE.ShaderPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer, deltaTime, maskActive ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\n\n\t\t}\n\n\t\tthis.fsQuad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t}\n\n} );\n\nlet ShaderPass = THREE.ShaderPass;\nexport default ShaderPass;"]}]}